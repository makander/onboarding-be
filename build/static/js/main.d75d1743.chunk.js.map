{"version":3,"sources":["reducers/AuthReducer.js","context/AuthContext.jsx","components/Start.jsx","services/UserService.js","components/Login.jsx","components/Register.jsx","components/Home.jsx","components/Sidebar.jsx","components/Navbar.jsx","routes/ProtectedRoute.jsx","services/ListService.js","services/DepartmentService.js","services/TaskService.js","components/CreateTask.jsx","components/TaskDropDown.jsx","components/List.jsx","components/Departments.jsx","components/Department.jsx","components/CreateTemplate.jsx","services/EmployeeService.js","components/CreateEmployee.jsx","components/Lists.jsx","components/TemplateList.jsx","components/EmployeeLists.jsx","components/EditList.jsx","App.jsx","serviceWorker.js","index.js"],"names":["authReducer","state","action","type","userIsAuthenticated","user","payload","AuthContext","createContext","AuthContextProvider","children","useReducer","authStatus","dispatch","Provider","value","Start","Grid","container","centered","columns","style","marginTop","Row","Column","width","textAlign","Segment","stacked","Header","size","to","Button","loginUser","data","a","axios","post","logoutUser","id","registerUser","edit","put","destroy","delete","findAll","get","then","res","findOne","Login","props","history","useState","email","setEmail","password","setPassword","useContext","Form","onSubmit","e","preventDefault","UserService","push","catch","err","console","log","Field","name","placeholder","required","onChange","target","fluid","Register","firstName","setFirstName","lastName","setLastName","htmlFor","Home","setUser","useEffect","tablet","computer","length","margin","float","Tasks","List","map","task","Item","ListId","Departments","department","Loader","active","inline","Sidebar","Menu","vertical","color","minHeight","paddingLeft","inverted","fixed","as","Link","Navbar","only","top","paddingTop","ProtectedRoute","Component","component","render","stackable","redirectTo","all","update","create","allLists","allTasks","removeUser","getTasks","getAtask","userId","listId","deleteTask","updateTask","taskId","createTask","CreateTask","setTask","listsId","title","setTitle","description","setDescription","Group","newTask","status","TaskService","Input","label","TextArea","TaskDropDown","options","TaskServiceUpdateTask","select","setSelect","Select","onClick","content","Lists","list","setList","setOptions","departments","setDepartments","useParams","ListService","DepartmentService","opts","flatMap","Users","text","filter","v","i","findIndex","t","item","key","padding","verticalAlign","User","floated","compact","UserId","Checkbox","checked","taskStatus","taskData","handleStatus","positive","templateList","handleComplete","Message","secondary","negative","Department","setName","users","setUsers","handleClick","undefined","concat","multiple","clearable","loader","setLoader","departmentsId","filterOptions","entry1","some","entry2","updatedDepartment","Dimmer","Image","src","divided","Content","CreateTemplate","setDepartment","Dropdown","selection","CreateEmployee","selectTemplate","setSelectTemplate","address","setAddress","phoneNumber","setPhoneNumber","office","setOffice","setTemplateList","templateOptions","template","EmployeeService","control","header","lists","setLists","viewAll","setViewAll","viewCompleted","setViewCompleted","viewIncomplete","setViewIncomplete","listContent","completedLists","incompleted","relaxed","TemplateList","EmployeeList","EditList","listName","setListName","o1","o2","Divider","celled","uuidv4","departmentId","deleteDepartment","addedDepartment","defaults","withCredentials","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d75d1743.chunk.js","sourcesContent":["const authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: true,\r\n        user: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: false,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport authReducer from '../reducers/AuthReducer';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [authStatus, dispatch] = useReducer(authReducer, {\r\n    userIsAuthenticated: false,\r\n    user: {},\r\n  });\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authStatus, dispatch }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React from 'react';\r\nimport { Segment, Header, Button, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Start = () => (\r\n  <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n    <Grid.Row centered>\r\n      <Grid.Column width={10} textAlign=\"center\">\r\n        <Segment stacked>\r\n          <Header size=\"large\">Welcome to Border</Header>\r\n          <p>Welcome to Border the task manager for teams</p>\r\n          <Link to=\"login\">\r\n            <Button>Login</Button>\r\n          </Link>\r\n\r\n          <Link to=\"register\">\r\n            <Button>Register</Button>\r\n          </Link>\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n  </Grid>\r\n);\r\n\r\nexport default Start;\r\n","import axios from 'axios';\r\n\r\nconst loginUser = async (data) => axios.post(`/api/user/login`, data);\r\n\r\nconst logoutUser = async (id) => axios.post(id);\r\n\r\nconst registerUser = async (data) => axios.post(`/api/user/register`, data);\r\n\r\nconst edit = async (id) => axios.put(id);\r\n\r\nconst destroy = async (id) => axios.delete(id);\r\n\r\nconst findAll = async () => axios.get(`/api/user/all`).then((res) => res.data);\r\n\r\nconst findOne = async () => axios.get(`/api/user/`).then((res) => res.data);\r\n\r\nexport default {\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  edit,\r\n  destroy,\r\n  findAll,\r\n  findOne,\r\n};\r\n","import React, { useState, useContext } from 'react';\r\n// import { navigate } from '@reach/router';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport UserService from '../services/UserService';\r\n\r\nconst Login = (props) => {\r\n  const { history } = props;\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    UserService.loginUser({ email, password })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: res.data.user,\r\n        });\r\n\r\n        history.push('/home');\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Login to Border</Header>\r\n            <Form onSubmit={handleLogin}>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n              <p>\r\n                Don&apos;t have an account? Sign up&nbsp;\r\n                <Link to=\"/register\">here</Link>.\r\n              </p>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>{' '}\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\n\r\nconst Register = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegistration = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post('/api/user/register', {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n      })\r\n      .then(() => {\r\n        history.push('/');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container centered columns={1}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Signup to Border</Header>\r\n            <Form onSubmit={handleRegistration}>\r\n              <Form.Field>\r\n                <label htmlFor=\"First Name\">First name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Last Name\">Last Name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Email\">Email</label>\r\n                <input\r\n                  placeholder=\"Enter Email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Password\">Password</label>\r\n                <input\r\n                  placeholder=\"Enter Password\"\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Segment, Grid, Header, Loader } from 'semantic-ui-react';\r\nimport UserService from '../services/UserService';\r\n\r\nconst Home = () => {\r\n  const [user, setUser] = useState([]);\r\n  useEffect(() => {\r\n    UserService.findOne().then((res) => setUser(res));\r\n    console.log(user);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid.Column centered tablet={14} computer={12}>\r\n      {user != null && user.length !== 0 ? (\r\n        <>\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header float=\"left\" textAlign=\"left\">\r\n              Welcome {user.firstName} {user.lastName}\r\n            </Header>\r\n          </div>\r\n\r\n          <Segment>\r\n            {user.Tasks != null && user.Tasks.length !== 0 ? (\r\n              <>\r\n                <Header>Tasks</Header>\r\n                <p>You are assigned to {user.Tasks.length} tasks.</p>\r\n                <List>\r\n                  {user.Tasks.map((task) => (\r\n                    <List.Item>\r\n                      <Link to={`/lists/${task.ListId}`}>{task.name}</Link>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            ) : (\r\n              'You are not assigned to any tasks'\r\n            )}\r\n          </Segment>\r\n          <Segment>\r\n            {user.Departments != null && user.Departments.length !== 0 ? (\r\n              <>\r\n                <Header>Tasks</Header>\r\n                <p>You a member of the following departments:</p>\r\n                <List>\r\n                  {user.Departments.map((department) => (\r\n                    <List.Item>{department.name}</List.Item>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <p>\r\n                  Please join or create a\r\n                  <Link to=\"/departments\">department</Link>\r\n                </p>\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Segment style={{ margin: '2em 0' }}>\r\n          <Loader active inline=\"centered\" size=\"huge\">\r\n            Loading\r\n          </Loader>\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Menu, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <Menu\r\n      vertical\r\n      color=\"grey\"\r\n      style={{ marginTop: '0.5em', minHeight: '100vh', paddingLeft: '-1rem' }}\r\n      inverted\r\n      fixed\r\n    >\r\n      <Menu.Item as={Link} name=\"Home\" to=\"/home\" />\r\n      <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n\r\n      <Menu.Item as={Link} name=\"Templates\" to=\"/templates\" />\r\n      <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n\r\n      <Menu.Item>\r\n        <Menu.Menu>\r\n          <Menu.Item name=\"\">logout</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useContext } from 'react';\r\nimport { Menu, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Navbar = () => {\r\n  const {\r\n    authStatus: {\r\n      user: { id },\r\n    },\r\n  } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Grid.Row only=\"mobile tablet\">\r\n      <Menu top inverted style={{ width: '100%', paddingTop: '1em' }}>\r\n        <Menu.Item as={Link} name=\"Home\" to=\"/home\" />\r\n\r\n        <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n\r\n        <Menu.Item as={Link} name=\"Templates\" to=\"/templates\" />\r\n        <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n        <Menu.Item name=\"\">logout</Menu.Item>\r\n      </Menu>\r\n    </Grid.Row>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ContentWrap from '../components/ContentWrap';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  const { authStatus } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        authStatus.userIsAuthenticated ? (\r\n          <>\r\n            <Grid stackable columns={16}>\r\n              <Navbar />\r\n              <Grid.Row>\r\n                <Grid.Column only=\"computer\" width={3}>\r\n                  <Sidebar />\r\n                </Grid.Column>\r\n\r\n                <Grid.Column centered tablet={14} computer={12}>\r\n                  <Component {...props} />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Redirect to={props.redirectTo ? props.redirectTo : '/'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/list`).then((res) => res.data);\r\n\r\nconst get = async (id) => axios.get(`/api/list/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/list/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/list/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) =>\r\n  axios.post(`/api/list`, data).then((res) => res.data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst all = async () =>\r\n  axios.get(`/api/department/all`).then((res) => res.data);\r\n\r\nconst allLists = async () =>\r\n  axios.get(`/api/department/lists`).then((res) => res.data);\r\n\r\nconst allTasks = async () =>\r\n  axios.get(`/api/department/tasks`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/department/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/department/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/department/${id}`, data).then((res) => res.data);\r\n\r\nconst removeUser = async (id, data) =>\r\n  axios\r\n    .delete(`/api/department/${id}/user`, {\r\n      data,\r\n    })\r\n    .then((res) => res.data);\r\n\r\n/* const findAllDepartmentTasks = async () =>\r\n  axios\r\n    .get(`/api/department/tasks`)\r\n    .then((res) => res.data);\r\n\r\nconst findAllDepartmentLists = async () =>\r\n  axios\r\n    .get(`/api/department/lists`)\r\n    .then((res) => console.log(res));\r\n */\r\nconst create = async (data) => axios.post(`/api/department`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n  removeUser,\r\n  /*   findAllDepartmentTasks,\r\n  findAllDepartmentLists, */\r\n  allLists,\r\n  allTasks,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst getTasks = async () => axios.get(`/api/list`);\r\n\r\nconst getAtask = async (userId, listId) => axios.get(`/api/list/${listId}`);\r\n\r\nconst deleteTask = async (id) => axios.delete();\r\n\r\nconst updateTask = async (taskId, data) =>\r\n  axios.put(`/api/task/${taskId}`, data);\r\n\r\nconst createTask = async (data) => axios.post(`/api/task/`, data);\r\n\r\nexport default {\r\n  getTasks,\r\n  getAtask,\r\n  deleteTask,\r\n  updateTask,\r\n  createTask,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Segment } from 'semantic-ui-react';\r\n\r\nimport TaskService from '../services/TaskService';\r\n\r\nconst CreateTask = ({ setTask, listsId }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // const [user, setUser] = useState('');\r\n\r\n  const handleNewTask = () => {\r\n    const newTask = {\r\n      name: title,\r\n      description,\r\n      ListId: listsId,\r\n      status: false,\r\n    };\r\n\r\n    TaskService.createTask(newTask).then((res) => {\r\n      setTask(res.data);\r\n      setTitle('');\r\n      setDescription('');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Segment>\r\n        <Form.Group>\r\n          <Form onSubmit={handleNewTask}>\r\n            <Form.Input\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n\r\n            <Form.TextArea\r\n              placeholder=\"Description\"\r\n              label=\"Description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              name=\"textarea\"\r\n            />\r\n\r\n            <Form.Button type=\"submit\">Save</Form.Button>\r\n          </Form>\r\n        </Form.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nconst selectStyle = {\r\n  width: 200,\r\n  marginTop: '0.5em',\r\n};\r\n\r\nconst TaskDropDown = ({ options, TaskServiceUpdateTask, id, setTask }) => {\r\n  const [select, setSelect] = useState('');\r\n\r\n  const handleClick = (taskId) => {\r\n    const taskData = {\r\n      userId: select,\r\n    };\r\n    TaskServiceUpdateTask(taskId, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n    setSelect('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group inline>\r\n        <Form.Select\r\n          placeholder=\"Assign User\"\r\n          options={options}\r\n          onChange={handleSelect}\r\n          value={select}\r\n        />\r\n\r\n        <Form.Button onClick={() => handleClick(id)} content=\"Save\" />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskDropDown;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Form,\r\n  Container,\r\n  Grid,\r\n  Segment,\r\n  Header,\r\n  Button,\r\n  Message,\r\n  Loader,\r\n  Dimmer,\r\n} from 'semantic-ui-react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../services/ListService';\r\nimport DepartmentService from '../services/DepartmentService';\r\nimport CreateTask from './CreateTask';\r\nimport TaskService from '../services/TaskService';\r\nimport TaskDropDown from './TaskDropDown';\r\n\r\nconst Lists = ({ history }) => {\r\n  const [list, setList] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [select, setSelect] = useState();\r\n\r\n  const [task, setTask] = useState([]);\r\n\r\n  const listsId = useParams();\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      console.log(res);\r\n      setList(res);\r\n    });\r\n    DepartmentService.allTasks(listsId.id).then((res) => {\r\n      setDepartments(res);\r\n    });\r\n    DepartmentService.allLists(listsId.id).then((res) => {\r\n      const format = res.flatMap((user) =>\r\n        user.Users.map(({ id, firstName, lastName }) => ({\r\n          value: id,\r\n          text: `${firstName} ${lastName}`,\r\n        }))\r\n      );\r\n\r\n      const opts = format.filter(\r\n        (v, i, a) => a.findIndex((t) => t.value === v.value) === i\r\n      );\r\n      setOptions(opts);\r\n    });\r\n  }, [task]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    e.preventDefault();\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleStatus = (taskStatus, taskId) => {\r\n    const taskData = {\r\n      status: !taskStatus,\r\n    };\r\n\r\n    TaskService.updateTask(taskId, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const removeUser = (id) => {\r\n    const taskData = {\r\n      UserId: null,\r\n    };\r\n\r\n    TaskService.updateTask(id, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const data = {\r\n      name: list.name,\r\n      description: list.description,\r\n      status: true,\r\n      templateList: list.templateList,\r\n    };\r\n\r\n    ListService.update(list.id, data).then((res) => {\r\n      history.push('/lists');\r\n    });\r\n  };\r\n\r\n  const deleteList = () => {\r\n    ListService.destroy(listsId.id).then(() => history.push('/lists'));\r\n  };\r\n\r\n  const CompleteSegment = () => {\r\n    return list.Tasks != null &&\r\n      list.Tasks.length !== 0 &&\r\n      list.status !== true ? (\r\n      <>\r\n        {list.Tasks.filter((item) => item.status).length ===\r\n        list.Tasks.length ? (\r\n          <Button positive fluid onClick={() => handleComplete()}>\r\n            Complete list\r\n          </Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </>\r\n    ) : list.status === true ? (\r\n      <Message positive>This list has been completed</Message>\r\n    ) : (\r\n      <Loader />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column centered tablet={14} computer={12}>\r\n      {list != null && list.length !== 0 ? (\r\n        <>\r\n          <div style={{ margin: '2em 0' }}>\r\n            {/*      <Header as=\"h2\" textAlign=\"left\">\r\n              {/* ? `Task for template:  ${list.name}`\r\n            : `Tasks for:  ${list.name}` \r\n              {list.templateList != null\r\n                ? `Task for template:  ${list.name}`\r\n                : `Tasks for:  ${list.name}`}\r\n            </Header> */}\r\n          </div>\r\n\r\n          <Grid stackable textAlign=\"left\">\r\n            {list.Tasks != null && list.Tasks.length !== 0 ? (\r\n              list.Tasks.map((item) => (\r\n                <Grid.Row key={item.id} style={{ padding: '0' }}>\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"3\">\r\n                    {item.name}\r\n                  </Grid.Column>\r\n                  <Grid.Column verticalAlign=\"middle\" tablet=\"3\" computer=\"5\">\r\n                    {item.User != null && item.User != null ? (\r\n                      <>\r\n                        <p>\r\n                          Assigned: {item.User.firstName} {item.User.lastName}\r\n                          <Button\r\n                            floated=\"right\"\r\n                            compact\r\n                            onClick={() => removeUser(item.id)}\r\n                          >\r\n                            x\r\n                          </Button>\r\n                        </p>\r\n                      </>\r\n                    ) : (\r\n                      'No assigned user'\r\n                    )}\r\n                  </Grid.Column>\r\n\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"5\">\r\n                    <TaskDropDown\r\n                      options={options}\r\n                      TaskServiceUpdateTask={TaskService.updateTask}\r\n                      id={item.id}\r\n                      setTask={setTask}\r\n                    />\r\n                  </Grid.Column>\r\n\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                    <Form>\r\n                      <Form.Checkbox\r\n                        inline\r\n                        label=\"completed\"\r\n                        checked={item.status}\r\n                        onChange={() => handleStatus(item.status, item.id)}\r\n                      />\r\n                    </Form>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <p>No tasks available for this list.</p>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <CompleteSegment />\r\n\r\n          <>\r\n            <Header>Add task</Header>\r\n            <CreateTask\r\n              setTask={setTask}\r\n              listsId={listsId.id}\r\n              departments={departments}\r\n            />\r\n            <Button.Group floated=\"right\">\r\n              <Button secondary>\r\n                <Link\r\n                  style={{ color: 'White' }}\r\n                  to={`/lists/edit/${listsId.id}`}\r\n                >\r\n                  Edit\r\n                </Link>\r\n              </Button>\r\n\r\n              <Button negative onClick={() => deleteList()}>\r\n                Delete\r\n              </Button>\r\n            </Button.Group>\r\n          </>\r\n        </>\r\n      ) : (\r\n        <Segment style={{ margin: '2em 0' }}>\r\n          <Loader active inline=\"centered\" size=\"huge\">\r\n            Loading\r\n          </Loader>\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Form,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  Container,\r\n} from 'semantic-ui-react';\r\nimport DepartmentService from '../services/DepartmentService';\r\n\r\nimport UserService from '../services/UserService';\r\n\r\nconst Department = () => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // UserService.findAll().then((res) => setUsers(res));\r\n    UserService.findAll().then((res) => setUsers(res));\r\n    DepartmentService.all().then((res) => {\r\n      setDepartments(res);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    const department = {\r\n      name,\r\n      description,\r\n      users: select,\r\n    };\r\n\r\n    DepartmentService.create(department).then((res) => {\r\n      setDepartments(departments.concat([res.data]));\r\n    });\r\n    setSelect([]);\r\n    setName('');\r\n    setDescription();\r\n  };\r\n\r\n  const options = users.map(({ id, firstName, lastName }) => ({\r\n    value: id,\r\n    text: `${firstName} ${lastName}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleClick = (id) => {\r\n    DepartmentService.destroy(id);\r\n    const filter = departments.filter((department) => department.id !== id);\r\n    setDepartments(filter);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Departments\r\n        </Header>\r\n      </div>\r\n      <Segment>\r\n        {departments.length !== null && departments.length !== 0 ? (\r\n          <Grid stackable columns={13} textAlign=\"left\">\r\n            {departments.map((item) => (\r\n              <Grid.Row key={item.id} centered>\r\n                <Grid.Column verticalAlign=\"middle\" computer=\"4\">\r\n                  <Link to={`/departments/${item.id}`}>{item.name}</Link>\r\n                </Grid.Column>\r\n                <Grid.Column verticalAlign=\"middle\" computer=\"4\">\r\n                  {item.Users !== undefined ? item.Users.length : null}\r\n                </Grid.Column>\r\n                <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                  <Button onClick={() => handleClick(item.id)}>Delete</Button>\r\n                </Grid.Column>\r\n                <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                  <Button onClick={() => handleClick(item.id)}>Edit</Button>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            ))}\r\n          </Grid>\r\n        ) : (\r\n          <p>No departments available, please create one below</p>\r\n        )}\r\n      </Segment>\r\n      {users.length > 0 ? (\r\n        <Grid.Column width=\"13\">\r\n          <Header as=\"h3\">Create new department</Header>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={onSubmit}>\r\n                <Form.Input\r\n                  placeholder=\"Enter department name\"\r\n                  label=\"Department name\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                {/*        <TextArea\r\n                placeholder=\"Description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                setInputValue={setDescription}\r\n                name=\"textarea\"\r\n              />\r\n */}\r\n\r\n                <Form.Select\r\n                  placeholder=\"Add user to department\"\r\n                  options={options}\r\n                  onChange={handleSelect}\r\n                  value={select}\r\n                  multiple\r\n                  clearable\r\n                />\r\n                <Form.Button type=\"submit\">Save</Form.Button>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      ) : null}{' '}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Segment,\r\n  Form,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n  Container,\r\n  List,\r\n} from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useParams } from 'react-router-dom';\r\n// import { navigate } from '@reach/router';\r\nimport DepartmentService from '../services/DepartmentService';\r\nimport UserService from '../services/UserService';\r\n\r\nconst Department = ({ history }) => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  const departmentsId = useParams();\r\n\r\n  useEffect(() => {\r\n    DepartmentService.get(departmentsId.id).then((res) => {\r\n      setDepartments(res);\r\n    });\r\n    UserService.findAll().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = users.filter(\r\n      (entry1) =>\r\n        departments.Users &&\r\n        !departments.Users.some((entry2) => entry1.id === entry2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, firstName, lastName }) => ({\r\n      value: id,\r\n      text: `${firstName} ${lastName}`,\r\n    }));\r\n    setOptions(filterOptions);\r\n    setLoader(false);\r\n  }, [users, departments]);\r\n\r\n  const onSubmit = () => {\r\n    if (name === '' && select.length === 0) {\r\n      const updatedDepartment = {\r\n        name: departments.name,\r\n        users: departments.Users,\r\n      };\r\n      DepartmentService.update(departmentsId.id, updatedDepartment).then(\r\n        (res) => {\r\n          setDepartments(res);\r\n        }\r\n      );\r\n    } else {\r\n      const data = {\r\n        name,\r\n        users: select,\r\n      };\r\n\r\n      DepartmentService.update(departmentsId.id, data).then((res) => {\r\n        setDepartments(res);\r\n      });\r\n    }\r\n    setSelect([]);\r\n    setName('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    console.log(departments.id);\r\n    console.log(departmentsId.id);\r\n    DepartmentService.destroy(departmentsId.id);\r\n    history.push('/departments');\r\n  };\r\n\r\n  const handleClick = (e, id) => {\r\n    e.preventDefault();\r\n    DepartmentService.removeUser(departmentsId.id, { UserId: id }).then(\r\n      (res) => {\r\n        setDepartments(res);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Edit: {departments.name}\r\n        </Header>\r\n      </div>\r\n      {!loader ? (\r\n        <Grid stackable columns={16}>\r\n          <Grid.Column width=\"16\">\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Change name on department: {departments.name}</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Input\r\n                      placeholder=\"New name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <Form.Button content=\"Save\" />\r\n                  </Form.Group>\r\n                </Form>\r\n                <Form onSubmit={handleDelete}>\r\n                  <Form.Button>Delete</Form.Button>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n            <Grid.Row>\r\n              <Segment style={{ marginTop: '2em' }}>\r\n                <Header>Users in department: </Header>\r\n                {departments.Users !== undefined &&\r\n                departments.Users.length !== 0 ? (\r\n                  departments.Users.map((item) => (\r\n                    <List divided key={item.id}>\r\n                      <List.Item>\r\n                        <List.Content floated=\"left\" verticalAlign=\"bottom\">\r\n                          {item.firstName} {item.lastName}\r\n                        </List.Content>\r\n                        <List.Content verticalAlign=\"top\">\r\n                          <Button\r\n                            compact\r\n                            onClick={(e) => handleClick(e, item.id)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                ) : (\r\n                  <p>No users members in this department</p>\r\n                )}\r\n              </Segment>\r\n            </Grid.Row>\r\n\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Add users</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Select\r\n                      placeholder=\"Add user to department\"\r\n                      options={options}\r\n                      onChange={handleSelect}\r\n                      value={select}\r\n                      multiple\r\n                      clearable\r\n                    />\r\n\r\n                    <Form.Button type=\"submit\">Save</Form.Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      ) : (\r\n        <Segment>\r\n          <Dimmer active inverted>\r\n            <Loader size=\"large\">Loading</Loader>\r\n          </Dimmer>\r\n\r\n          <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Dropdown,\r\n} from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport ListService from '../services/ListService';\r\nimport DepartmentService from '../services/DepartmentService';\r\n\r\nconst CreateTemplate = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n\r\n  const [department, setDepartment] = useState([]);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.all().then((res) => setDepartment(res));\r\n  }, []);\r\n\r\n  const options = department.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: title,\r\n      description,\r\n      departments: select,\r\n      status: false,\r\n      templateList: true,\r\n    };\r\n\r\n    ListService.create(data).then((res) => {\r\n      if (res.templateList) {\r\n        history.push(`/lists/${res.id}`);\r\n      }\r\n      setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n    });\r\n    /*     setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n   */\r\n    /*     if (templateList) {\r\n        navigate('/home');\r\n      } */\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"10\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Create new template</Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={handleNewList}>\r\n                <Form.Input\r\n                  placeholder=\"Title\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                {options ? (\r\n                  <Dropdown\r\n                    placeholder=\"Select departments\"\r\n                    fluid\r\n                    label=\"Department\"\r\n                    multiple\r\n                    // search\r\n                    selection\r\n                    value={select}\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    // defaultValue={[]}\r\n                    clearable\r\n                  />\r\n                ) : null}\r\n                <div style={{ marginTop: '1em' }}>\r\n                  <Button type=\"submit\">Save</Button>\r\n                </div>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default CreateTemplate;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/employee/all`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/employee/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/employee/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/employee/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) => axios.post(`/api/employee`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Segment, Input, Button, Grid, Header } from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport EmployeeService from '../services/EmployeeService';\r\nimport ListService from '../services/ListService';\r\n\r\nconst CreateEmployee = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [office, setOffice] = useState('');\r\n  const [templateList, setTemplateList] = useState([]);\r\n\r\n  const templateOptions = templateList.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelectTemplate = (e, { value }) => {\r\n    setSelectTemplate(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ListService.all().then((res) => {\r\n      const template = res.filter((item) => item.templateList);\r\n      setTemplateList(template);\r\n    });\r\n  }, []);\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n    if (selectTemplate !== undefined) {\r\n      const data = {\r\n        listId: selectTemplate,\r\n        description,\r\n        departments: select,\r\n        status: false,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phoneNumber,\r\n        address,\r\n        office,\r\n        title,\r\n      };\r\n\r\n      EmployeeService.create(data).then(() => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setFirstName('');\r\n        setLastName('');\r\n        setOffice('');\r\n        setAddress('');\r\n        setEmail('');\r\n        setPhoneNumber('');\r\n        history.push('/lists');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Create new list</Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={handleNewList}>\r\n                <Form.Input\r\n                  placeholder=\"First name\"\r\n                  label=\"First name\"\r\n                  type=\"text\"\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Last name\"\r\n                  label=\"Last name\"\r\n                  type=\"text\"\r\n                  value={lastName}\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Title\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Email\"\r\n                  label=\"Email\"\r\n                  type=\"text\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Adress\"\r\n                  label=\"Adress\"\r\n                  type=\"text\"\r\n                  value={address}\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Phone Number\"\r\n                  label=\"Phone number\"\r\n                  control={Input}\r\n                  type=\"text\"\r\n                  value={phoneNumber}\r\n                  onChange={(e) => setPhoneNumber(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Office\"\r\n                  label=\"Office\"\r\n                  type=\"text\"\r\n                  value={office}\r\n                  onChange={(e) => setOffice(e.target.value)}\r\n                />\r\n\r\n                {templateOptions ? (\r\n                  <Form.Select\r\n                    placeholder=\"Use template\"\r\n                    options={templateOptions}\r\n                    onChange={handleSelectTemplate}\r\n                    value={select}\r\n                    clearable\r\n                  />\r\n                ) : null}\r\n\r\n                <Button type=\"submit\">Save</Button>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport DepartmentService from '../services/DepartmentService';\r\nimport ListService from '../services/ListService';\r\n\r\nconst Lists = ({ history, template, header }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.allLists().then((res) => {\r\n      setLists(res);\r\n      console.log(res);\r\n    });\r\n\r\n    ListService.all((res) => console.log(res));\r\n  }, []);\r\n\r\n  const handleIncomplete = () => {\r\n    setViewIncomplete(true);\r\n    setViewCompleted(false);\r\n    setViewAll(false);\r\n  };\r\n  const handleCompleted = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(true);\r\n    setViewAll(false);\r\n  };\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  // return <>Lists</>;\r\n  const DisplayList = () => {\r\n    let listContent;\r\n\r\n    // const taskFilter = item.Tasks.filter((task) => task.status !== true).length;\r\n\r\n    // eslint-disable-next-line no-unused-expressions\r\n    template\r\n      ? (listContent = lists[0].Lists.filter((item) => item.templateList))\r\n      : (listContent = lists[0].Lists.filter((item) => !item.templateList));\r\n\r\n    const completedLists = listContent.filter((item) => item.status);\r\n    const incompleted = listContent.filter((item) => !item.status);\r\n\r\n    return lists[0].Lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? incompleted.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewCompleted\r\n          ? completedLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewAll\r\n          ? listContent.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p>{template ? 'No templates available' : 'No lists available'}</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          {header}\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          {// eslint-disable-next-line no-nested-ternary\r\n          lists != null && lists.length !== 0 ? (\r\n            <>\r\n              <Button.Group>\r\n                <Button onClick={() => handleIncomplete()}>Incomplete</Button>\r\n                <Button onClick={() => handleCompleted()}>Completed</Button>\r\n                <Button onClick={() => handleAll()}>All</Button>\r\n              </Button.Group>\r\n              <Segment>\r\n                {' '}\r\n                <DisplayList />\r\n              </Segment>\r\n\r\n              {template ? (\r\n                <Link to=\"/templates/create\">\r\n                  <Button>New template</Button>\r\n                </Link>\r\n              ) : (\r\n                <Link to=\"/lists/create\">\r\n                  <Button>New employee list</Button>\r\n                </Link>\r\n              )}\r\n            </>\r\n          ) : (\r\n            'No lists available, please join a department first'\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React from 'react';\r\n\r\nimport Lists from './Lists';\r\n\r\nconst TemplateList = () => {\r\n  return <Lists template header=\"Templates\" />;\r\n};\r\n\r\nexport default TemplateList;\r\n","import React from 'react';\r\n\r\nimport Lists from './Lists';\r\n\r\nconst EmployeeList = () => {\r\n  return <Lists header=\"Employee lists\" />;\r\n};\r\n\r\nexport default EmployeeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../services/ListService';\r\nimport DepartmentService from '../services/DepartmentService';\r\n\r\nconst EditList = ({ history }) => {\r\n  const [list, setList] = useState([]);\r\n  const listsId = useParams();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [listName, setListName] = useState();\r\n  const [departments, setDepartments] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [templateList, setTemplateList] = useState('');\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      setList(res);\r\n    });\r\n    DepartmentService.all().then((res) => {\r\n      setDepartments(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = departments.filter((o1) =>\r\n      list.Departments.some((o2) => o1.id !== o2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, name }) => ({\r\n      value: id,\r\n      text: name,\r\n    }));\r\n\r\n    setOptions(filterOptions);\r\n  }, [departments]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    if (select !== undefined) {\r\n      const data = {\r\n        name: listName !== list.name ? listName : list.name,\r\n        description:\r\n          description !== list.description ? description : list.description,\r\n        addedDepartment: select,\r\n        status: false,\r\n        templateList: templateList !== list.templateList ? templateList : title,\r\n      };\r\n\r\n      console.log(data);\r\n\r\n      ListService.update(listsId.id, data).then((res) => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setList(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = (id) => {\r\n    console.log('click', id);\r\n    const filter = list.Departments.filter(\r\n      (department) => department.id !== id\r\n    );\r\n\r\n    const data = {\r\n      departmentId: id,\r\n    };\r\n\r\n    ListService.update(listsId.id, data).then((res) => {\r\n      console.log(res);\r\n      setList(res);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Edit list: {list.name}</Header>\r\n      </div>\r\n      {list.name !== undefined && departments !== undefined ? (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Header as=\"h4\">Summary for {list.name}</Header>\r\n              {list.description ? <p>Decription: {list.description}</p> : ''}\r\n              <Divider />\r\n\r\n              <h5>Template:</h5>\r\n              {list.templateList ? <p>Yes</p> : <p>No</p>}\r\n\r\n              <Header as=\"h5\">Departments:</Header>\r\n              {list.Departments !== undefined\r\n                ? list.Departments.map((item) => (\r\n                    <List celled>\r\n                      <List.Item key={uuidv4()}>\r\n                        <List.Content floated=\"left\">{item.name}</List.Content>\r\n                        <List.Content floated=\"right\">\r\n                          <Button\r\n                            compact\r\n                            onClick={() => deleteDepartment(item.id)}\r\n                          >\r\n                            X\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                : ''}\r\n              <Button floated=\"right\">Delete</Button>\r\n              <br />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment>\r\n              <Form.Group>\r\n                <Form onSubmit={handleUpdate}>\r\n                  <Form.Input\r\n                    placeholder=\"enter new name\"\r\n                    label=\"New name\"\r\n                    type=\"text\"\r\n                    value={listName}\r\n                    onChange={(e) => setListName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.TextArea\r\n                    placeholder=\"Enter description\"\r\n                    label=\"New description\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Select\r\n                    placeholder=\"Add department\"\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    value={select}\r\n                    clearable\r\n                  />\r\n\r\n                  <Form.Checkbox\r\n                    inline\r\n                    label=\"Template\"\r\n                    checked={list.templateList}\r\n                  />\r\n\r\n                  <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n              </Form.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthContextProvider from './context/AuthContext';\r\nimport Start from './components/Start';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Home from './components/Home';\r\nimport ProtectedRoute from './routes/ProtectedRoute';\r\nimport List from './components/List';\r\nimport Departments from './components/Departments';\r\nimport Department from './components/Department';\r\nimport CreateTemplate from './components/CreateTemplate';\r\nimport CreateEmployee from './components/CreateEmployee';\r\nimport TemplateList from './components/TemplateList';\r\nimport EmployeeList from './components/EmployeeLists';\r\nimport EditList from './components/EditList';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <AuthContextProvider>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Start} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/register\" exact component={Register} />\r\n\r\n            <ProtectedRoute path=\"/home\" component={Home} />\r\n\r\n            <ProtectedRoute path=\"/lists\" exact component={EmployeeList} />\r\n            <ProtectedRoute\r\n              path=\"/lists/create\"\r\n              exact\r\n              component={CreateEmployee}\r\n            />\r\n            <ProtectedRoute path=\"/lists/edit/:id\" exact component={EditList} />\r\n            <ProtectedRoute path=\"/lists/:id\" exact component={List} />\r\n\r\n            <ProtectedRoute\r\n              path=\"/templates/create\"\r\n              exact\r\n              component={CreateTemplate}\r\n            />\r\n            <ProtectedRoute path=\"/templates\" exact component={TemplateList} />\r\n\r\n            <ProtectedRoute path=\"/departments\" exact component={Departments} />\r\n            <ProtectedRoute\r\n              path=\"/departments/:id\"\r\n              exact\r\n              component={Department}\r\n            />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </AuthContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}