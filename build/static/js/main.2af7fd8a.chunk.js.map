{"version":3,"sources":["reducers/AuthReducer.js","context/AuthContext.jsx","services/UserService.js","components/Start.jsx","reducers/messageReducer.js","context/MessageContext.jsx","components/auth/Login.jsx","components/auth/Register.jsx","components/Home.jsx","components/navigation/Sidebar.jsx","components/navigation/Navbar.jsx","routes/ProtectedRoute.jsx","services/ListService.js","services/DepartmentService.js","services/TaskService.js","components/task/CreateTask.jsx","components/task/TaskDropDown.jsx","components/list/List.jsx","components/department/Departments.jsx","components/department/Department.jsx","components/list/CreateTemplate.jsx","services/EmployeeService.js","components/list/CreateEmployee.jsx","components/list/TemplateList.jsx","components/list/EmployeeLists.jsx","components/list/EditList.jsx","components/users/Users.jsx","components/users/User.jsx","components/list/AdminLists.jsx","components/list/Lists.jsx","components/Notification.js","App.jsx","serviceWorker.js","index.js"],"names":["authReducer","state","action","type","userIsAuthenticated","user","payload","AuthContext","createContext","AuthContextProvider","children","useReducer","authStatus","dispatch","Provider","value","loginUser","data","a","axios","post","logoutUser","registerUser","edit","id","put","destroy","delete","findAll","get","then","res","findOne","refresh","Start","useContext","history","useHistory","useEffect","UserService","push","catch","error","console","log","Grid","container","centered","columns","style","marginTop","Row","Column","width","textAlign","Segment","stacked","Header","size","to","Button","messageReducer","status","message","MessageContext","MessageProvider","dispatchMessage","Login","props","useState","email","setEmail","password","setPassword","onSubmit","e","preventDefault","response","Field","name","placeholder","required","onChange","target","fluid","Register","firstName","setFirstName","lastName","setLastName","htmlFor","Home","profile","setProfile","tablet","computer","length","margin","float","Tasks","List","map","task","Item","ListId","admin","Departments","department","Loader","active","inline","Sidebar","Menu","vertical","color","minHeight","paddingLeft","inverted","fixed","as","Link","onClick","Navbar","only","top","paddingTop","ProtectedRoute","Component","component","render","stackable","redirectTo","all","update","create","allLists","allTasks","removeUser","getTasks","getAtask","userId","listId","deleteTask","updateTask","taskId","createTask","CreateTask","setTask","listsId","title","setTitle","description","setDescription","Group","newTask","TaskService","Input","label","TextArea","TaskDropDown","options","TaskServiceUpdateTask","select","setSelect","Form","Select","content","Lists","list","setList","setOptions","departments","setDepartments","useParams","ListService","DepartmentService","opts","flatMap","Users","text","filter","v","i","findIndex","t","UserId","templateList","Employee","verticalAlign","phoneNumber","office","item","key","padding","User","floated","compact","Checkbox","checked","taskStatus","taskData","handleStatus","positive","forEach","handleComplete","Message","secondary","negative","Department","setName","users","setUsers","undefined","concat","multiple","clearable","loader","setLoader","departmentsId","filterOptions","entry1","some","entry2","updatedDepartment","Dimmer","Image","src","divided","Content","handleClick","CreateTemplate","setDepartment","Dropdown","selection","CreateEmployee","selectTemplate","setSelectTemplate","address","setAddress","setPhoneNumber","setOffice","setTemplateList","templateOptions","template","EmployeeService","control","TemplateList","lists","setLists","templates","EmployeeLists","viewAll","setViewAll","viewCompleted","setViewCompleted","viewIncomplete","setViewIncomplete","listContent","completedLists","incompleted","relaxed","EditList","listName","setListName","o1","o2","Divider","celled","uuidv4","departmentId","deleteDepartment","addedDepartment","display","usersId","setUser","setlastName","setAdmin","AdminLists","header","employeeLists","Notification","setTimeout","info","defaults","withCredentials","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2af7fd8a.chunk.js","sourcesContent":["const authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: true,\r\n        user: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: false,\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport authReducer from '../reducers/AuthReducer';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [authStatus, dispatch] = useReducer(authReducer, {\r\n    userIsAuthenticated: false,\r\n    user: {},\r\n  });\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authStatus, dispatch }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import axios from 'axios';\r\n\r\nconst loginUser = async (data) => axios.post(`/api/user/login`, data);\r\n\r\nconst logoutUser = async () => axios.post(`/api/user/logout`);\r\n\r\nconst registerUser = async (data) => axios.post(`/api/user/register`, data);\r\n\r\nconst edit = async (id, data) => axios.put(`/api/user/${id}`, data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/user/${id}`);\r\n\r\nconst findAll = async () => axios.get(`/api/user/`).then((res) => res.data);\r\n\r\nconst findOne = async (id) =>\r\n  axios.get(`/api/user/${id}`).then((res) => res.data);\r\n\r\nconst refresh = async () => axios.post(`/api/user/refresh`);\r\n\r\nexport default {\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  edit,\r\n  destroy,\r\n  findAll,\r\n  findOne,\r\n  refresh,\r\n};\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { Segment, Header, Button, Grid } from 'semantic-ui-react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport UserService from '../services/UserService';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Start = () => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    UserService.refresh()\r\n      .then((res) => {\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: res.data.user,\r\n        });\r\n\r\n        history.push('/home');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width={10} textAlign=\"center\">\r\n          <Segment stacked>\r\n            <Header size=\"large\">Welcome to Border</Header>\r\n            <p>Welcome to Border the task manager for teams</p>\r\n            <Link to=\"login\">\r\n              <Button>Login</Button>\r\n            </Link>\r\n\r\n            <Link to=\"register\">\r\n              <Button>Register</Button>\r\n            </Link>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","const messageReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INFO':\r\n      return {\r\n        ...state,\r\n        status: 'info',\r\n        message: action.payload,\r\n      };\r\n    case 'ERROR':\r\n      return {\r\n        ...state,\r\n        status: 'negative',\r\n        message: action.payload,\r\n      };\r\n    case 'SUCCESS':\r\n      return {\r\n        ...state,\r\n        status: 'positive',\r\n        message: action.payload,\r\n      };\r\n    case 'CLEAR':\r\n      return {\r\n        ...state,\r\n        status: '',\r\n        message: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messageReducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\nimport messageReducer from '../reducers/messageReducer';\r\n\r\nexport const MessageContext = createContext();\r\n\r\n\r\nconst MessageProvider = ({ children }) => {\r\n  const [state, dispatchMessage] = useReducer(messageReducer, {\r\n    message: '',\r\n    status: '',\r\n  });\r\n\r\n  return (\r\n    <MessageContext.Provider value={{ state, dispatchMessage }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MessageProvider;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport UserService from '../../services/UserService';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Login = (props) => {\r\n  const { history } = props;\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n  const { dispatch } = useContext(AuthContext);\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    UserService.loginUser({ email, password })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: res.data.user,\r\n        });\r\n\r\n        history.push('/home');\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Login to Border</Header>\r\n            <Form onSubmit={handleLogin}>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n              <p>\r\n                Don&apos;t have an account? Sign up&nbsp;\r\n                <Link to=\"/register\">here</Link>.\r\n              </p>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>{' '}\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Register = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  const handleRegistration = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post('/api/user/register', {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n      })\r\n      .then(() => {\r\n        dispatchMessage({\r\n          type: 'SUCCESS',\r\n          payload: 'registered',\r\n        });\r\n        history.push('/');\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container centered columns={1}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Signup to Border</Header>\r\n            <Form onSubmit={handleRegistration}>\r\n              <Form.Field>\r\n                <label htmlFor=\"First Name\">First name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Last Name\">Last Name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Email\">Email</label>\r\n                <input\r\n                  placeholder=\"Enter Email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Password\">Password</label>\r\n                <input\r\n                  placeholder=\"Enter Password\"\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Segment, Grid, Header, Loader } from 'semantic-ui-react';\r\nimport UserService from '../services/UserService';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { MessageContext } from '../context/MessageContext';\r\n\r\nconst Home = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  const [profile, setProfile] = useState([]);\r\n  useEffect(() => {\r\n    UserService.findOne(user.id)\r\n      .then((res) => setProfile(res))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid.Column centered tablet={14} computer={12}>\r\n      {profile != null && profile.length !== 0 ? (\r\n        <>\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header float=\"left\" textAlign=\"left\">\r\n              Welcome {user.firstName} {user.lastName}\r\n            </Header>\r\n          </div>\r\n\r\n          <Segment>\r\n            {profile.Tasks != null && profile.Tasks.length !== 0 ? (\r\n              <>\r\n                <Header>Tasks</Header>\r\n                <p>You are assigned to {profile.Tasks.length} tasks.</p>\r\n                <List>\r\n                  {profile.Tasks.map((task) => (\r\n                    <List.Item>\r\n                      <Link to={`/lists/${task.ListId}`}>{task.name}</Link>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            ) : (\r\n              'You are not assigned to any tasks'\r\n            )}\r\n          </Segment>\r\n\r\n          <Segment>\r\n            {!user.admin && user.Departments.length === 0\r\n              ? 'You are not assigned to a department, contact admin'\r\n              : user.admin && user.Departments.length === 0\r\n              ? 'You are not assigned to a department, please join or create one'\r\n              : ''}\r\n\r\n            {user.Departments != null && user.Departments.length !== 0 ? (\r\n              <>\r\n                <Header>Departments</Header>\r\n\r\n                <p>You a member of the following departments:</p>\r\n                <List>\r\n                  {user.Departments.map((department) => (\r\n                    <List.Item>{department.name}</List.Item>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Segment style={{ margin: '2em 0' }}>\r\n          <Loader active inline=\"centered\" size=\"huge\">\r\n            Loading\r\n          </Loader>\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport UserService from '../../services/UserService';\r\n\r\nconst Sidebar = () => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    dispatch,\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    UserService.logoutUser().then(() => {\r\n      dispatch({\r\n        type: 'LOGOUT',\r\n      });\r\n\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      vertical\r\n      color=\"grey\"\r\n      style={{ marginTop: '0.5em', minHeight: '100vh', paddingLeft: '-1rem' }}\r\n      inverted\r\n      fixed\r\n    >\r\n      <Menu.Item as={Link} name=\"Home\" to=\"/home\" />\r\n      <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n      {user != null && user.admin != null ? (\r\n        <>\r\n          <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n          <Menu.Item as={Link} name=\"Users\" to=\"/users\" />\r\n          <Menu.Item as={Link} name=\"Profile\" to={`/users/${user.id}`} />\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Menu.Item>\r\n        <Menu.Menu>\r\n          <Menu.Item onClick={handleLogout}>logout</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useContext } from 'react';\r\nimport { Menu, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Navbar = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Grid.Row only=\"mobile tablet\">\r\n      <Menu top inverted style={{ width: '100%', paddingTop: '1em' }}>\r\n        <Menu.Item as={Link} name=\"Home\" to=\"/home\" />\r\n\r\n        <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n\r\n        {user != null && user.admin != null ? (\r\n          <>\r\n            <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n            <Menu.Item as={Link} name=\"Users\" to=\"/users\" />\r\n          </>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Menu.Item name=\"\">logout</Menu.Item>\r\n      </Menu>\r\n    </Grid.Row>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Sidebar from '../components/navigation/Sidebar';\r\nimport Navbar from '../components/navigation/Navbar';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  const { authStatus } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        authStatus.userIsAuthenticated ? (\r\n          <>\r\n            <Grid stackable columns={16}>\r\n              <Navbar />\r\n              <Grid.Row>\r\n                <Grid.Column only=\"computer\" width={3}>\r\n                  <Sidebar />\r\n                </Grid.Column>\r\n\r\n                <Grid.Column centered tablet={14} computer={12}>\r\n                  <Component {...props} />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Redirect to={props.redirectTo ? props.redirectTo : '/'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/list`).then((res) => res.data);\r\n\r\nconst get = async (id) => axios.get(`/api/list/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/list/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/list/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) =>\r\n  axios.post(`/api/list`, data).then((res) => res.data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst all = async () =>\r\n  axios.get(`/api/department/all`).then((res) => res.data);\r\n\r\nconst allLists = async () =>\r\n  axios.get(`/api/department/lists`).then((res) => res.data);\r\n\r\nconst allTasks = async () =>\r\n  axios.get(`/api/department/tasks`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/department/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/department/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/department/${id}`, data).then((res) => res.data);\r\n\r\nconst removeUser = async (id, data) =>\r\n  axios\r\n    .delete(`/api/department/${id}/user`, {\r\n      data,\r\n    })\r\n    .then((res) => res.data);\r\n\r\n/* const findAllDepartmentTasks = async () =>\r\n  axios\r\n    .get(`/api/department/tasks`)\r\n    .then((res) => res.data);\r\n\r\nconst findAllDepartmentLists = async () =>\r\n  axios\r\n    .get(`/api/department/lists`)\r\n    .then((res) => console.log(res));\r\n */\r\nconst create = async (data) => axios.post(`/api/department`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n  removeUser,\r\n  /*   findAllDepartmentTasks,\r\n  findAllDepartmentLists, */\r\n  allLists,\r\n  allTasks,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst getTasks = async () => axios.get(`/api/list`);\r\n\r\nconst getAtask = async (userId, listId) => axios.get(`/api/list/${listId}`);\r\n\r\nconst deleteTask = async (id) => axios.delete();\r\n\r\nconst updateTask = async (taskId, data) =>\r\n  axios.put(`/api/task/${taskId}`, data);\r\n\r\nconst createTask = async (data) => axios.post(`/api/task/`, data);\r\n\r\nexport default {\r\n  getTasks,\r\n  getAtask,\r\n  deleteTask,\r\n  updateTask,\r\n  createTask,\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { Form, Segment } from 'semantic-ui-react';\r\n\r\nimport TaskService from '../../services/TaskService';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst CreateTask = ({ setTask, listsId }) => {\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // const [user, setUser] = useState('');\r\n\r\n  const handleNewTask = () => {\r\n    const newTask = {\r\n      name: title,\r\n      description,\r\n      ListId: listsId,\r\n      status: false,\r\n    };\r\n\r\n    TaskService.createTask(newTask)\r\n      .then((res) => {\r\n        setTask(res.data);\r\n        setTitle('');\r\n        setDescription('');\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Segment>\r\n        <Form.Group>\r\n          <Form onSubmit={handleNewTask}>\r\n            <Form.Input\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n\r\n            <Form.TextArea\r\n              placeholder=\"Description\"\r\n              label=\"Description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              name=\"textarea\"\r\n            />\r\n\r\n            <Form.Button type=\"submit\">Save</Form.Button>\r\n          </Form>\r\n        </Form.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import React, { useState } from 'react';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst selectStyle = {\r\n  width: 200,\r\n  marginTop: '0.5em',\r\n};\r\n\r\nconst TaskDropDown = ({ options, TaskServiceUpdateTask, id, setTask }) => {\r\n  const [select, setSelect] = useState('');\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n  const handleClick = (taskId) => {\r\n    const taskData = {\r\n      userId: select,\r\n    };\r\n    TaskServiceUpdateTask(taskId, taskData)\r\n      .then((res) => {\r\n        setTask([res]);\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n    setSelect('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group inline>\r\n        <Form.Select\r\n          placeholder=\"Assign User\"\r\n          options={options}\r\n          onChange={handleSelect}\r\n          value={select}\r\n        />\r\n\r\n        <Form.Button onClick={() => handleClick(id)} content=\"Save\" />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskDropDown;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\n\r\nimport {\r\n  Form,\r\n  Grid,\r\n  Segment,\r\n  Header,\r\n  Button,\r\n  Message,\r\n  Loader,\r\n  List,\r\n} from 'semantic-ui-react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport CreateTask from '../task/CreateTask';\r\nimport TaskService from '../../services/TaskService';\r\nimport TaskDropDown from '../task/TaskDropDown';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Lists = ({ history }) => {\r\n  const [list, setList] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [select, setSelect] = useState();\r\n\r\n  const [task, setTask] = useState([]);\r\n\r\n  const listsId = useParams();\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      console.log(res);\r\n      setList(res);\r\n    });\r\n    DepartmentService.allTasks(listsId.id).then((res) => {\r\n      setDepartments(res);\r\n    });\r\n    DepartmentService.allLists(listsId.id).then((res) => {\r\n      const format = res.flatMap((user) =>\r\n        user.Users.map(({ id, firstName, lastName }) => ({\r\n          value: id,\r\n          text: `${firstName} ${lastName}`,\r\n        }))\r\n      );\r\n\r\n      const opts = format.filter(\r\n        (v, i, a) => a.findIndex((t) => t.value === v.value) === i\r\n      );\r\n      setOptions(opts);\r\n    });\r\n  }, [task]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    e.preventDefault();\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleStatus = (taskStatus, taskId) => {\r\n    const taskData = {\r\n      status: !taskStatus,\r\n    };\r\n\r\n    TaskService.updateTask(taskId, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const removeUser = (id) => {\r\n    const taskData = {\r\n      UserId: null,\r\n    };\r\n\r\n    TaskService.updateTask(id, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const data = {\r\n      name: list.name,\r\n      description: list.description,\r\n      status: true,\r\n      templateList: list.templateList,\r\n    };\r\n\r\n    ListService.update(list.id, data).then(() => {\r\n      list.Tasks.forEach((t) => {\r\n        removeUser(t.id);\r\n      });\r\n      history.push('/lists');\r\n    });\r\n  };\r\n\r\n  const deleteList = () => {\r\n    ListService.destroy(listsId.id).then(() => history.push('/lists'));\r\n  };\r\n\r\n  const CompleteSegment = () => {\r\n    return list.Tasks != null &&\r\n      list.Tasks.length !== 0 &&\r\n      list.status !== true ? (\r\n      <>\r\n        {list.Tasks.filter((item) => item.status).length ===\r\n        list.Tasks.length ? (\r\n          <Button positive fluid onClick={() => handleComplete()}>\r\n            Complete list\r\n          </Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </>\r\n    ) : list.status === true ? (\r\n      <Message positive>This list has been completed</Message>\r\n    ) : (\r\n      <Loader />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column centered tablet={14} computer={12}>\r\n      {list != null && list.length !== 0 ? (\r\n        <>\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header as=\"h2\" textAlign=\"left\">\r\n              {list.templateList != null\r\n                ? `Task for template:  ${list.name}`\r\n                : `Tasks for:  ${list.name}`}\r\n            </Header>\r\n          </div>\r\n\r\n          <Grid stackable textAlign=\"left\">\r\n            {list.Tasks != null && list.Employee ? (\r\n              <Grid.Row>\r\n                {console.log(list.Tasks)}\r\n                {console.log(list)}\r\n                <Grid.Column verticalAlign=\"middle\">\r\n                  <Segment>\r\n                    <Header as=\"h3\">Employee information</Header>\r\n                    <List>\r\n                      <List.Item>\r\n                        <p>\r\n                          Name: {list.Employee.firstName}{' '}\r\n                          {list.Employee.lastName}\r\n                        </p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Title: {list.Employee.title}</p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Phone: {list.Employee.phoneNumber}</p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Office: {list.Employee.office}</p>\r\n                      </List.Item>\r\n                    </List>\r\n                  </Segment>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {list.Tasks != null && list.Tasks.length !== 0 ? (\r\n              list.Tasks.map((item) => (\r\n                <Grid.Row key={item.id} style={{ padding: '0' }}>\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"3\">\r\n                    {item.name}\r\n                  </Grid.Column>\r\n                  <Grid.Column verticalAlign=\"middle\" tablet=\"3\" computer=\"5\">\r\n                    {item.User != null && item.User != null ? (\r\n                      <>\r\n                        <p>\r\n                          Assigned: {item.User.firstName} {item.User.lastName}\r\n                          <Button\r\n                            floated=\"right\"\r\n                            compact\r\n                            onClick={() => removeUser(item.id)}\r\n                          >\r\n                            x\r\n                          </Button>\r\n                        </p>\r\n                      </>\r\n                    ) : (\r\n                      'No assigned user'\r\n                    )}\r\n                  </Grid.Column>\r\n\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"5\">\r\n                    <TaskDropDown\r\n                      options={options}\r\n                      TaskServiceUpdateTask={TaskService.updateTask}\r\n                      id={item.id}\r\n                      setTask={setTask}\r\n                    />\r\n                  </Grid.Column>\r\n\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                    <Form>\r\n                      <Form.Checkbox\r\n                        inline\r\n                        label=\"completed\"\r\n                        checked={item.status}\r\n                        onChange={() => handleStatus(item.status, item.id)}\r\n                      />\r\n                    </Form>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <p>No tasks available for this list.</p>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <CompleteSegment />\r\n\r\n          <>\r\n            <Header>Add task</Header>\r\n            <CreateTask\r\n              setTask={setTask}\r\n              listsId={listsId.id}\r\n              departments={departments}\r\n            />\r\n\r\n            {user.admin ? (\r\n              <Button.Group floated=\"right\">\r\n                <Button secondary>\r\n                  <Link\r\n                    style={{ color: 'White' }}\r\n                    to={`/lists/edit/${listsId.id}`}\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                </Button>\r\n\r\n                <Button negative onClick={() => deleteList()}>\r\n                  Delete\r\n                </Button>\r\n              </Button.Group>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </>\r\n        </>\r\n      ) : (\r\n        <Segment style={{ margin: '2em 0' }}>\r\n          <Loader active inline=\"centered\" size=\"huge\">\r\n            Loading\r\n          </Loader>\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Form, Segment, Grid, Header } from 'semantic-ui-react';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport UserService from '../../services/UserService';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Department = () => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    // UserService.findAll().then((res) => setUsers(res));\r\n    UserService.findAll()\r\n      .then((res) => setUsers(res))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n    DepartmentService.all()\r\n      .then((res) => {\r\n        setDepartments(res);\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    const department = {\r\n      name,\r\n      description,\r\n      users: select,\r\n    };\r\n\r\n    DepartmentService.create(department).then((res) => {\r\n      setDepartments(departments.concat([res.data]));\r\n    });\r\n    setSelect([]);\r\n    setName('');\r\n    setDescription();\r\n  };\r\n\r\n  const options = users.map(({ id, firstName, lastName }) => ({\r\n    value: id,\r\n    text: `${firstName} ${lastName}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  /*   const handleClick = (id) => {\r\n    DepartmentService.destroy(id);\r\n    const filter = departments.filter((department) => department.id !== id);\r\n    setDepartments(filter);\r\n  }; */\r\n\r\n  return (\r\n    <>\r\n      {user.admin ? (\r\n        <Grid.Column width=\"13\">\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header as=\"h2\" textAlign=\"left\">\r\n              Departments\r\n            </Header>\r\n          </div>\r\n          <Segment>\r\n            {departments.length !== null && departments.length !== 0 ? (\r\n              <Grid stackable columns={13} textAlign=\"left\">\r\n                {departments.map((item) => (\r\n                  <Grid.Row key={item.id} centered>\r\n                    <Grid.Column verticalAlign=\"middle\" computer=\"4\">\r\n                      <Link to={`/departments/${item.id}`}>{item.name}</Link>\r\n                    </Grid.Column>\r\n                    <Grid.Column\r\n                      floated=\"right\"\r\n                      verticalAlign=\"middle\"\r\n                      computer=\"4\"\r\n                    >\r\n                      {item.Users !== undefined ? (\r\n                        <p>Members: {item.Users.length}</p>\r\n                      ) : null}\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                ))}\r\n              </Grid>\r\n            ) : (\r\n              <p>No departments available, please create one below</p>\r\n            )}\r\n          </Segment>\r\n          {users.length > 0 ? (\r\n            <Grid.Column width=\"13\">\r\n              <Header as=\"h3\">Create new department</Header>\r\n              <Segment>\r\n                <Form.Group>\r\n                  <Form onSubmit={onSubmit}>\r\n                    <Form.Input\r\n                      placeholder=\"Enter department name\"\r\n                      label=\"Department name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n\r\n                    {/*        <TextArea\r\n                placeholder=\"Description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                setInputValue={setDescription}\r\n                name=\"textarea\"\r\n              />\r\n */}\r\n\r\n                    <Form.Select\r\n                      placeholder=\"Add user to department\"\r\n                      options={options}\r\n                      onChange={handleSelect}\r\n                      value={select}\r\n                      multiple\r\n                      clearable\r\n                    />\r\n                    <Form.Button type=\"submit\">Save</Form.Button>\r\n                  </Form>\r\n                </Form.Group>\r\n              </Segment>\r\n            </Grid.Column>\r\n          ) : null}{' '}\r\n        </Grid.Column>\r\n      ) : (\r\n        'Not authorized'\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Segment,\r\n  Form,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n  List,\r\n} from 'semantic-ui-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport UserService from '../../services/UserService';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Department = ({ history }) => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n  const departmentsId = useParams();\r\n\r\n  useEffect(() => {\r\n    DepartmentService.get(departmentsId.id)\r\n      .then((res) => {\r\n        setDepartments(res);\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n    UserService.findAll()\r\n      .then((data) => setUsers(data))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = users.filter(\r\n      (entry1) =>\r\n        departments.Users &&\r\n        !departments.Users.some((entry2) => entry1.id === entry2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, firstName, lastName }) => ({\r\n      value: id,\r\n      text: `${firstName} ${lastName}`,\r\n    }));\r\n    setOptions(filterOptions);\r\n    setLoader(false);\r\n  }, [users, departments]);\r\n\r\n  const onSubmit = () => {\r\n    if (name === '' && select.length === 0) {\r\n      const updatedDepartment = {\r\n        name: departments.name,\r\n        users: departments.Users,\r\n      };\r\n      DepartmentService.update(departmentsId.id, updatedDepartment).then(\r\n        (res) => {\r\n          setDepartments(res);\r\n        }\r\n      );\r\n    } else {\r\n      const data = {\r\n        name,\r\n        users: select,\r\n      };\r\n\r\n      DepartmentService.update(departmentsId.id, data).then((res) => {\r\n        setDepartments(res);\r\n      });\r\n    }\r\n    setSelect([]);\r\n    setName('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    DepartmentService.destroy(departmentsId.id);\r\n    history.push('/departments');\r\n  };\r\n\r\n  const handleClick = (e, id) => {\r\n    e.preventDefault();\r\n    DepartmentService.removeUser(departmentsId.id, { UserId: id }).then(\r\n      (res) => {\r\n        setDepartments(res);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Edit: {departments.name}\r\n        </Header>\r\n      </div>\r\n      {!loader ? (\r\n        <Grid stackable columns={16}>\r\n          <Grid.Column width=\"16\">\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Change name on department: {departments.name}</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Input\r\n                      placeholder=\"New name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <Form.Button content=\"Save\" />\r\n                  </Form.Group>\r\n                </Form>\r\n                <Form onSubmit={handleDelete}>\r\n                  <Form.Button>Delete</Form.Button>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n            <Grid.Row>\r\n              <Segment style={{ marginTop: '2em' }}>\r\n                <Header>Users in department: </Header>\r\n                {departments.Users !== undefined &&\r\n                departments.Users.length !== 0 ? (\r\n                  departments.Users.map((item) => (\r\n                    <List divided key={item.id}>\r\n                      <List.Item>\r\n                        <List.Content floated=\"left\" verticalAlign=\"bottom\">\r\n                          {item.firstName} {item.lastName}\r\n                        </List.Content>\r\n                        <List.Content verticalAlign=\"top\">\r\n                          <Button\r\n                            compact\r\n                            onClick={(e) => handleClick(e, item.id)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                ) : (\r\n                  <p>No users members in this department</p>\r\n                )}\r\n              </Segment>\r\n            </Grid.Row>\r\n\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Add users</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Select\r\n                      placeholder=\"Add user to department\"\r\n                      options={options}\r\n                      onChange={handleSelect}\r\n                      value={select}\r\n                      multiple\r\n                      clearable\r\n                    />\r\n\r\n                    <Form.Button type=\"submit\">Save</Form.Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      ) : (\r\n        <Segment>\r\n          <Dimmer active inverted>\r\n            <Loader size=\"large\">Loading</Loader>\r\n          </Dimmer>\r\n\r\n          <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Dropdown,\r\n} from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst CreateTemplate = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n\r\n  const [department, setDepartment] = useState([]);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.all().then((res) => setDepartment(res));\r\n  }, []);\r\n\r\n  const options = department.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: title,\r\n      description,\r\n      departments: select,\r\n      status: false,\r\n      templateList: true,\r\n    };\r\n\r\n    ListService.create(data).then((res) => {\r\n      if (res.templateList) {\r\n        history.push(`/lists/${res.id}`);\r\n      }\r\n      setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n    });\r\n    /*     setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n   */\r\n    /*     if (templateList) {\r\n        navigate('/home');\r\n      } */\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"10\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Create new template</Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={handleNewList}>\r\n                <Form.Input\r\n                  placeholder=\"Title\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                {options ? (\r\n                  <Dropdown\r\n                    placeholder=\"Select departments\"\r\n                    fluid\r\n                    label=\"Department\"\r\n                    multiple\r\n                    // search\r\n                    selection\r\n                    value={select}\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    // defaultValue={[]}\r\n                    clearable\r\n                  />\r\n                ) : null}\r\n                <div style={{ marginTop: '1em' }}>\r\n                  <Button type=\"submit\">Save</Button>\r\n                </div>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default CreateTemplate;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/employee/all`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/employee/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/employee/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/employee/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) => axios.post(`/api/employee`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Input,\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n} from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport EmployeeService from '../../services/EmployeeService';\r\nimport ListService from '../../services/ListService';\r\n\r\nconst CreateEmployee = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [office, setOffice] = useState('');\r\n  const [templateList, setTemplateList] = useState([]);\r\n\r\n  const templateOptions = templateList.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelectTemplate = (e, { value }) => {\r\n    setSelectTemplate(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ListService.all().then((res) => {\r\n      const template = res.filter((item) => item.templateList);\r\n      setTemplateList(template);\r\n    });\r\n  }, []);\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n    if (selectTemplate !== undefined) {\r\n      const data = {\r\n        listId: selectTemplate,\r\n        description,\r\n        departments: select,\r\n        status: false,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phoneNumber,\r\n        address,\r\n        office,\r\n        title,\r\n      };\r\n\r\n      EmployeeService.create(data).then(() => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setFirstName('');\r\n        setLastName('');\r\n        setOffice('');\r\n        setAddress('');\r\n        setEmail('');\r\n        setPhoneNumber('');\r\n        history.push('/lists');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column width=\"13\">\r\n        <div style={{ margin: '2em 0' }}>\r\n          <Header textAlign=\"left\">Create new list</Header>\r\n        </div>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Form.Group>\r\n                <Form onSubmit={handleNewList}>\r\n                  <Form.Input\r\n                    placeholder=\"First name\"\r\n                    label=\"First name\"\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Last name\"\r\n                    label=\"Last name\"\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Title\"\r\n                    label=\"Title\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Adress\"\r\n                    label=\"Adress\"\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Phone Number\"\r\n                    label=\"Phone number\"\r\n                    control={Input}\r\n                    type=\"text\"\r\n                    value={phoneNumber}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Office\"\r\n                    label=\"Office\"\r\n                    type=\"text\"\r\n                    value={office}\r\n                    onChange={(e) => setOffice(e.target.value)}\r\n                  />\r\n\r\n                  {templateOptions.value ? (\r\n                    <Form.Select\r\n                      placeholder=\"Use template\"\r\n                      options={templateOptions}\r\n                      onChange={handleSelectTemplate}\r\n                      value={select}\r\n                      clearable\r\n                    />\r\n                  ) : (\r\n                    <Message>\r\n                      <p>\r\n                        No templates available. To use templates, contact your\r\n                        administator\r\n                      </p>\r\n                    </Message>\r\n                  )}\r\n\r\n                  <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n              </Form.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport ListService from '../../services/ListService';\r\n\r\nconst TemplateList = ({ history }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    /*     DepartmentService.allLists().then((res) => {\r\n      const templates = res.filter((list) => list.templateList);\r\n      setLists(templates);\r\n      console.log(templates);\r\n    }); */\r\n\r\n    ListService.all().then((res) => {\r\n      const templates = res.filter((list) => list.templateList);\r\n      setLists(templates);\r\n    });\r\n  }, []);\r\n\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    let listContent;\r\n\r\n    // eslint-disable-next-line no-unused-expressions\r\n    return lists[0].Lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? incompleted.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewCompleted\r\n          ? completedLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewAll\r\n          ? listContent.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p>{template ? 'No templates available' : 'No lists available'}</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          Templates\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <List>\r\n              {lists != null\r\n                ? lists.map((item) => (\r\n                    <List.Item key={item.id}>\r\n                      {console.log(item)}\r\n                      <List.Content floated=\"left\">\r\n                        <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                      </List.Content>\r\n                      <List.Content floated=\"left\">\r\n                        <p>\r\n                          {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                            <>\r\n                              <p>Contains: {item.Tasks.length} tasks</p>\r\n                            </>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </p>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  ))\r\n                : 'No templates exists, please create one'}\r\n            </List>\r\n          </Segment>\r\n          <Link to=\"/templates/create\">\r\n            <Button>New template</Button>\r\n          </Link>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateList;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst EmployeeLists = ({ history }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.allLists().then((res) => {\r\n      setLists(res);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const handleIncomplete = () => {\r\n    setViewIncomplete(true);\r\n    setViewCompleted(false);\r\n    setViewAll(false);\r\n  };\r\n  const handleCompleted = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(true);\r\n    setViewAll(false);\r\n  };\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    const listContent = lists[0].Lists.filter((item) => !item.templateList);\r\n\r\n    const completedLists = listContent.filter((item) => item.status);\r\n    const incompleted = listContent.filter((item) => !item.status);\r\n\r\n    return lists[0].Lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? incompleted.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : viewCompleted\r\n          ? completedLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : viewAll\r\n          ? listContent.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p> No lists available</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          Employee Lists\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          {lists != null && lists.length !== 0 ? (\r\n            <>\r\n              <Button.Group>\r\n                <Button onClick={() => handleIncomplete()}>Incomplete</Button>\r\n                <Button onClick={() => handleCompleted()}>Completed</Button>\r\n                <Button onClick={() => handleAll()}>All</Button>\r\n              </Button.Group>\r\n              <Segment>\r\n                <DisplayList />\r\n              </Segment>\r\n              <Link to=\"/lists/create\">\r\n                <Button>New employee list</Button>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            'No lists available, please contact your administrator'\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeLists;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst EditList = () => {\r\n  const [list, setList] = useState([]);\r\n  const listsId = useParams();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [listName, setListName] = useState();\r\n  const [departments, setDepartments] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [templateList, setTemplateList] = useState('');\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      setList(res);\r\n    });\r\n    DepartmentService.all().then((res) => {\r\n      setDepartments(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = departments.filter((o1) =>\r\n      list.Departments.some((o2) => o1.id !== o2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, name }) => ({\r\n      value: id,\r\n      text: name,\r\n    }));\r\n\r\n    setOptions(filterOptions);\r\n  }, [departments]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    if (select !== undefined) {\r\n      const data = {\r\n        name: listName !== list.name ? listName : list.name,\r\n        description:\r\n          description !== list.description ? description : list.description,\r\n        addedDepartment: select,\r\n        status: false,\r\n        templateList: templateList !== list.templateList ? templateList : title,\r\n      };\r\n\r\n      ListService.update(listsId.id, data).then((res) => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setList(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = (id) => {\r\n    const filter = list.Departments.filter(\r\n      (department) => department.id !== id\r\n    );\r\n\r\n    const data = {\r\n      departmentId: id,\r\n    };\r\n\r\n    ListService.update(listsId.id, data).then((res) => {\r\n      setList(res);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Edit list: {list.name}</Header>\r\n      </div>\r\n      {list.name !== undefined && departments !== undefined ? (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Header as=\"h4\">Summary for {list.name}</Header>\r\n              {list.description ? <p>Decription: {list.description}</p> : ''}\r\n              <Divider />\r\n\r\n              <h5>Template:</h5>\r\n              {list.templateList ? <p>Yes</p> : <p>No</p>}\r\n\r\n              <Header as=\"h5\">Departments:</Header>\r\n              {list.Departments !== undefined\r\n                ? list.Departments.map((item) => (\r\n                    <List celled>\r\n                      <List.Item key={uuidv4()}>\r\n                        <List.Content floated=\"left\">{item.name}</List.Content>\r\n                        <List.Content floated=\"right\">\r\n                          <Button\r\n                            compact\r\n                            onClick={() => deleteDepartment(item.id)}\r\n                          >\r\n                            X\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                : ''}\r\n              <Button floated=\"right\">Delete</Button>\r\n              <br />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment>\r\n              <Form.Group>\r\n                <Form onSubmit={handleUpdate}>\r\n                  <Form.Input\r\n                    placeholder=\"enter new name\"\r\n                    label=\"New name\"\r\n                    type=\"text\"\r\n                    value={listName}\r\n                    onChange={(e) => setListName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.TextArea\r\n                    placeholder=\"Enter description\"\r\n                    label=\"New description\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Select\r\n                    placeholder=\"Add department\"\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    value={select}\r\n                    clearable\r\n                  />\r\n\r\n                  <Form.Checkbox\r\n                    inline\r\n                    label=\"Template\"\r\n                    checked={list.templateList}\r\n                  />\r\n\r\n                  <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n              </Form.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Header, Segment, List, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport UserService from '../../services/UserService';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    UserService.findAll()\r\n      .then((res) => setUsers(res))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Users\r\n        </Header>\r\n      </div>\r\n      <Segment>\r\n        {users != null && users.length !== 0 ? (\r\n          <List>\r\n            {users.map((user) => (\r\n              <List.Item key={user.id}>\r\n                <List.Content>\r\n                  <p style={{ display: 'inline-block' }}>\r\n                    {user.firstName} {user.lastName}\r\n                  </p>\r\n                  <Link to={`/users/${user.id}`}>\r\n                    <Button floated=\"right\" compact>\r\n                      Edit\r\n                    </Button>\r\n                  </Link>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Segment>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n  Form,\r\n  Checkbox,\r\n  Button,\r\n  Message,\r\n} from 'semantic-ui-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserService from '../../services/UserService';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst User = ({ history }) => {\r\n  const usersId = useParams();\r\n  const [user, setUser] = useState([]);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setlastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [admin, setAdmin] = useState();\r\n  const [email, setEmail] = useState();\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  useEffect(() => {\r\n    UserService.findOne(usersId.id)\r\n      .then((res) => setUser(res))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = () => {\r\n    UserService.destroy(usersId.id)\r\n      .then(() => history.push('/users'))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const data = {\r\n      firstName: firstName !== user.firstName ? firstName : user.firstName,\r\n      lastName: lastName !== user.lastName ? lastName : user.lastName,\r\n      password: password !== user.password ? password : user.password,\r\n      admin: admin !== user.admin ? admin : user.admin,\r\n      email: email !== user.email ? email : user.email,\r\n    };\r\n\r\n    UserService.edit(user.id, data)\r\n      .then(() => history.push('/users'))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handlePassword = () => {\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      admin: user.admin,\r\n      email: user.email,\r\n    };\r\n\r\n    UserService.edit(user.id, data)\r\n      .then(() => history.push('/users'))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Edit: {user.firstName} {user.lastName}\r\n        </Header>\r\n      </div>\r\n\r\n      <Message>\r\n        <p>\r\n          Name: {user.firstName} {user.lastName}\r\n        </p>\r\n        <p>Email: {user.email}</p>\r\n        <p>Admin access: {user.admin ? 'Yes' : 'No'}</p>\r\n      </Message>\r\n      <Segment>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Input\r\n            placeholder=\"Enter new first name\"\r\n            label=\"First name\"\r\n            type=\"text\"\r\n            value={firstName}\r\n            fluid\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          />\r\n          <Form.Input\r\n            placeholder=\" Enter new last name\"\r\n            label=\"Last name\"\r\n            type=\"text\"\r\n            value={lastName}\r\n            fluid\r\n            onChange={(e) => setlastName(e.target.value)}\r\n          />\r\n\r\n          <Form.Input\r\n            placeholder=\"Enter new e-mail\"\r\n            label=\"Email adress\"\r\n            type=\"text\"\r\n            value={email}\r\n            fluid\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <Form.Field\r\n            control={Checkbox}\r\n            label=\"Admin\"\r\n            value={admin}\r\n            onChange={(e) => setAdmin(e.target.value)}\r\n          />\r\n          <Form.Button content=\"Save\" />\r\n        </Form>\r\n      </Segment>\r\n\r\n      <Segment>\r\n        <Form onSubmit={handlePassword}>\r\n          <Form.Input\r\n            placeholder=\"Enter new password\"\r\n            label=\"Change password\"\r\n            type=\"password\"\r\n            value={password}\r\n            fluid\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Form.Button content=\"Save\" />\r\n        </Form>\r\n      </Segment>\r\n\r\n      <Button floated=\"right\" negative onClick={() => handleDelete()}>\r\n        Delete User\r\n      </Button>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport ListService from '../../services/ListService';\r\n\r\nconst AdminLists = ({ history, template, header }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    /*     DepartmentService.allLists().then((res) => {\r\n      setLists(res);\r\n      console.log(res);\r\n    });\r\n */\r\n\r\n    ListService.all().then((res) => {\r\n      const templates = res.filter((item) => item.templateList);\r\n      const employeeLists = res.filter((item) => !item.templateList);\r\n      console.log(templates);\r\n      console.log(employeeLists);\r\n      console.log(res);\r\n      setLists(res);\r\n    });\r\n  }, []);\r\n\r\n  const handleIncomplete = () => {\r\n    setViewIncomplete(true);\r\n    setViewCompleted(false);\r\n    setViewAll(false);\r\n  };\r\n  const handleCompleted = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(true);\r\n    setViewAll(false);\r\n  };\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    let listContent;\r\n\r\n    // eslint-disable-next-line no-unused-expressions\r\n\r\n    const templates = lists.filter((item) => item.templateList);\r\n    const employeeLists = lists.filter((item) => !item.templateList);\r\n    /* \r\n    const completedLists = listContent.filter((item) => item.status);\r\n    const incompleted = listContent.filter((item) => !item.status); */\r\n\r\n    return lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? templates.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewCompleted\r\n          ? employeeLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length != null ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewAll\r\n          ? lists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p>{template ? 'No templates available' : 'No lists available'}</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          {header}\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <>\r\n            <Button.Group>\r\n              <Button onClick={() => handleIncomplete()}>Templates</Button>\r\n              <Button onClick={() => handleCompleted()}>Employee Lists</Button>\r\n              <Button onClick={() => handleAll()}>All</Button>\r\n            </Button.Group>\r\n            <Segment>\r\n              <DisplayList />\r\n            </Segment>\r\n\r\n            <Link to=\"/templates/create\">\r\n              <Button>New template</Button>\r\n            </Link>\r\n\r\n            <Link to=\"/lists/create\">\r\n              <Button>New employee list</Button>\r\n            </Link>\r\n          </>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLists;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport AdminLists from './AdminLists';\r\nimport EmployeeLists from './EmployeeLists';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Lists = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  return <>{user.admin ? <AdminLists /> : <EmployeeLists />}</>;\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useContext } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nimport { MessageContext } from '../context/MessageContext';\r\n\r\nconst Notification = () => {\r\n  const {\r\n    dispatchMessage,\r\n    state: { message, status },\r\n  } = useContext(MessageContext);\r\n\r\n  if (message === '') {\r\n    return '';\r\n  }\r\n  setTimeout(() => {\r\n    dispatchMessage({ type: 'CLEAR' });\r\n  }, 5000);\r\n\r\n  if (status === 'positive') {\r\n    return <Message positive>{message}</Message>;\r\n  }\r\n\r\n  if (status === 'negative') {\r\n    return <Message negative>{message}</Message>;\r\n  }\r\n\r\n  if (status === 'info') {\r\n    return <Message info>{message}</Message>;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthContextProvider from './context/AuthContext';\r\nimport Start from './components/Start';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Home from './components/Home';\r\nimport ProtectedRoute from './routes/ProtectedRoute';\r\nimport List from './components/list/List';\r\nimport Departments from './components/department/Departments';\r\nimport Department from './components/department/Department';\r\nimport CreateTemplate from './components/list/CreateTemplate';\r\nimport CreateEmployee from './components/list/CreateEmployee';\r\nimport TemplateList from './components/list/TemplateList';\r\nimport EmployeeList from './components/list/EmployeeLists';\r\nimport EditList from './components/list/EditList';\r\nimport Users from './components/users/Users';\r\nimport User from './components/users/User';\r\nimport Lists from './components/list/Lists';\r\nimport MessageProvider from './context/MessageContext';\r\nimport Notification from './components/Notification';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MessageProvider>\r\n        <Notification />\r\n        <AuthContextProvider>\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Start} />\r\n              <Route path=\"/login\" exact component={Login} />\r\n              <Route path=\"/register\" exact component={Register} />\r\n\r\n              <ProtectedRoute path=\"/home\" component={Home} />\r\n\r\n              <ProtectedRoute path=\"/users\" exact component={Users} />\r\n              <ProtectedRoute path=\"/users/:id\" exact component={User} />\r\n\r\n              <ProtectedRoute path=\"/lists\" exact component={Lists} />\r\n\r\n              <ProtectedRoute\r\n                path=\"/lists/create\"\r\n                exact\r\n                component={CreateEmployee}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/lists/edit/:id\"\r\n                exact\r\n                component={EditList}\r\n              />\r\n              <ProtectedRoute path=\"/lists/:id\" exact component={List} />\r\n\r\n              <ProtectedRoute\r\n                path=\"/templates/create\"\r\n                exact\r\n                component={CreateTemplate}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/templates\"\r\n                exact\r\n                component={TemplateList}\r\n              />\r\n\r\n              <ProtectedRoute\r\n                path=\"/departments\"\r\n                exact\r\n                component={Departments}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/departments/:id\"\r\n                exact\r\n                component={Department}\r\n              />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </AuthContextProvider>\r\n      </MessageProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}