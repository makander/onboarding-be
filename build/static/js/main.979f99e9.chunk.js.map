{"version":3,"sources":["reducers/AuthReducer.js","context/AuthContext.jsx","components/Start.jsx","services/UserService.js","components/auth/Login.jsx","components/auth/Register.jsx","components/Home.jsx","components/navigation/Sidebar.jsx","components/navigation/Navbar.jsx","routes/ProtectedRoute.jsx","services/ListService.js","services/DepartmentService.js","services/TaskService.js","components/task/CreateTask.jsx","components/task/TaskDropDown.jsx","components/list/List.jsx","components/department/Departments.jsx","components/department/Department.jsx","components/list/CreateTemplate.jsx","services/EmployeeService.js","components/list/CreateEmployee.jsx","components/list/TemplateList.jsx","components/list/EmployeeLists.jsx","components/list/EditList.jsx","components/users/Users.jsx","components/users/User.jsx","components/list/AdminLists.jsx","components/list/Lists.jsx","App.jsx","serviceWorker.js","index.js"],"names":["authReducer","state","action","type","userIsAuthenticated","user","payload","AuthContext","createContext","AuthContextProvider","children","useReducer","authStatus","dispatch","Provider","value","Start","Grid","container","centered","columns","style","marginTop","Row","Column","width","textAlign","Segment","stacked","Header","size","to","Button","loginUser","data","a","axios","post","logoutUser","id","registerUser","edit","put","destroy","delete","findAll","get","then","res","findOne","Login","props","history","useState","email","setEmail","password","setPassword","useContext","Form","onSubmit","e","preventDefault","UserService","push","catch","err","console","log","Field","name","placeholder","required","onChange","target","fluid","Register","firstName","setFirstName","lastName","setLastName","htmlFor","Home","profile","setProfile","useEffect","tablet","computer","length","margin","float","Tasks","List","map","task","Item","ListId","Departments","department","admin","Loader","active","inline","Sidebar","Menu","vertical","color","minHeight","paddingLeft","inverted","fixed","as","Link","Navbar","only","top","paddingTop","ProtectedRoute","Component","component","render","stackable","redirectTo","all","update","create","allLists","allTasks","removeUser","getTasks","getAtask","userId","listId","deleteTask","updateTask","taskId","createTask","CreateTask","setTask","listsId","title","setTitle","description","setDescription","Group","newTask","status","TaskService","Input","label","TextArea","TaskDropDown","options","TaskServiceUpdateTask","select","setSelect","Select","onClick","content","Lists","list","setList","setOptions","departments","setDepartments","useParams","ListService","DepartmentService","opts","flatMap","Users","text","filter","v","i","findIndex","t","UserId","templateList","Employee","verticalAlign","phoneNumber","office","item","key","padding","User","floated","compact","Checkbox","checked","taskStatus","taskData","handleStatus","positive","forEach","handleComplete","Message","secondary","negative","Department","setName","users","setUsers","undefined","concat","multiple","clearable","loader","setLoader","departmentsId","filterOptions","entry1","some","entry2","updatedDepartment","Dimmer","Image","src","divided","Content","handleClick","CreateTemplate","setDepartment","Dropdown","selection","CreateEmployee","selectTemplate","setSelectTemplate","address","setAddress","setPhoneNumber","setOffice","setTemplateList","templateOptions","template","EmployeeService","control","TemplateList","lists","setLists","templates","EmployeeLists","viewAll","setViewAll","viewCompleted","setViewCompleted","viewIncomplete","setViewIncomplete","listContent","completedLists","incompleted","relaxed","EditList","listName","setListName","o1","o2","Divider","celled","uuidv4","departmentId","deleteDepartment","addedDepartment","display","usersId","setUser","setlastName","setAdmin","AdminLists","header","employeeLists","defaults","withCredentials","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.979f99e9.chunk.js","sourcesContent":["const authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: true,\r\n        user: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: false,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport authReducer from '../reducers/AuthReducer';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [authStatus, dispatch] = useReducer(authReducer, {\r\n    userIsAuthenticated: false,\r\n    user: {},\r\n  });\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authStatus, dispatch }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React from 'react';\r\nimport { Segment, Header, Button, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Start = () => (\r\n  <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n    <Grid.Row centered>\r\n      <Grid.Column width={10} textAlign=\"center\">\r\n        <Segment stacked>\r\n          <Header size=\"large\">Welcome to Border</Header>\r\n          <p>Welcome to Border the task manager for teams</p>\r\n          <Link to=\"login\">\r\n            <Button>Login</Button>\r\n          </Link>\r\n\r\n          <Link to=\"register\">\r\n            <Button>Register</Button>\r\n          </Link>\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n  </Grid>\r\n);\r\n\r\nexport default Start;\r\n","import axios from 'axios';\r\n\r\nconst loginUser = async (data) => axios.post(`/api/user/login`, data);\r\n\r\nconst logoutUser = async (id) => axios.post(id);\r\n\r\nconst registerUser = async (data) => axios.post(`/api/user/register`, data);\r\n\r\nconst edit = async (id, data) => axios.put(`/api/user/${id}`, data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/user/${id}`);\r\nconst findAll = async () => axios.get(`/api/user/`).then((res) => res.data);\r\n\r\nconst findOne = async (id) =>\r\n  axios.get(`/api/user/${id}`).then((res) => res.data);\r\n\r\nexport default {\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  edit,\r\n  destroy,\r\n  findAll,\r\n  findOne,\r\n};\r\n","import React, { useState, useContext } from 'react';\r\n// import { navigate } from '@reach/router';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport UserService from '../../services/UserService';\r\n\r\nconst Login = (props) => {\r\n  const { history } = props;\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    UserService.loginUser({ email, password })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: res.data.user,\r\n        });\r\n\r\n        history.push('/home');\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Login to Border</Header>\r\n            <Form onSubmit={handleLogin}>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n              <p>\r\n                Don&apos;t have an account? Sign up&nbsp;\r\n                <Link to=\"/register\">here</Link>.\r\n              </p>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>{' '}\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\n\r\nconst Register = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegistration = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post('/api/user/register', {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n      })\r\n      .then(() => {\r\n        history.push('/');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container centered columns={1}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Signup to Border</Header>\r\n            <Form onSubmit={handleRegistration}>\r\n              <Form.Field>\r\n                <label htmlFor=\"First Name\">First name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Last Name\">Last Name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Email\">Email</label>\r\n                <input\r\n                  placeholder=\"Enter Email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Password\">Password</label>\r\n                <input\r\n                  placeholder=\"Enter Password\"\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Segment, Grid, Header, Loader } from 'semantic-ui-react';\r\nimport UserService from '../services/UserService';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Home = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  const [profile, setProfile] = useState([]);\r\n  useEffect(() => {\r\n    UserService.findOne(user.id).then((res) => setProfile(res));\r\n  }, []);\r\n\r\n  return (\r\n    <Grid.Column centered tablet={14} computer={12}>\r\n      {profile != null && profile.length !== 0 ? (\r\n        <>\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header float=\"left\" textAlign=\"left\">\r\n              Welcome {user.firstName} {user.lastName}\r\n            </Header>\r\n          </div>\r\n\r\n          <Segment>\r\n            {profile.Tasks != null && profile.Tasks.length !== 0 ? (\r\n              <>\r\n                <Header>Tasks</Header>\r\n                <p>You are assigned to {profile.Tasks.length} tasks.</p>\r\n                <List>\r\n                  {profile.Tasks.map((task) => (\r\n                    <List.Item>\r\n                      <Link to={`/lists/${task.ListId}`}>{task.name}</Link>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            ) : (\r\n              'You are not assigned to any tasks'\r\n            )}\r\n          </Segment>\r\n          <Segment>\r\n            {profile.Departments != null && user.Departments.length !== 0 ? (\r\n              <>\r\n                <Header>Tasks</Header>\r\n                <p>You a member of the following departments:</p>\r\n                <List>\r\n                  {user.Departments.map((department) => (\r\n                    <List.Item>{department.name}</List.Item>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            ) : profile.admin ? (\r\n              <>\r\n                <p>\r\n                  Please create a <Link to=\"/departments\">department</Link> and\r\n                  add users to it\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <p>Please ask your administrator to add you to a department</p>\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Segment style={{ margin: '2em 0' }}>\r\n          <Loader active inline=\"centered\" size=\"huge\">\r\n            Loading\r\n          </Loader>\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\nimport { Menu, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Sidebar = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Menu\r\n      vertical\r\n      color=\"grey\"\r\n      style={{ marginTop: '0.5em', minHeight: '100vh', paddingLeft: '-1rem' }}\r\n      inverted\r\n      fixed\r\n    >\r\n      <Menu.Item as={Link} name=\"Home\" to=\"/home\" />\r\n      <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n      {user.admin ? (\r\n        <>\r\n          <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n          <Menu.Item as={Link} name=\"Users\" to=\"/users\" />\r\n          <Menu.Item as={Link} name=\"Profile\" to={`/users/${user.id}`} />\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Menu.Item>\r\n        <Menu.Menu>\r\n          <Menu.Item name=\"\">logout</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useContext } from 'react';\r\nimport { Menu, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Navbar = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Grid.Row only=\"mobile tablet\">\r\n      <Menu top inverted style={{ width: '100%', paddingTop: '1em' }}>\r\n        <Menu.Item as={Link} name=\"Home\" to=\"/home\" />\r\n\r\n        <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n\r\n        {user.admin ? (\r\n          <>\r\n            <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n            <Menu.Item as={Link} name=\"Users\" to=\"/users\" />\r\n          </>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Menu.Item name=\"\">logout</Menu.Item>\r\n      </Menu>\r\n    </Grid.Row>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Sidebar from '../components/navigation/Sidebar';\r\nimport Navbar from '../components/navigation/Navbar';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  const { authStatus } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        authStatus.userIsAuthenticated ? (\r\n          <>\r\n            <Grid stackable columns={16}>\r\n              <Navbar />\r\n              <Grid.Row>\r\n                <Grid.Column only=\"computer\" width={3}>\r\n                  <Sidebar />\r\n                </Grid.Column>\r\n\r\n                <Grid.Column centered tablet={14} computer={12}>\r\n                  <Component {...props} />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Redirect to={props.redirectTo ? props.redirectTo : '/'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/list`).then((res) => res.data);\r\n\r\nconst get = async (id) => axios.get(`/api/list/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/list/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/list/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) =>\r\n  axios.post(`/api/list`, data).then((res) => res.data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst all = async () =>\r\n  axios.get(`/api/department/all`).then((res) => res.data);\r\n\r\nconst allLists = async () =>\r\n  axios.get(`/api/department/lists`).then((res) => res.data);\r\n\r\nconst allTasks = async () =>\r\n  axios.get(`/api/department/tasks`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/department/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/department/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/department/${id}`, data).then((res) => res.data);\r\n\r\nconst removeUser = async (id, data) =>\r\n  axios\r\n    .delete(`/api/department/${id}/user`, {\r\n      data,\r\n    })\r\n    .then((res) => res.data);\r\n\r\n/* const findAllDepartmentTasks = async () =>\r\n  axios\r\n    .get(`/api/department/tasks`)\r\n    .then((res) => res.data);\r\n\r\nconst findAllDepartmentLists = async () =>\r\n  axios\r\n    .get(`/api/department/lists`)\r\n    .then((res) => console.log(res));\r\n */\r\nconst create = async (data) => axios.post(`/api/department`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n  removeUser,\r\n  /*   findAllDepartmentTasks,\r\n  findAllDepartmentLists, */\r\n  allLists,\r\n  allTasks,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst getTasks = async () => axios.get(`/api/list`);\r\n\r\nconst getAtask = async (userId, listId) => axios.get(`/api/list/${listId}`);\r\n\r\nconst deleteTask = async (id) => axios.delete();\r\n\r\nconst updateTask = async (taskId, data) =>\r\n  axios.put(`/api/task/${taskId}`, data);\r\n\r\nconst createTask = async (data) => axios.post(`/api/task/`, data);\r\n\r\nexport default {\r\n  getTasks,\r\n  getAtask,\r\n  deleteTask,\r\n  updateTask,\r\n  createTask,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Segment } from 'semantic-ui-react';\r\n\r\nimport TaskService from '../../services/TaskService';\r\n\r\nconst CreateTask = ({ setTask, listsId }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // const [user, setUser] = useState('');\r\n\r\n  const handleNewTask = () => {\r\n    const newTask = {\r\n      name: title,\r\n      description,\r\n      ListId: listsId,\r\n      status: false,\r\n    };\r\n\r\n    TaskService.createTask(newTask).then((res) => {\r\n      setTask(res.data);\r\n      setTitle('');\r\n      setDescription('');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Segment>\r\n        <Form.Group>\r\n          <Form onSubmit={handleNewTask}>\r\n            <Form.Input\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n\r\n            <Form.TextArea\r\n              placeholder=\"Description\"\r\n              label=\"Description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              name=\"textarea\"\r\n            />\r\n\r\n            <Form.Button type=\"submit\">Save</Form.Button>\r\n          </Form>\r\n        </Form.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nconst selectStyle = {\r\n  width: 200,\r\n  marginTop: '0.5em',\r\n};\r\n\r\nconst TaskDropDown = ({ options, TaskServiceUpdateTask, id, setTask }) => {\r\n  const [select, setSelect] = useState('');\r\n\r\n  const handleClick = (taskId) => {\r\n    const taskData = {\r\n      userId: select,\r\n    };\r\n    TaskServiceUpdateTask(taskId, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n    setSelect('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group inline>\r\n        <Form.Select\r\n          placeholder=\"Assign User\"\r\n          options={options}\r\n          onChange={handleSelect}\r\n          value={select}\r\n        />\r\n\r\n        <Form.Button onClick={() => handleClick(id)} content=\"Save\" />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskDropDown;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\n\r\nimport {\r\n  Form,\r\n  Grid,\r\n  Segment,\r\n  Header,\r\n  Button,\r\n  Message,\r\n  Loader,\r\n  List,\r\n} from 'semantic-ui-react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport CreateTask from '../task/CreateTask';\r\nimport TaskService from '../../services/TaskService';\r\nimport TaskDropDown from '../task/TaskDropDown';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Lists = ({ history }) => {\r\n  const [list, setList] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [select, setSelect] = useState();\r\n\r\n  const [task, setTask] = useState([]);\r\n\r\n  const listsId = useParams();\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      console.log(res);\r\n      setList(res);\r\n    });\r\n    DepartmentService.allTasks(listsId.id).then((res) => {\r\n      setDepartments(res);\r\n    });\r\n    DepartmentService.allLists(listsId.id).then((res) => {\r\n      const format = res.flatMap((user) =>\r\n        user.Users.map(({ id, firstName, lastName }) => ({\r\n          value: id,\r\n          text: `${firstName} ${lastName}`,\r\n        }))\r\n      );\r\n\r\n      const opts = format.filter(\r\n        (v, i, a) => a.findIndex((t) => t.value === v.value) === i\r\n      );\r\n      setOptions(opts);\r\n    });\r\n  }, [task]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    e.preventDefault();\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleStatus = (taskStatus, taskId) => {\r\n    const taskData = {\r\n      status: !taskStatus,\r\n    };\r\n\r\n    TaskService.updateTask(taskId, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const removeUser = (id) => {\r\n    const taskData = {\r\n      UserId: null,\r\n    };\r\n\r\n    TaskService.updateTask(id, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const data = {\r\n      name: list.name,\r\n      description: list.description,\r\n      status: true,\r\n      templateList: list.templateList,\r\n    };\r\n\r\n    ListService.update(list.id, data).then(() => {\r\n      list.Tasks.forEach((t) => {\r\n        removeUser(t.id);\r\n      });\r\n      history.push('/lists');\r\n    });\r\n  };\r\n\r\n  const deleteList = () => {\r\n    ListService.destroy(listsId.id).then(() => history.push('/lists'));\r\n  };\r\n\r\n  const CompleteSegment = () => {\r\n    return list.Tasks != null &&\r\n      list.Tasks.length !== 0 &&\r\n      list.status !== true ? (\r\n      <>\r\n        {list.Tasks.filter((item) => item.status).length ===\r\n        list.Tasks.length ? (\r\n          <Button positive fluid onClick={() => handleComplete()}>\r\n            Complete list\r\n          </Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </>\r\n    ) : list.status === true ? (\r\n      <Message positive>This list has been completed</Message>\r\n    ) : (\r\n      <Loader />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column centered tablet={14} computer={12}>\r\n      {list != null && list.length !== 0 ? (\r\n        <>\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header as=\"h2\" textAlign=\"left\">\r\n              {list.templateList != null\r\n                ? `Task for template:  ${list.name}`\r\n                : `Tasks for:  ${list.name}`}\r\n            </Header>\r\n          </div>\r\n\r\n          <Grid stackable textAlign=\"left\">\r\n            {list.Tasks != null && list.Employee ? (\r\n              <Grid.Row>\r\n                {console.log(list.Tasks)}\r\n                {console.log(list)}\r\n                <Grid.Column verticalAlign=\"middle\">\r\n                  <Segment>\r\n                    <Header as=\"h3\">Employee information</Header>\r\n                    <List>\r\n                      <List.Item>\r\n                        <p>\r\n                          Name: {list.Employee.firstName}{' '}\r\n                          {list.Employee.lastName}\r\n                        </p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Title: {list.Employee.title}</p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Phone: {list.Employee.phoneNumber}</p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Office: {list.Employee.office}</p>\r\n                      </List.Item>\r\n                    </List>\r\n                  </Segment>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {list.Tasks != null && list.Tasks.length !== 0 ? (\r\n              list.Tasks.map((item) => (\r\n                <Grid.Row key={item.id} style={{ padding: '0' }}>\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"3\">\r\n                    {item.name}\r\n                  </Grid.Column>\r\n                  <Grid.Column verticalAlign=\"middle\" tablet=\"3\" computer=\"5\">\r\n                    {item.User != null && item.User != null ? (\r\n                      <>\r\n                        <p>\r\n                          Assigned: {item.User.firstName} {item.User.lastName}\r\n                          <Button\r\n                            floated=\"right\"\r\n                            compact\r\n                            onClick={() => removeUser(item.id)}\r\n                          >\r\n                            x\r\n                          </Button>\r\n                        </p>\r\n                      </>\r\n                    ) : (\r\n                      'No assigned user'\r\n                    )}\r\n                  </Grid.Column>\r\n\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"5\">\r\n                    <TaskDropDown\r\n                      options={options}\r\n                      TaskServiceUpdateTask={TaskService.updateTask}\r\n                      id={item.id}\r\n                      setTask={setTask}\r\n                    />\r\n                  </Grid.Column>\r\n\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                    <Form>\r\n                      <Form.Checkbox\r\n                        inline\r\n                        label=\"completed\"\r\n                        checked={item.status}\r\n                        onChange={() => handleStatus(item.status, item.id)}\r\n                      />\r\n                    </Form>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <p>No tasks available for this list.</p>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <CompleteSegment />\r\n\r\n          <>\r\n            <Header>Add task</Header>\r\n            <CreateTask\r\n              setTask={setTask}\r\n              listsId={listsId.id}\r\n              departments={departments}\r\n            />\r\n\r\n            {user.admin ? (\r\n              <Button.Group floated=\"right\">\r\n                <Button secondary>\r\n                  <Link\r\n                    style={{ color: 'White' }}\r\n                    to={`/lists/edit/${listsId.id}`}\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                </Button>\r\n\r\n                <Button negative onClick={() => deleteList()}>\r\n                  Delete\r\n                </Button>\r\n              </Button.Group>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </>\r\n        </>\r\n      ) : (\r\n        <Segment style={{ margin: '2em 0' }}>\r\n          <Loader active inline=\"centered\" size=\"huge\">\r\n            Loading\r\n          </Loader>\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Form, Segment, Grid, Header } from 'semantic-ui-react';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport UserService from '../../services/UserService';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Department = () => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    // UserService.findAll().then((res) => setUsers(res));\r\n    UserService.findAll().then((res) => setUsers(res));\r\n    DepartmentService.all().then((res) => {\r\n      setDepartments(res);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    const department = {\r\n      name,\r\n      description,\r\n      users: select,\r\n    };\r\n\r\n    DepartmentService.create(department).then((res) => {\r\n      setDepartments(departments.concat([res.data]));\r\n    });\r\n    setSelect([]);\r\n    setName('');\r\n    setDescription();\r\n  };\r\n\r\n  const options = users.map(({ id, firstName, lastName }) => ({\r\n    value: id,\r\n    text: `${firstName} ${lastName}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  /*   const handleClick = (id) => {\r\n    DepartmentService.destroy(id);\r\n    const filter = departments.filter((department) => department.id !== id);\r\n    setDepartments(filter);\r\n  }; */\r\n\r\n  return (\r\n    <>\r\n      {user.admin ? (\r\n        <Grid.Column width=\"13\">\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header as=\"h2\" textAlign=\"left\">\r\n              Departments\r\n            </Header>\r\n          </div>\r\n          <Segment>\r\n            {departments.length !== null && departments.length !== 0 ? (\r\n              <Grid stackable columns={13} textAlign=\"left\">\r\n                {departments.map((item) => (\r\n                  <Grid.Row key={item.id} centered>\r\n                    <Grid.Column verticalAlign=\"middle\" computer=\"4\">\r\n                      <Link to={`/departments/${item.id}`}>{item.name}</Link>\r\n                    </Grid.Column>\r\n                    <Grid.Column\r\n                      floated=\"right\"\r\n                      verticalAlign=\"middle\"\r\n                      computer=\"4\"\r\n                    >\r\n                      {item.Users !== undefined ? (\r\n                        <p>Members: {item.Users.length}</p>\r\n                      ) : null}\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                ))}\r\n              </Grid>\r\n            ) : (\r\n              <p>No departments available, please create one below</p>\r\n            )}\r\n          </Segment>\r\n          {users.length > 0 ? (\r\n            <Grid.Column width=\"13\">\r\n              <Header as=\"h3\">Create new department</Header>\r\n              <Segment>\r\n                <Form.Group>\r\n                  <Form onSubmit={onSubmit}>\r\n                    <Form.Input\r\n                      placeholder=\"Enter department name\"\r\n                      label=\"Department name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n\r\n                    {/*        <TextArea\r\n                placeholder=\"Description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                setInputValue={setDescription}\r\n                name=\"textarea\"\r\n              />\r\n */}\r\n\r\n                    <Form.Select\r\n                      placeholder=\"Add user to department\"\r\n                      options={options}\r\n                      onChange={handleSelect}\r\n                      value={select}\r\n                      multiple\r\n                      clearable\r\n                    />\r\n                    <Form.Button type=\"submit\">Save</Form.Button>\r\n                  </Form>\r\n                </Form.Group>\r\n              </Segment>\r\n            </Grid.Column>\r\n          ) : null}{' '}\r\n        </Grid.Column>\r\n      ) : (\r\n        'Not authorized'\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Segment,\r\n  Form,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n  List,\r\n} from 'semantic-ui-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport UserService from '../../services/UserService';\r\n\r\nconst Department = ({ history }) => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  const departmentsId = useParams();\r\n\r\n  useEffect(() => {\r\n    DepartmentService.get(departmentsId.id).then((res) => {\r\n      setDepartments(res);\r\n    });\r\n    UserService.findAll().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = users.filter(\r\n      (entry1) =>\r\n        departments.Users &&\r\n        !departments.Users.some((entry2) => entry1.id === entry2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, firstName, lastName }) => ({\r\n      value: id,\r\n      text: `${firstName} ${lastName}`,\r\n    }));\r\n    setOptions(filterOptions);\r\n    setLoader(false);\r\n  }, [users, departments]);\r\n\r\n  const onSubmit = () => {\r\n    if (name === '' && select.length === 0) {\r\n      const updatedDepartment = {\r\n        name: departments.name,\r\n        users: departments.Users,\r\n      };\r\n      DepartmentService.update(departmentsId.id, updatedDepartment).then(\r\n        (res) => {\r\n          setDepartments(res);\r\n        }\r\n      );\r\n    } else {\r\n      const data = {\r\n        name,\r\n        users: select,\r\n      };\r\n\r\n      DepartmentService.update(departmentsId.id, data).then((res) => {\r\n        setDepartments(res);\r\n      });\r\n    }\r\n    setSelect([]);\r\n    setName('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    DepartmentService.destroy(departmentsId.id);\r\n    history.push('/departments');\r\n  };\r\n\r\n  const handleClick = (e, id) => {\r\n    e.preventDefault();\r\n    DepartmentService.removeUser(departmentsId.id, { UserId: id }).then(\r\n      (res) => {\r\n        setDepartments(res);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Edit: {departments.name}\r\n        </Header>\r\n      </div>\r\n      {!loader ? (\r\n        <Grid stackable columns={16}>\r\n          <Grid.Column width=\"16\">\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Change name on department: {departments.name}</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Input\r\n                      placeholder=\"New name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <Form.Button content=\"Save\" />\r\n                  </Form.Group>\r\n                </Form>\r\n                <Form onSubmit={handleDelete}>\r\n                  <Form.Button>Delete</Form.Button>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n            <Grid.Row>\r\n              <Segment style={{ marginTop: '2em' }}>\r\n                <Header>Users in department: </Header>\r\n                {departments.Users !== undefined &&\r\n                departments.Users.length !== 0 ? (\r\n                  departments.Users.map((item) => (\r\n                    <List divided key={item.id}>\r\n                      <List.Item>\r\n                        <List.Content floated=\"left\" verticalAlign=\"bottom\">\r\n                          {item.firstName} {item.lastName}\r\n                        </List.Content>\r\n                        <List.Content verticalAlign=\"top\">\r\n                          <Button\r\n                            compact\r\n                            onClick={(e) => handleClick(e, item.id)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                ) : (\r\n                  <p>No users members in this department</p>\r\n                )}\r\n              </Segment>\r\n            </Grid.Row>\r\n\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Add users</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Select\r\n                      placeholder=\"Add user to department\"\r\n                      options={options}\r\n                      onChange={handleSelect}\r\n                      value={select}\r\n                      multiple\r\n                      clearable\r\n                    />\r\n\r\n                    <Form.Button type=\"submit\">Save</Form.Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      ) : (\r\n        <Segment>\r\n          <Dimmer active inverted>\r\n            <Loader size=\"large\">Loading</Loader>\r\n          </Dimmer>\r\n\r\n          <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Dropdown,\r\n} from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst CreateTemplate = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n\r\n  const [department, setDepartment] = useState([]);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.all().then((res) => setDepartment(res));\r\n  }, []);\r\n\r\n  const options = department.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: title,\r\n      description,\r\n      departments: select,\r\n      status: false,\r\n      templateList: true,\r\n    };\r\n\r\n    ListService.create(data).then((res) => {\r\n      if (res.templateList) {\r\n        history.push(`/lists/${res.id}`);\r\n      }\r\n      setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n    });\r\n    /*     setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n   */\r\n    /*     if (templateList) {\r\n        navigate('/home');\r\n      } */\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"10\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Create new template</Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={handleNewList}>\r\n                <Form.Input\r\n                  placeholder=\"Title\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                {options ? (\r\n                  <Dropdown\r\n                    placeholder=\"Select departments\"\r\n                    fluid\r\n                    label=\"Department\"\r\n                    multiple\r\n                    // search\r\n                    selection\r\n                    value={select}\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    // defaultValue={[]}\r\n                    clearable\r\n                  />\r\n                ) : null}\r\n                <div style={{ marginTop: '1em' }}>\r\n                  <Button type=\"submit\">Save</Button>\r\n                </div>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default CreateTemplate;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/employee/all`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/employee/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/employee/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/employee/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) => axios.post(`/api/employee`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Segment, Input, Button, Grid, Header } from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport EmployeeService from '../../services/EmployeeService';\r\nimport ListService from '../../services/ListService';\r\n\r\nconst CreateEmployee = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [office, setOffice] = useState('');\r\n  const [templateList, setTemplateList] = useState([]);\r\n\r\n  const templateOptions = templateList.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelectTemplate = (e, { value }) => {\r\n    setSelectTemplate(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ListService.all().then((res) => {\r\n      const template = res.filter((item) => item.templateList);\r\n      setTemplateList(template);\r\n    });\r\n  }, []);\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n    if (selectTemplate !== undefined) {\r\n      const data = {\r\n        listId: selectTemplate,\r\n        description,\r\n        departments: select,\r\n        status: false,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phoneNumber,\r\n        address,\r\n        office,\r\n        title,\r\n      };\r\n\r\n      EmployeeService.create(data).then(() => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setFirstName('');\r\n        setLastName('');\r\n        setOffice('');\r\n        setAddress('');\r\n        setEmail('');\r\n        setPhoneNumber('');\r\n        history.push('/lists');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column width=\"13\">\r\n        <div style={{ margin: '2em 0' }}>\r\n          <Header textAlign=\"left\">Create new list</Header>\r\n        </div>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Form.Group>\r\n                <Form onSubmit={handleNewList}>\r\n                  <Form.Input\r\n                    placeholder=\"First name\"\r\n                    label=\"First name\"\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Last name\"\r\n                    label=\"Last name\"\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Title\"\r\n                    label=\"Title\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Adress\"\r\n                    label=\"Adress\"\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Phone Number\"\r\n                    label=\"Phone number\"\r\n                    control={Input}\r\n                    type=\"text\"\r\n                    value={phoneNumber}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Office\"\r\n                    label=\"Office\"\r\n                    type=\"text\"\r\n                    value={office}\r\n                    onChange={(e) => setOffice(e.target.value)}\r\n                  />\r\n\r\n                  {templateOptions ? (\r\n                    <Form.Select\r\n                      placeholder=\"Use template\"\r\n                      options={templateOptions}\r\n                      onChange={handleSelectTemplate}\r\n                      value={select}\r\n                      clearable\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n\r\n                  <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n              </Form.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport ListService from '../../services/ListService';\r\n\r\nconst TemplateList = ({ history }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    /*     DepartmentService.allLists().then((res) => {\r\n      const templates = res.filter((list) => list.templateList);\r\n      setLists(templates);\r\n      console.log(templates);\r\n    }); */\r\n\r\n    ListService.all().then((res) => {\r\n      const templates = res.filter((list) => list.templateList);\r\n      setLists(templates);\r\n    });\r\n  }, []);\r\n\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    let listContent;\r\n\r\n    // eslint-disable-next-line no-unused-expressions\r\n    return lists[0].Lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? incompleted.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewCompleted\r\n          ? completedLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewAll\r\n          ? listContent.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p>{template ? 'No templates available' : 'No lists available'}</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          Templates\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <List>\r\n              {lists != null\r\n                ? lists.map((item) => (\r\n                    <List.Item key={item.id}>\r\n                      {console.log(item)}\r\n                      <List.Content floated=\"left\">\r\n                        <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                      </List.Content>\r\n                      <List.Content floated=\"left\">\r\n                        <p>\r\n                          {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                            <>\r\n                              <p>Contains: {item.Tasks.length} tasks</p>\r\n                            </>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </p>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  ))\r\n                : 'No templates exists, please create one'}\r\n            </List>\r\n          </Segment>\r\n          <Link to=\"/templates/create\">\r\n            <Button>New template</Button>\r\n          </Link>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateList;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst EmployeeLists = ({ history }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.allLists().then((res) => {\r\n      setLists(res);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const handleIncomplete = () => {\r\n    setViewIncomplete(true);\r\n    setViewCompleted(false);\r\n    setViewAll(false);\r\n  };\r\n  const handleCompleted = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(true);\r\n    setViewAll(false);\r\n  };\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    const listContent = lists[0].Lists.filter((item) => !item.templateList);\r\n\r\n    const completedLists = listContent.filter((item) => item.status);\r\n    const incompleted = listContent.filter((item) => !item.status);\r\n\r\n    return lists[0].Lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? incompleted.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : viewCompleted\r\n          ? completedLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : viewAll\r\n          ? listContent.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p> No lists available</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          Employee Lists\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          {lists != null && lists.length !== 0 ? (\r\n            <>\r\n              <Button.Group>\r\n                <Button onClick={() => handleIncomplete()}>Incomplete</Button>\r\n                <Button onClick={() => handleCompleted()}>Completed</Button>\r\n                <Button onClick={() => handleAll()}>All</Button>\r\n              </Button.Group>\r\n              <Segment>\r\n                <DisplayList />\r\n              </Segment>\r\n              <Link to=\"/lists/create\">\r\n                <Button>New employee list</Button>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            'No lists available, please contact your administrator'\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeLists;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst EditList = () => {\r\n  const [list, setList] = useState([]);\r\n  const listsId = useParams();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [listName, setListName] = useState();\r\n  const [departments, setDepartments] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [templateList, setTemplateList] = useState('');\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      setList(res);\r\n    });\r\n    DepartmentService.all().then((res) => {\r\n      setDepartments(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = departments.filter((o1) =>\r\n      list.Departments.some((o2) => o1.id !== o2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, name }) => ({\r\n      value: id,\r\n      text: name,\r\n    }));\r\n\r\n    setOptions(filterOptions);\r\n  }, [departments]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    if (select !== undefined) {\r\n      const data = {\r\n        name: listName !== list.name ? listName : list.name,\r\n        description:\r\n          description !== list.description ? description : list.description,\r\n        addedDepartment: select,\r\n        status: false,\r\n        templateList: templateList !== list.templateList ? templateList : title,\r\n      };\r\n\r\n      ListService.update(listsId.id, data).then((res) => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setList(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = (id) => {\r\n    const filter = list.Departments.filter(\r\n      (department) => department.id !== id\r\n    );\r\n\r\n    const data = {\r\n      departmentId: id,\r\n    };\r\n\r\n    ListService.update(listsId.id, data).then((res) => {\r\n      setList(res);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Edit list: {list.name}</Header>\r\n      </div>\r\n      {list.name !== undefined && departments !== undefined ? (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Header as=\"h4\">Summary for {list.name}</Header>\r\n              {list.description ? <p>Decription: {list.description}</p> : ''}\r\n              <Divider />\r\n\r\n              <h5>Template:</h5>\r\n              {list.templateList ? <p>Yes</p> : <p>No</p>}\r\n\r\n              <Header as=\"h5\">Departments:</Header>\r\n              {list.Departments !== undefined\r\n                ? list.Departments.map((item) => (\r\n                    <List celled>\r\n                      <List.Item key={uuidv4()}>\r\n                        <List.Content floated=\"left\">{item.name}</List.Content>\r\n                        <List.Content floated=\"right\">\r\n                          <Button\r\n                            compact\r\n                            onClick={() => deleteDepartment(item.id)}\r\n                          >\r\n                            X\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                : ''}\r\n              <Button floated=\"right\">Delete</Button>\r\n              <br />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment>\r\n              <Form.Group>\r\n                <Form onSubmit={handleUpdate}>\r\n                  <Form.Input\r\n                    placeholder=\"enter new name\"\r\n                    label=\"New name\"\r\n                    type=\"text\"\r\n                    value={listName}\r\n                    onChange={(e) => setListName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.TextArea\r\n                    placeholder=\"Enter description\"\r\n                    label=\"New description\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Select\r\n                    placeholder=\"Add department\"\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    value={select}\r\n                    clearable\r\n                  />\r\n\r\n                  <Form.Checkbox\r\n                    inline\r\n                    label=\"Template\"\r\n                    checked={list.templateList}\r\n                  />\r\n\r\n                  <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n              </Form.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Header, Segment, List, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport UserService from '../../services/UserService';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    UserService.findAll().then((res) => setUsers(res));\r\n  }, []);\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Users\r\n        </Header>\r\n      </div>\r\n      <Segment>\r\n        {users != null && users.length !== 0 ? (\r\n          <List>\r\n            {users.map((user) => (\r\n              <List.Item key={user.id}>\r\n                <List.Content>\r\n                  <p style={{ display: 'inline-block' }}>\r\n                    {user.firstName} {user.lastName}\r\n                  </p>\r\n                  <Link to={`/users/${user.id}`}>\r\n                    <Button floated=\"right\" compact>\r\n                      Edit\r\n                    </Button>\r\n                  </Link>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Segment>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n  Form,\r\n  Checkbox,\r\n  Button,\r\n  Message,\r\n} from 'semantic-ui-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserService from '../../services/UserService';\r\n\r\nconst User = ({ history }) => {\r\n  const usersId = useParams();\r\n  const [user, setUser] = useState([]);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setlastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [admin, setAdmin] = useState();\r\n  const [email, setEmail] = useState();\r\n\r\n  useEffect(() => {\r\n    UserService.findOne(usersId.id).then((res) => setUser(res));\r\n  }, []);\r\n\r\n  const handleDelete = () => {\r\n    UserService.destroy(usersId.id).then(() => history.push('/users'));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const data = {\r\n      firstName: firstName !== user.firstName ? firstName : user.firstName,\r\n      lastName: lastName !== user.lastName ? lastName : user.lastName,\r\n      password: password !== user.password ? password : user.password,\r\n      admin: admin !== user.admin ? admin : user.admin,\r\n      email: email !== user.email ? email : user.email,\r\n    };\r\n\r\n    UserService.edit(user.id, data).then(() => history.push('/users'));\r\n  };\r\n\r\n  const handlePassword = () => {\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      admin: user.admin,\r\n      email: user.email,\r\n    };\r\n\r\n    UserService.edit(user.id, data).then(() => history.push('/users'));\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Edit: {user.firstName} {user.lastName}\r\n        </Header>\r\n      </div>\r\n\r\n      <Message>\r\n        <p>\r\n          Name: {user.firstName} {user.lastName}\r\n        </p>\r\n        <p>Email: {user.email}</p>\r\n        <p>Admin access: {user.admin ? 'Yes' : 'No'}</p>\r\n      </Message>\r\n      <Segment>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Input\r\n            placeholder=\"Enter new first name\"\r\n            label=\"First name\"\r\n            type=\"text\"\r\n            value={firstName}\r\n            fluid\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          />\r\n          <Form.Input\r\n            placeholder=\" Enter new last name\"\r\n            label=\"Last name\"\r\n            type=\"text\"\r\n            value={lastName}\r\n            fluid\r\n            onChange={(e) => setlastName(e.target.value)}\r\n          />\r\n\r\n          <Form.Input\r\n            placeholder=\"Enter new e-mail\"\r\n            label=\"Email adress\"\r\n            type=\"text\"\r\n            value={email}\r\n            fluid\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <Form.Field\r\n            control={Checkbox}\r\n            label=\"Admin\"\r\n            value={admin}\r\n            onChange={(e) => setAdmin(e.target.value)}\r\n          />\r\n          <Form.Button content=\"Save\" />\r\n        </Form>\r\n      </Segment>\r\n\r\n      <Segment>\r\n        <Form onSubmit={handlePassword}>\r\n          <Form.Input\r\n            placeholder=\"Enter new password\"\r\n            label=\"Change password\"\r\n            type=\"password\"\r\n            value={password}\r\n            fluid\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Form.Button content=\"Save\" />\r\n        </Form>\r\n      </Segment>\r\n\r\n      <Button floated=\"right\" negative onClick={() => handleDelete()}>\r\n        Delete User\r\n      </Button>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport ListService from '../../services/ListService';\r\n\r\nconst AdminLists = ({ history, template, header }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    /*     DepartmentService.allLists().then((res) => {\r\n      setLists(res);\r\n      console.log(res);\r\n    });\r\n */\r\n\r\n    ListService.all().then((res) => {\r\n      const templates = res.filter((item) => item.templateList);\r\n      const employeeLists = res.filter((item) => !item.templateList);\r\n      console.log(templates);\r\n      console.log(employeeLists);\r\n      console.log(res);\r\n      setLists(res);\r\n    });\r\n  }, []);\r\n\r\n  const handleIncomplete = () => {\r\n    setViewIncomplete(true);\r\n    setViewCompleted(false);\r\n    setViewAll(false);\r\n  };\r\n  const handleCompleted = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(true);\r\n    setViewAll(false);\r\n  };\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    let listContent;\r\n\r\n    // eslint-disable-next-line no-unused-expressions\r\n\r\n    const templates = lists.filter((item) => item.templateList);\r\n    const employeeLists = lists.filter((item) => !item.templateList);\r\n    /* \r\n    const completedLists = listContent.filter((item) => item.status);\r\n    const incompleted = listContent.filter((item) => !item.status); */\r\n\r\n    return lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? templates.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewCompleted\r\n          ? employeeLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length != null ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewAll\r\n          ? lists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p>{template ? 'No templates available' : 'No lists available'}</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          {header}\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          {// eslint-disable-next-line no-nested-ternary\r\n          lists != null && lists.length !== 0 ? (\r\n            <>\r\n              <Button.Group>\r\n                <Button onClick={() => handleIncomplete()}>Templates</Button>\r\n                <Button onClick={() => handleCompleted()}>\r\n                  Employee Lists\r\n                </Button>\r\n                <Button onClick={() => handleAll()}>All</Button>\r\n              </Button.Group>\r\n              <Segment>\r\n                <DisplayList />\r\n              </Segment>\r\n\r\n              <Link to=\"/templates/create\">\r\n                <Button>New template</Button>\r\n              </Link>\r\n\r\n              <Link to=\"/lists/create\">\r\n                <Button>New employee list</Button>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            'No lists available'\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLists;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport AdminLists from './AdminLists';\r\nimport EmployeeLists from './EmployeeLists';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Lists = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  return <>{user.admin ? <AdminLists /> : <EmployeeLists />}</>;\r\n};\r\n\r\nexport default Lists;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthContextProvider from './context/AuthContext';\r\nimport Start from './components/Start';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Home from './components/Home';\r\nimport ProtectedRoute from './routes/ProtectedRoute';\r\nimport List from './components/list/List';\r\nimport Departments from './components/department/Departments';\r\nimport Department from './components/department/Department';\r\nimport CreateTemplate from './components/list/CreateTemplate';\r\nimport CreateEmployee from './components/list/CreateEmployee';\r\nimport TemplateList from './components/list/TemplateList';\r\nimport EmployeeList from './components/list/EmployeeLists';\r\nimport EditList from './components/list/EditList';\r\nimport Users from './components/users/Users';\r\nimport User from './components/users/User';\r\nimport Lists from './components/list/Lists';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <AuthContextProvider>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Start} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/register\" exact component={Register} />\r\n\r\n            <ProtectedRoute path=\"/home\" component={Home} />\r\n\r\n            <ProtectedRoute path=\"/users\" exact component={Users} />\r\n            <ProtectedRoute path=\"/users/:id\" exact component={User} />\r\n\r\n            <ProtectedRoute path=\"/lists\" exact component={Lists} />\r\n\r\n            <ProtectedRoute\r\n              path=\"/lists/create\"\r\n              exact\r\n              component={CreateEmployee}\r\n            />\r\n            <ProtectedRoute path=\"/lists/edit/:id\" exact component={EditList} />\r\n            <ProtectedRoute path=\"/lists/:id\" exact component={List} />\r\n\r\n            <ProtectedRoute\r\n              path=\"/templates/create\"\r\n              exact\r\n              component={CreateTemplate}\r\n            />\r\n            <ProtectedRoute path=\"/templates\" exact component={TemplateList} />\r\n\r\n            <ProtectedRoute path=\"/departments\" exact component={Departments} />\r\n            <ProtectedRoute\r\n              path=\"/departments/:id\"\r\n              exact\r\n              component={Department}\r\n            />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </AuthContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}