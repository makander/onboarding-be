{"version":3,"sources":["reducers/AuthReducer.js","context/AuthContext.jsx","services/UserService.js","components/Start.jsx","reducers/messageReducer.js","context/MessageContext.jsx","components/auth/Login.jsx","components/auth/Register.jsx","components/Home.jsx","components/navigation/Sidebar.jsx","components/navigation/Navbar.jsx","routes/ProtectedRoute.jsx","services/ListService.js","services/DepartmentService.js","services/TaskService.js","components/task/CreateTask.jsx","components/task/TaskDropDown.jsx","components/list/List.jsx","components/department/Departments.jsx","components/department/Department.jsx","components/list/CreateTemplate.jsx","services/EmployeeService.js","components/list/CreateEmployee.jsx","components/list/TemplateList.jsx","components/list/EmployeeLists.jsx","components/list/EditList.jsx","components/users/Users.jsx","components/users/User.jsx","components/list/AdminLists.jsx","components/list/Lists.jsx","components/Notification.js","App.jsx","serviceWorker.js","index.js"],"names":["authReducer","state","action","type","userIsAuthenticated","user","payload","AuthContext","createContext","AuthContextProvider","children","useReducer","authStatus","dispatch","Provider","value","loginUser","data","a","axios","post","logoutUser","registerUser","edit","id","put","destroy","delete","findAll","get","then","res","findOne","refresh","Start","useContext","history","useHistory","useEffect","UserService","push","catch","console","log","Grid","container","centered","columns","style","marginTop","Row","Column","width","textAlign","Segment","stacked","Header","size","to","Button","messageReducer","status","message","MessageContext","MessageProvider","dispatchMessage","Login","props","useState","email","setEmail","password","setPassword","Form","onSubmit","e","preventDefault","error","response","Field","name","placeholder","required","onChange","target","fluid","Register","firstName","setFirstName","lastName","setLastName","htmlFor","Home","profile","setProfile","tablet","computer","length","margin","float","Tasks","List","map","task","Item","ListId","admin","Departments","department","Loader","active","inline","Sidebar","Menu","vertical","color","minHeight","paddingLeft","inverted","fixed","as","Link","onClick","Navbar","only","top","paddingTop","ProtectedRoute","Component","component","render","stackable","redirectTo","all","update","create","allLists","allTasks","removeUser","getTasks","getAtask","userId","listId","deleteTask","updateTask","taskId","createTask","CreateTask","setTask","listsId","title","setTitle","description","setDescription","Group","newTask","TaskService","Input","label","TextArea","TaskDropDown","options","TaskServiceUpdateTask","select","setSelect","Select","content","Lists","list","setList","setOptions","departments","useParams","ListService","opts","flatMap","Users","text","filter","v","i","findIndex","t","UserId","templateList","Employee","verticalAlign","phoneNumber","office","item","key","padding","User","floated","compact","Checkbox","checked","taskStatus","taskData","handleStatus","positive","forEach","handleComplete","Message","secondary","negative","Department","setDepartments","setName","users","setUsers","DepartmentService","undefined","concat","multiple","clearable","loader","setLoader","departmentsId","filterOptions","entry1","some","entry2","updatedDepartment","Dimmer","Image","src","divided","Content","handleClick","CreateTemplate","setDepartment","Dropdown","selection","CreateEmployee","selectTemplate","setSelectTemplate","address","setAddress","setPhoneNumber","setOffice","setTemplateList","templateOptions","template","EmployeeService","control","TemplateList","lists","setLists","templates","EmployeeLists","viewAll","setViewAll","viewCompleted","setViewCompleted","viewIncomplete","setViewIncomplete","listContent","completedLists","incompleted","relaxed","EditList","listName","setListName","o1","o2","Divider","celled","uuidv4","departmentId","deleteDepartment","addedDepartment","display","usersId","setUser","setlastName","setAdmin","AdminLists","header","employeeLists","Notification","setTimeout","info","defaults","withCredentials","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a12a9d0.chunk.js","sourcesContent":["const authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: true,\r\n        user: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: false,\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport authReducer from '../reducers/AuthReducer';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [authStatus, dispatch] = useReducer(authReducer, {\r\n    userIsAuthenticated: false,\r\n    user: {},\r\n  });\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authStatus, dispatch }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import axios from 'axios';\r\n\r\nconst loginUser = async (data) => axios.post(`/api/user/login`, data);\r\n\r\nconst logoutUser = async () => axios.post(`/api/user/logout`);\r\n\r\nconst registerUser = async (data) => axios.post(`/api/user/register`, data);\r\n\r\nconst edit = async (id, data) => axios.put(`/api/user/${id}`, data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/user/${id}`);\r\n\r\nconst findAll = async () => axios.get(`/api/user/`).then((res) => res.data);\r\n\r\nconst findOne = async (id) =>\r\n  axios.get(`/api/user/${id}`).then((res) => res.data);\r\n\r\nconst refresh = async () => axios.post(`/api/user/refresh`);\r\n\r\nexport default {\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  edit,\r\n  destroy,\r\n  findAll,\r\n  findOne,\r\n  refresh,\r\n};\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { Segment, Header, Button, Grid } from 'semantic-ui-react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport UserService from '../services/UserService';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Start = () => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    UserService.refresh()\r\n      .then((res) => {\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: res.data.user,\r\n        });\r\n\r\n        history.push('/home');\r\n      })\r\n      .catch(() => {\r\n        console.log('user session has expired');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width={10} textAlign=\"center\">\r\n          <Segment stacked>\r\n            <Header size=\"large\">Welcome to Border</Header>\r\n            <p>Welcome to Border the task manager for teams</p>\r\n            <Link to=\"login\">\r\n              <Button>Login</Button>\r\n            </Link>\r\n\r\n            <Link to=\"register\">\r\n              <Button>Register</Button>\r\n            </Link>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","const messageReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INFO':\r\n      return {\r\n        ...state,\r\n        status: 'info',\r\n        message: action.payload,\r\n      };\r\n    case 'ERROR':\r\n      return {\r\n        ...state,\r\n        status: 'negative',\r\n        message: action.payload,\r\n      };\r\n    case 'SUCCESS':\r\n      return {\r\n        ...state,\r\n        status: 'positive',\r\n        message: action.payload,\r\n      };\r\n    case 'CLEAR':\r\n      return {\r\n        ...state,\r\n        status: '',\r\n        message: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messageReducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\nimport messageReducer from '../reducers/messageReducer';\r\n\r\nexport const MessageContext = createContext();\r\n\r\n\r\nconst MessageProvider = ({ children }) => {\r\n  const [state, dispatchMessage] = useReducer(messageReducer, {\r\n    message: '',\r\n    status: '',\r\n  });\r\n\r\n  return (\r\n    <MessageContext.Provider value={{ state, dispatchMessage }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MessageProvider;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport UserService from '../../services/UserService';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Login = (props) => {\r\n  const { history } = props;\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n  const { dispatch } = useContext(AuthContext);\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    UserService.loginUser({ email, password })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: res.data.user,\r\n        });\r\n\r\n        history.push('/home');\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Login to Border</Header>\r\n            <Form onSubmit={handleLogin}>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n              <p>\r\n                Don&apos;t have an account? Sign up&nbsp;\r\n                <Link to=\"/register\">here</Link>.\r\n              </p>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>{' '}\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Register = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  const handleRegistration = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post('/api/user/register', {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n      })\r\n      .then(() => {\r\n        dispatchMessage({\r\n          type: 'SUCCESS',\r\n          payload: 'registered',\r\n        });\r\n        history.push('/');\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container centered columns={1}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Signup to Border</Header>\r\n            <Form onSubmit={handleRegistration}>\r\n              <Form.Field>\r\n                <label htmlFor=\"First Name\">First name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Last Name\">Last Name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Email\">Email</label>\r\n                <input\r\n                  placeholder=\"Enter Email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Password\">Password</label>\r\n                <input\r\n                  placeholder=\"Enter Password\"\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Segment, Grid, Header, Loader } from 'semantic-ui-react';\r\nimport UserService from '../services/UserService';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { MessageContext } from '../context/MessageContext';\r\n\r\nconst Home = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  const [profile, setProfile] = useState([]);\r\n  useEffect(() => {\r\n    UserService.findOne(user.id)\r\n      .then((res) => setProfile(res))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid.Column centered tablet={14} computer={12}>\r\n      {profile != null && profile.length !== 0 ? (\r\n        <>\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header float=\"left\" textAlign=\"left\">\r\n              Welcome {user.firstName} {user.lastName}\r\n            </Header>\r\n          </div>\r\n\r\n          <Segment>\r\n            {profile.Tasks != null && profile.Tasks.length !== 0 ? (\r\n              <>\r\n                <Header>Tasks</Header>\r\n                <p>You are assigned to {profile.Tasks.length} tasks.</p>\r\n                <List>\r\n                  {profile.Tasks.map((task) => (\r\n                    <List.Item>\r\n                      <Link to={`/lists/${task.ListId}`}>{task.name}</Link>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            ) : (\r\n              'You are not assigned to any tasks'\r\n            )}\r\n          </Segment>\r\n\r\n          <Segment>\r\n            {!user.admin && user.Departments.length === 0\r\n              ? 'You are not assigned to a department, contact admin'\r\n              : user.admin && user.Departments.length === 0\r\n              ? 'You are not assigned to a department, please join or create one'\r\n              : ''}\r\n\r\n            {user.Departments != null && user.Departments.length !== 0 ? (\r\n              <>\r\n                <Header>Departments</Header>\r\n\r\n                <p>You a member of the following departments:</p>\r\n                <List>\r\n                  {user.Departments.map((department) => (\r\n                    <List.Item>{department.name}</List.Item>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <Segment style={{ margin: '2em 0' }}>\r\n          <Loader active inline=\"centered\" size=\"huge\">\r\n            Loading\r\n          </Loader>\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport UserService from '../../services/UserService';\r\n\r\nconst Sidebar = () => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    dispatch,\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    UserService.logoutUser().then(() => {\r\n      dispatch({\r\n        type: 'LOGOUT',\r\n      });\r\n\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      vertical\r\n      color=\"grey\"\r\n      style={{ marginTop: '0.5em', minHeight: '100vh', paddingLeft: '-1rem' }}\r\n      inverted\r\n      fixed\r\n    >\r\n      <Menu.Item as={Link} name=\"Home\" to=\"/home\" />\r\n      <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n      {user != null && user.admin != null ? (\r\n        <>\r\n          <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n          <Menu.Item as={Link} name=\"Users\" to=\"/users\" />\r\n          <Menu.Item as={Link} name=\"Profile\" to={`/users/${user.id}`} />\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Menu.Item>\r\n        <Menu.Menu>\r\n          <Menu.Item onClick={handleLogout}>logout</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useContext } from 'react';\r\nimport { Menu, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Navbar = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Grid.Row only=\"mobile tablet\">\r\n      <Menu top inverted style={{ width: '100%', paddingTop: '1em' }}>\r\n        <Menu.Item as={Link} name=\"Home\" to=\"/home\" />\r\n\r\n        <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n\r\n        {user != null && user.admin != null ? (\r\n          <>\r\n            <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n            <Menu.Item as={Link} name=\"Users\" to=\"/users\" />\r\n          </>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Menu.Item name=\"\">logout</Menu.Item>\r\n      </Menu>\r\n    </Grid.Row>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Sidebar from '../components/navigation/Sidebar';\r\nimport Navbar from '../components/navigation/Navbar';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  const { authStatus } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        authStatus.userIsAuthenticated ? (\r\n          <>\r\n            <Grid stackable columns={16}>\r\n              <Navbar />\r\n              <Grid.Row>\r\n                <Grid.Column only=\"computer\" width={3}>\r\n                  <Sidebar />\r\n                </Grid.Column>\r\n\r\n                <Grid.Column centered tablet={14} computer={12}>\r\n                  <Component {...props} />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Redirect to={props.redirectTo ? props.redirectTo : '/'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/list`).then((res) => res.data);\r\n\r\nconst get = async (id) => axios.get(`/api/list/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/list/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/list/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) =>\r\n  axios.post(`/api/list`, data).then((res) => res.data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst all = async () =>\r\n  axios.get(`/api/department/all`).then((res) => res.data);\r\n\r\nconst allLists = async () =>\r\n  axios.get(`/api/department/lists`).then((res) => res.data);\r\n\r\nconst allTasks = async () =>\r\n  axios.get(`/api/department/tasks`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/department/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/department/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/department/${id}`, data).then((res) => res.data);\r\n\r\nconst removeUser = async (id, data) =>\r\n  axios\r\n    .delete(`/api/department/${id}/user`, {\r\n      data,\r\n    })\r\n    .then((res) => res.data);\r\n\r\n/* const findAllDepartmentTasks = async () =>\r\n  axios\r\n    .get(`/api/department/tasks`)\r\n    .then((res) => res.data);\r\n\r\nconst findAllDepartmentLists = async () =>\r\n  axios\r\n    .get(`/api/department/lists`)\r\n    .then((res) => console.log(res));\r\n */\r\nconst create = async (data) => axios.post(`/api/department`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n  removeUser,\r\n  /*   findAllDepartmentTasks,\r\n  findAllDepartmentLists, */\r\n  allLists,\r\n  allTasks,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst getTasks = async () => axios.get(`/api/list`);\r\n\r\nconst getAtask = async (userId, listId) => axios.get(`/api/list/${listId}`);\r\n\r\nconst deleteTask = async (id) => axios.delete();\r\n\r\nconst updateTask = async (taskId, data) =>\r\n  axios.put(`/api/task/${taskId}`, data);\r\n\r\nconst createTask = async (data) => axios.post(`/api/task/`, data);\r\n\r\nexport default {\r\n  getTasks,\r\n  getAtask,\r\n  deleteTask,\r\n  updateTask,\r\n  createTask,\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { Form, Segment } from 'semantic-ui-react';\r\n\r\nimport TaskService from '../../services/TaskService';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst CreateTask = ({ setTask, listsId }) => {\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // const [user, setUser] = useState('');\r\n\r\n  const handleNewTask = () => {\r\n    const newTask = {\r\n      name: title,\r\n      description,\r\n      ListId: listsId,\r\n      status: false,\r\n    };\r\n\r\n    TaskService.createTask(newTask)\r\n      .then((res) => {\r\n        setTask(res.data);\r\n        setTitle('');\r\n        setDescription('');\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Segment>\r\n        <Form.Group>\r\n          <Form onSubmit={handleNewTask}>\r\n            <Form.Input\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n\r\n            <Form.TextArea\r\n              placeholder=\"Description\"\r\n              label=\"Description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              name=\"textarea\"\r\n            />\r\n\r\n            <Form.Button type=\"submit\">Save</Form.Button>\r\n          </Form>\r\n        </Form.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst TaskDropDown = ({ options, TaskServiceUpdateTask, id, setTask }) => {\r\n  const [select, setSelect] = useState('');\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n  const handleClick = (taskId) => {\r\n    const taskData = {\r\n      userId: select,\r\n    };\r\n    TaskServiceUpdateTask(taskId, taskData)\r\n      .then((res) => {\r\n        setTask([res]);\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n    setSelect('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group inline>\r\n        <Form.Select\r\n          placeholder=\"Assign User\"\r\n          options={options}\r\n          onChange={handleSelect}\r\n          value={select}\r\n        />\r\n\r\n        <Form.Button onClick={() => handleClick(id)} content=\"Save\" />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskDropDown;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\n\r\nimport {\r\n  Form,\r\n  Grid,\r\n  Segment,\r\n  Header,\r\n  Button,\r\n  Message,\r\n  Loader,\r\n  List,\r\n} from 'semantic-ui-react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport CreateTask from '../task/CreateTask';\r\nimport TaskService from '../../services/TaskService';\r\nimport TaskDropDown from '../task/TaskDropDown';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Lists = ({ history }) => {\r\n  const [list, setList] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [select, setSelect] = useState();\r\n\r\n  const [task, setTask] = useState([]);\r\n\r\n  const listsId = useParams();\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      console.log(res);\r\n      setList(res);\r\n    });\r\n  }, [task]);\r\n\r\n  useEffect(() => {\r\n    if (list.Departments != null) {\r\n      console.log(list.Departments);\r\n      const format = list.Departments.flatMap((user) =>\r\n        user.Users.map(({ id, firstName, lastName }) => ({\r\n          value: id,\r\n          text: `${firstName} ${lastName}`,\r\n        }))\r\n      );\r\n\r\n      const opts = format.filter(\r\n        (v, i, a) => a.findIndex((t) => t.value === v.value) === i\r\n      );\r\n\r\n      setOptions(opts);\r\n    }\r\n  }, [list]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    e.preventDefault();\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleStatus = (taskStatus, taskId) => {\r\n    const taskData = {\r\n      status: !taskStatus,\r\n    };\r\n\r\n    TaskService.updateTask(taskId, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const removeUser = (id) => {\r\n    const taskData = {\r\n      UserId: null,\r\n    };\r\n\r\n    TaskService.updateTask(id, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const data = {\r\n      name: list.name,\r\n      description: list.description,\r\n      status: true,\r\n      templateList: list.templateList,\r\n    };\r\n\r\n    ListService.update(list.id, data).then(() => {\r\n      list.Tasks.forEach((t) => {\r\n        removeUser(t.id);\r\n      });\r\n      history.push('/lists');\r\n    });\r\n  };\r\n\r\n  const deleteList = () => {\r\n    ListService.destroy(listsId.id).then(() => history.push('/lists'));\r\n  };\r\n\r\n  const CompleteSegment = () => {\r\n    return list.Tasks != null &&\r\n      list.Tasks.length !== 0 &&\r\n      list.status !== true ? (\r\n      <>\r\n        {list.Tasks.filter((item) => item.status).length ===\r\n        list.Tasks.length ? (\r\n          <Button positive fluid onClick={() => handleComplete()}>\r\n            Complete list\r\n          </Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </>\r\n    ) : list.status === true ? (\r\n      <Message positive>This list has been completed</Message>\r\n    ) : (\r\n      <Loader />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column centered tablet={14} computer={12}>\r\n      {list != null && list.length !== 0 ? (\r\n        <>\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header as=\"h2\" textAlign=\"left\">\r\n              {list.templateList\r\n                ? `Task for template:  ${list.name}`\r\n                : `Tasks for:  ${list.name}`}\r\n            </Header>\r\n          </div>\r\n\r\n          <Grid stackable textAlign=\"left\">\r\n            {list.Tasks != null && list.Employee ? (\r\n              <Grid.Row>\r\n                <Grid.Column verticalAlign=\"middle\">\r\n                  <Segment>\r\n                    <Header as=\"h3\">Employee information</Header>\r\n                    <List>\r\n                      <List.Item>\r\n                        <p>\r\n                          Name: {list.Employee.firstName}{' '}\r\n                          {list.Employee.lastName}\r\n                        </p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Title: {list.Employee.title}</p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Phone: {list.Employee.phoneNumber}</p>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <p>Office: {list.Employee.office}</p>\r\n                      </List.Item>\r\n                    </List>\r\n                  </Segment>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {list.Tasks != null && list.Tasks.length !== 0 ? (\r\n              list.Tasks.map((item) => (\r\n                <Grid.Row key={item.id} style={{ padding: '0' }}>\r\n                  <Grid.Column verticalAlign=\"middle\" computer=\"3\">\r\n                    {item.name}\r\n                  </Grid.Column>\r\n                  <>\r\n                    {!list.templateList ? (\r\n                      <>\r\n                        <Grid.Column\r\n                          verticalAlign=\"middle\"\r\n                          tablet=\"3\"\r\n                          computer=\"5\"\r\n                        >\r\n                          {item.User != null && item.User != null ? (\r\n                            <>\r\n                              <p>\r\n                                Assigned: {item.User.firstName}{' '}\r\n                                {item.User.lastName}\r\n                                <Button\r\n                                  floated=\"right\"\r\n                                  compact\r\n                                  onClick={() => removeUser(item.id)}\r\n                                >\r\n                                  x\r\n                                </Button>\r\n                              </p>\r\n                            </>\r\n                          ) : (\r\n                            'No assigned user'\r\n                          )}\r\n                        </Grid.Column>\r\n                        <Grid.Column verticalAlign=\"middle\" computer=\"5\">\r\n                          <TaskDropDown\r\n                            options={options}\r\n                            TaskServiceUpdateTask={TaskService.updateTask}\r\n                            id={item.id}\r\n                            setTask={setTask}\r\n                          />\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                          <Form>\r\n                            <Form.Checkbox\r\n                              inline\r\n                              label=\"completed\"\r\n                              checked={item.status}\r\n                              onChange={() =>\r\n                                handleStatus(item.status, item.id)\r\n                              }\r\n                            />\r\n                          </Form>\r\n                        </Grid.Column>\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </>\r\n                </Grid.Row>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <p>No tasks available for this list.</p>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <CompleteSegment />\r\n\r\n          <>\r\n            <Header>Add task</Header>\r\n            <CreateTask\r\n              setTask={setTask}\r\n              listsId={listsId.id}\r\n              departments={departments}\r\n            />\r\n\r\n            {user.admin ? (\r\n              <>\r\n                {list.templateList ? (\r\n                  <Button positive onClick={() => history.push('/lists')}>\r\n                    Save template\r\n                  </Button>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <Button.Group floated=\"right\">\r\n                  <Button secondary>\r\n                    <Link\r\n                      style={{ color: 'White' }}\r\n                      to={`/lists/edit/${listsId.id}`}\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </Button>\r\n\r\n                  <Button negative onClick={() => deleteList()}>\r\n                    Delete\r\n                  </Button>\r\n                </Button.Group>\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </>\r\n        </>\r\n      ) : (\r\n        <Segment style={{ margin: '2em 0' }}>\r\n          <Loader active inline=\"centered\" size=\"huge\">\r\n            Loading\r\n          </Loader>\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Form, Segment, Grid, Header } from 'semantic-ui-react';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport UserService from '../../services/UserService';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Department = () => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    // UserService.findAll().then((res) => setUsers(res));\r\n    UserService.findAll()\r\n      .then((res) => setUsers(res))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n    DepartmentService.all()\r\n      .then((res) => {\r\n        setDepartments(res);\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    const department = {\r\n      name,\r\n      description,\r\n      users: select,\r\n    };\r\n\r\n    DepartmentService.create(department).then((res) => {\r\n      setDepartments(departments.concat([res.data]));\r\n    });\r\n    setSelect([]);\r\n    setName('');\r\n    setDescription();\r\n  };\r\n\r\n  const options = users.map(({ id, firstName, lastName }) => ({\r\n    value: id,\r\n    text: `${firstName} ${lastName}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  /*   const handleClick = (id) => {\r\n    DepartmentService.destroy(id);\r\n    const filter = departments.filter((department) => department.id !== id);\r\n    setDepartments(filter);\r\n  }; */\r\n\r\n  return (\r\n    <>\r\n      {user.admin ? (\r\n        <Grid.Column width=\"13\">\r\n          <div style={{ margin: '2em 0' }}>\r\n            <Header as=\"h2\" textAlign=\"left\">\r\n              Departments\r\n            </Header>\r\n          </div>\r\n          <Segment>\r\n            {departments.length !== null && departments.length !== 0 ? (\r\n              <Grid stackable columns={13} textAlign=\"left\">\r\n                {departments.map((item) => (\r\n                  <Grid.Row key={item.id} centered>\r\n                    <Grid.Column verticalAlign=\"middle\" computer=\"4\">\r\n                      <Link to={`/departments/${item.id}`}>{item.name}</Link>\r\n                    </Grid.Column>\r\n                    <Grid.Column\r\n                      floated=\"right\"\r\n                      verticalAlign=\"middle\"\r\n                      computer=\"4\"\r\n                    >\r\n                      {item.Users !== undefined ? (\r\n                        <p>Members: {item.Users.length}</p>\r\n                      ) : null}\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                ))}\r\n              </Grid>\r\n            ) : (\r\n              <p>No departments available, please create one below</p>\r\n            )}\r\n          </Segment>\r\n          {users.length > 0 ? (\r\n            <Grid.Column width=\"13\">\r\n              <Header as=\"h3\">Create new department</Header>\r\n              <Segment>\r\n                <Form.Group>\r\n                  <Form onSubmit={onSubmit}>\r\n                    <Form.Input\r\n                      placeholder=\"Enter department name\"\r\n                      label=\"Department name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n\r\n                    {/*        <TextArea\r\n                placeholder=\"Description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                setInputValue={setDescription}\r\n                name=\"textarea\"\r\n              />\r\n */}\r\n\r\n                    <Form.Select\r\n                      placeholder=\"Add user to department\"\r\n                      options={options}\r\n                      onChange={handleSelect}\r\n                      value={select}\r\n                      multiple\r\n                      clearable\r\n                    />\r\n                    <Form.Button type=\"submit\">Save</Form.Button>\r\n                  </Form>\r\n                </Form.Group>\r\n              </Segment>\r\n            </Grid.Column>\r\n          ) : null}{' '}\r\n        </Grid.Column>\r\n      ) : (\r\n        'Not authorized'\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Segment,\r\n  Form,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n  List,\r\n} from 'semantic-ui-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DepartmentService from '../../services/DepartmentService';\r\nimport UserService from '../../services/UserService';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Department = ({ history }) => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n  const departmentsId = useParams();\r\n\r\n  useEffect(() => {\r\n    DepartmentService.get(departmentsId.id)\r\n      .then((res) => {\r\n        setDepartments(res);\r\n      })\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n    UserService.findAll()\r\n      .then((data) => setUsers(data))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = users.filter(\r\n      (entry1) =>\r\n        departments.Users &&\r\n        !departments.Users.some((entry2) => entry1.id === entry2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, firstName, lastName }) => ({\r\n      value: id,\r\n      text: `${firstName} ${lastName}`,\r\n    }));\r\n    setOptions(filterOptions);\r\n    setLoader(false);\r\n  }, [users, departments]);\r\n\r\n  const onSubmit = () => {\r\n    if (name === '' && select.length === 0) {\r\n      const updatedDepartment = {\r\n        name: departments.name,\r\n        users: departments.Users,\r\n      };\r\n      DepartmentService.update(departmentsId.id, updatedDepartment).then(\r\n        (res) => {\r\n          setDepartments(res);\r\n        }\r\n      );\r\n    } else {\r\n      const data = {\r\n        name,\r\n        users: select,\r\n      };\r\n\r\n      DepartmentService.update(departmentsId.id, data).then((res) => {\r\n        setDepartments(res);\r\n      });\r\n    }\r\n    setSelect([]);\r\n    setName('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    DepartmentService.destroy(departmentsId.id);\r\n    history.push('/departments');\r\n  };\r\n\r\n  const handleClick = (e, id) => {\r\n    e.preventDefault();\r\n    DepartmentService.removeUser(departmentsId.id, { UserId: id }).then(\r\n      (res) => {\r\n        setDepartments(res);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Edit: {departments.name}\r\n        </Header>\r\n      </div>\r\n      {!loader ? (\r\n        <Grid stackable columns={16}>\r\n          <Grid.Column width=\"16\">\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Change name on department: {departments.name}</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Input\r\n                      placeholder=\"New name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <Form.Button content=\"Save\" />\r\n                  </Form.Group>\r\n                </Form>\r\n                <Form onSubmit={handleDelete}>\r\n                  <Form.Button>Delete</Form.Button>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n            <Grid.Row>\r\n              <Segment style={{ marginTop: '2em' }}>\r\n                <Header>Users in department: </Header>\r\n                {departments.Users !== undefined &&\r\n                departments.Users.length !== 0 ? (\r\n                  departments.Users.map((item) => (\r\n                    <List divided key={item.id}>\r\n                      <List.Item>\r\n                        <List.Content floated=\"left\" verticalAlign=\"bottom\">\r\n                          {item.firstName} {item.lastName}\r\n                        </List.Content>\r\n                        <List.Content verticalAlign=\"top\">\r\n                          <Button\r\n                            compact\r\n                            onClick={(e) => handleClick(e, item.id)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                ) : (\r\n                  <p>No users members in this department</p>\r\n                )}\r\n              </Segment>\r\n            </Grid.Row>\r\n\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Add users</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Select\r\n                      placeholder=\"Add user to department\"\r\n                      options={options}\r\n                      onChange={handleSelect}\r\n                      value={select}\r\n                      multiple\r\n                      clearable\r\n                    />\r\n\r\n                    <Form.Button type=\"submit\">Save</Form.Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      ) : (\r\n        <Segment>\r\n          <Dimmer active inverted>\r\n            <Loader size=\"large\">Loading</Loader>\r\n          </Dimmer>\r\n\r\n          <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Dropdown,\r\n} from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst CreateTemplate = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n\r\n  const [department, setDepartment] = useState([]);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.all().then((res) => setDepartment(res));\r\n  }, []);\r\n\r\n  const options = department.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: title,\r\n      description,\r\n      departments: select,\r\n      status: false,\r\n      templateList: true,\r\n    };\r\n\r\n    ListService.create(data).then((res) => {\r\n      if (res.templateList) {\r\n        history.push(`/lists/${res.id}`);\r\n      }\r\n      setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n    });\r\n    /*     setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n   */\r\n    /*     if (templateList) {\r\n        navigate('/home');\r\n      } */\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"10\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Create new template</Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={handleNewList}>\r\n                <Form.Input\r\n                  placeholder=\"Title\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                {options ? (\r\n                  <Dropdown\r\n                    placeholder=\"Select departments\"\r\n                    fluid\r\n                    label=\"Department\"\r\n                    multiple\r\n                    // search\r\n                    selection\r\n                    value={select}\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    // defaultValue={[]}\r\n                    clearable\r\n                  />\r\n                ) : null}\r\n                <div style={{ marginTop: '1em' }}>\r\n                  <Button type=\"submit\">Save</Button>\r\n                </div>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default CreateTemplate;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/employee/all`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/employee/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/employee/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/employee/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) => axios.post(`/api/employee`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Input,\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n} from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport EmployeeService from '../../services/EmployeeService';\r\nimport ListService from '../../services/ListService';\r\n\r\nconst CreateEmployee = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [office, setOffice] = useState('');\r\n  const [templateList, setTemplateList] = useState([]);\r\n\r\n  const templateOptions = templateList.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelectTemplate = (e, { value }) => {\r\n    setSelectTemplate(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ListService.all().then((res) => {\r\n      const template = res.filter((item) => item.templateList);\r\n      setTemplateList(template);\r\n    });\r\n  }, []);\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      listId: selectTemplate || '',\r\n      description,\r\n      departments: select || '',\r\n      status: false,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phoneNumber,\r\n      address,\r\n      office,\r\n      title,\r\n    };\r\n\r\n    EmployeeService.create(data).then(() => {\r\n      setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n      setSelectTemplate([]);\r\n      setFirstName('');\r\n      setLastName('');\r\n      setOffice('');\r\n      setAddress('');\r\n      setEmail('');\r\n      setPhoneNumber('');\r\n      history.push('/lists');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column width=\"13\">\r\n        <div style={{ margin: '2em 0' }}>\r\n          <Header textAlign=\"left\">Create new list</Header>\r\n        </div>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Form.Group>\r\n                <Form onSubmit={handleNewList}>\r\n                  <Form.Input\r\n                    placeholder=\"First name\"\r\n                    label=\"First name\"\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Last name\"\r\n                    label=\"Last name\"\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Title\"\r\n                    label=\"Title\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Email\"\r\n                    label=\"Email\"\r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Adress\"\r\n                    label=\"Adress\"\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Phone Number\"\r\n                    label=\"Phone number\"\r\n                    control={Input}\r\n                    type=\"text\"\r\n                    value={phoneNumber}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    placeholder=\"Office\"\r\n                    label=\"Office\"\r\n                    type=\"text\"\r\n                    value={office}\r\n                    onChange={(e) => setOffice(e.target.value)}\r\n                  />\r\n\r\n                  {templateOptions.length ? (\r\n                    <Form.Select\r\n                      placeholder=\"Use template\"\r\n                      options={templateOptions}\r\n                      onChange={handleSelectTemplate}\r\n                      value={select}\r\n                      clearable\r\n                    />\r\n                  ) : (\r\n                    <Message>\r\n                      <p>\r\n                        No templates available. To use templates, contact your\r\n                        administator\r\n                      </p>\r\n                    </Message>\r\n                  )}\r\n\r\n                  <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n              </Form.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport ListService from '../../services/ListService';\r\n\r\nconst TemplateList = ({ history }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    /*     DepartmentService.allLists().then((res) => {\r\n      const templates = res.filter((list) => list.templateList);\r\n      setLists(templates);\r\n      console.log(templates);\r\n    }); */\r\n\r\n    ListService.all().then((res) => {\r\n      const templates = res.filter((list) => list.templateList);\r\n      setLists(templates);\r\n    });\r\n  }, []);\r\n\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    let listContent;\r\n\r\n    // eslint-disable-next-line no-unused-expressions\r\n    return lists[0].Lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? incompleted.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewCompleted\r\n          ? completedLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewAll\r\n          ? listContent.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p>{template ? 'No templates available' : 'No lists available'}</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          Templates\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <List>\r\n              {lists != null\r\n                ? lists.map((item) => (\r\n                    <List.Item key={item.id}>\r\n                      {console.log(item)}\r\n                      <List.Content floated=\"left\">\r\n                        <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                      </List.Content>\r\n                      <List.Content floated=\"left\">\r\n                        <p>\r\n                          {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                            <>\r\n                              <p>Contains: {item.Tasks.length} tasks</p>\r\n                            </>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </p>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  ))\r\n                : 'No templates exists, please create one'}\r\n            </List>\r\n          </Segment>\r\n          <Link to=\"/templates/create\">\r\n            <Button>New template</Button>\r\n          </Link>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateList;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst EmployeeLists = ({ history }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.allLists().then((res) => {\r\n      setLists(res);\r\n    });\r\n\r\n  }, []);\r\n\r\n  const handleIncomplete = () => {\r\n    setViewIncomplete(true);\r\n    setViewCompleted(false);\r\n    setViewAll(false);\r\n  };\r\n  const handleCompleted = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(true);\r\n    setViewAll(false);\r\n  };\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    const listContent = lists[0].Lists.filter((item) => !item.templateList);\r\n\r\n    const completedLists = listContent.filter((item) => item.status);\r\n    const incompleted = listContent.filter((item) => !item.status);\r\n\r\n    return lists[0].Lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? incompleted.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : viewCompleted\r\n          ? completedLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : viewAll\r\n          ? listContent.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length !== 0 ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p> No lists available</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          Employee Lists\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          {lists != null && lists.length !== 0 ? (\r\n            <>\r\n              <Button.Group>\r\n                <Button onClick={() => handleIncomplete()}>Incomplete</Button>\r\n                <Button onClick={() => handleCompleted()}>Completed</Button>\r\n                <Button onClick={() => handleAll()}>All</Button>\r\n              </Button.Group>\r\n              <Segment>\r\n                <DisplayList />\r\n              </Segment>\r\n              <Link to=\"/lists/create\">\r\n                <Button>New employee list</Button>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            'No lists available, please contact your administrator'\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeLists;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../../services/ListService';\r\nimport DepartmentService from '../../services/DepartmentService';\r\n\r\nconst EditList = () => {\r\n  const [list, setList] = useState([]);\r\n  const listsId = useParams();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [listName, setListName] = useState();\r\n  const [departments, setDepartments] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [templateList, setTemplateList] = useState('');\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      setList(res);\r\n    });\r\n    DepartmentService.all().then((res) => {\r\n      setDepartments(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = departments.filter((o1) =>\r\n      list.Departments.some((o2) => o1.id !== o2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, name }) => ({\r\n      value: id,\r\n      text: name,\r\n    }));\r\n\r\n    setOptions(filterOptions);\r\n  }, [departments]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    if (select !== undefined) {\r\n      const data = {\r\n        name: listName !== list.name ? listName : list.name,\r\n        description:\r\n          description !== list.description ? description : list.description,\r\n        addedDepartment: select,\r\n        status: false,\r\n        templateList: templateList !== list.templateList ? templateList : title,\r\n      };\r\n\r\n      ListService.update(listsId.id, data).then((res) => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setList(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = (id) => {\r\n    const filter = list.Departments.filter(\r\n      (department) => department.id !== id\r\n    );\r\n\r\n    const data = {\r\n      departmentId: id,\r\n    };\r\n\r\n    ListService.update(listsId.id, data).then((res) => {\r\n      setList(res);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Edit list: {list.name}</Header>\r\n      </div>\r\n      {list.name !== undefined && departments !== undefined ? (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Header as=\"h4\">Summary for {list.name}</Header>\r\n              {list.description ? <p>Decription: {list.description}</p> : ''}\r\n              <Divider />\r\n\r\n              <h5>Template:</h5>\r\n              {list.templateList ? <p>Yes</p> : <p>No</p>}\r\n\r\n              <Header as=\"h5\">Departments:</Header>\r\n              {list.Departments !== undefined\r\n                ? list.Departments.map((item) => (\r\n                    <List celled>\r\n                      <List.Item key={uuidv4()}>\r\n                        <List.Content floated=\"left\">{item.name}</List.Content>\r\n                        <List.Content floated=\"right\">\r\n                          <Button\r\n                            compact\r\n                            onClick={() => deleteDepartment(item.id)}\r\n                          >\r\n                            X\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                : ''}\r\n              <Button floated=\"right\">Delete</Button>\r\n              <br />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment>\r\n              <Form.Group>\r\n                <Form onSubmit={handleUpdate}>\r\n                  <Form.Input\r\n                    placeholder=\"enter new name\"\r\n                    label=\"New name\"\r\n                    type=\"text\"\r\n                    value={listName}\r\n                    onChange={(e) => setListName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.TextArea\r\n                    placeholder=\"Enter description\"\r\n                    label=\"New description\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Select\r\n                    placeholder=\"Add department\"\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    value={select}\r\n                    clearable\r\n                  />\r\n\r\n                  <Form.Checkbox\r\n                    inline\r\n                    label=\"Template\"\r\n                    checked={list.templateList}\r\n                  />\r\n\r\n                  <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n              </Form.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Header, Segment, List, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport UserService from '../../services/UserService';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    UserService.findAll()\r\n      .then((res) => setUsers(res))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Users\r\n        </Header>\r\n      </div>\r\n      <Segment>\r\n        {users != null && users.length !== 0 ? (\r\n          <List>\r\n            {users.map((user) => (\r\n              <List.Item key={user.id}>\r\n                <List.Content>\r\n                  <p style={{ display: 'inline-block' }}>\r\n                    {user.firstName} {user.lastName}\r\n                  </p>\r\n                  <Link to={`/users/${user.id}`}>\r\n                    <Button floated=\"right\" compact>\r\n                      Edit\r\n                    </Button>\r\n                  </Link>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Segment>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n  Form,\r\n  Checkbox,\r\n  Button,\r\n  Message,\r\n} from 'semantic-ui-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserService from '../../services/UserService';\r\nimport { MessageContext } from '../../context/MessageContext';\r\n\r\nconst User = ({ history }) => {\r\n  const usersId = useParams();\r\n  const [user, setUser] = useState([]);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setlastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [admin, setAdmin] = useState();\r\n  const [email, setEmail] = useState();\r\n  const { dispatchMessage } = useContext(MessageContext);\r\n\r\n  useEffect(() => {\r\n    UserService.findOne(usersId.id)\r\n      .then((res) => setUser(res))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = () => {\r\n    UserService.destroy(usersId.id)\r\n      .then(() => history.push('/users'))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const data = {\r\n      firstName: firstName !== user.firstName ? firstName : user.firstName,\r\n      lastName: lastName !== user.lastName ? lastName : user.lastName,\r\n      password: password !== user.password ? password : user.password,\r\n      admin: admin !== user.admin ? admin : user.admin,\r\n      email: email !== user.email ? email : user.email,\r\n    };\r\n\r\n    UserService.edit(user.id, data)\r\n      .then(() => history.push('/users'))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handlePassword = () => {\r\n    const data = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      admin: user.admin,\r\n      email: user.email,\r\n    };\r\n\r\n    UserService.edit(user.id, data)\r\n      .then(() => history.push('/users'))\r\n      .catch((error) => {\r\n        dispatchMessage({\r\n          type: 'ERROR',\r\n          payload: error.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Edit: {user.firstName} {user.lastName}\r\n        </Header>\r\n      </div>\r\n\r\n      <Message>\r\n        <p>\r\n          Name: {user.firstName} {user.lastName}\r\n        </p>\r\n        <p>Email: {user.email}</p>\r\n        <p>Admin access: {user.admin ? 'Yes' : 'No'}</p>\r\n      </Message>\r\n      <Segment>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Input\r\n            placeholder=\"Enter new first name\"\r\n            label=\"First name\"\r\n            type=\"text\"\r\n            value={firstName}\r\n            fluid\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          />\r\n          <Form.Input\r\n            placeholder=\" Enter new last name\"\r\n            label=\"Last name\"\r\n            type=\"text\"\r\n            value={lastName}\r\n            fluid\r\n            onChange={(e) => setlastName(e.target.value)}\r\n          />\r\n\r\n          <Form.Input\r\n            placeholder=\"Enter new e-mail\"\r\n            label=\"Email adress\"\r\n            type=\"text\"\r\n            value={email}\r\n            fluid\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <Form.Field\r\n            control={Checkbox}\r\n            label=\"Admin\"\r\n            value={admin}\r\n            onChange={(e) => setAdmin(e.target.value)}\r\n          />\r\n          <Form.Button content=\"Save\" />\r\n        </Form>\r\n      </Segment>\r\n\r\n      <Segment>\r\n        <Form onSubmit={handlePassword}>\r\n          <Form.Input\r\n            placeholder=\"Enter new password\"\r\n            label=\"Change password\"\r\n            type=\"password\"\r\n            value={password}\r\n            fluid\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Form.Button content=\"Save\" />\r\n        </Form>\r\n      </Segment>\r\n\r\n      <Button floated=\"right\" negative onClick={() => handleDelete()}>\r\n        Delete User\r\n      </Button>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ListService from '../../services/ListService';\r\n\r\nconst AdminLists = ({ template, header }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  useEffect(() => {\r\n    ListService.all().then((res) => {\r\n      setLists(res);\r\n    });\r\n  }, []);\r\n\r\n  const handleIncomplete = () => {\r\n    setViewIncomplete(true);\r\n    setViewCompleted(false);\r\n    setViewAll(false);\r\n  };\r\n  const handleCompleted = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(true);\r\n    setViewAll(false);\r\n  };\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  const DisplayList = () => {\r\n    let listContent;\r\n\r\n    // eslint-disable-next-line no-unused-expressions\r\n\r\n    const templates = lists.filter((item) => item.templateList);\r\n    const employeeLists = lists.filter((item) => !item.templateList);\r\n\r\n    return lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? templates.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"right\">\r\n                  <p>Template</p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewCompleted\r\n          ? employeeLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length != null ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n                <List.Content floated=\"right\">\r\n                  <p>Employee List</p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewAll\r\n          ? lists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                {item.templateList ? (\r\n                  <List.Content floated=\"right\">Template</List.Content>\r\n                ) : (\r\n                  <List.Content floated=\"right\">Employee list</List.Content>\r\n                )}\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks != null && item.Tasks.length != null ? (\r\n                      <>\r\n                        {item.Tasks.length ===\r\n                        item.Tasks.filter((task) => task.status).length ? (\r\n                          'Completed'\r\n                        ) : (\r\n                          <>\r\n                            {!item.templateList ? (\r\n                              <p>\r\n                                Completed tasks:{' '}\r\n                                {\r\n                                  item.Tasks.filter((task) => task.status)\r\n                                    .length\r\n                                }{' '}\r\n                                {' / '}\r\n                                {item.Tasks.length}\r\n                              </p>\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p>{template ? 'No templates available' : 'No lists available'}</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          {header}\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <>\r\n            <Button.Group>\r\n              <Button onClick={() => handleIncomplete()}>Templates</Button>\r\n              <Button onClick={() => handleCompleted()}>Employee Lists</Button>\r\n              <Button onClick={() => handleAll()}>All</Button>\r\n            </Button.Group>\r\n            <Segment>\r\n              <DisplayList />\r\n            </Segment>\r\n\r\n            <Link to=\"/templates/create\">\r\n              <Button>New template</Button>\r\n            </Link>\r\n\r\n            <Link to=\"/lists/create\">\r\n              <Button>New employee list</Button>\r\n            </Link>\r\n          </>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLists;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport AdminLists from './AdminLists';\r\nimport EmployeeLists from './EmployeeLists';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst Lists = () => {\r\n  const {\r\n    authStatus: { user },\r\n  } = useContext(AuthContext);\r\n\r\n  return <>{user.admin ? <AdminLists /> : <EmployeeLists />}</>;\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useContext } from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nimport { MessageContext } from '../context/MessageContext';\r\n\r\nconst Notification = () => {\r\n  const {\r\n    dispatchMessage,\r\n    state: { message, status },\r\n  } = useContext(MessageContext);\r\n\r\n  if (message === '') {\r\n    return '';\r\n  }\r\n  setTimeout(() => {\r\n    dispatchMessage({ type: 'CLEAR' });\r\n  }, 5000);\r\n\r\n  if (status === 'positive') {\r\n    return <Message positive>{message}</Message>;\r\n  }\r\n\r\n  if (status === 'negative') {\r\n    return <Message negative>{message}</Message>;\r\n  }\r\n\r\n  if (status === 'info') {\r\n    return <Message info>{message}</Message>;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthContextProvider from './context/AuthContext';\r\nimport Start from './components/Start';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Home from './components/Home';\r\nimport ProtectedRoute from './routes/ProtectedRoute';\r\nimport List from './components/list/List';\r\nimport Departments from './components/department/Departments';\r\nimport Department from './components/department/Department';\r\nimport CreateTemplate from './components/list/CreateTemplate';\r\nimport CreateEmployee from './components/list/CreateEmployee';\r\nimport TemplateList from './components/list/TemplateList';\r\nimport EmployeeList from './components/list/EmployeeLists';\r\nimport EditList from './components/list/EditList';\r\nimport Users from './components/users/Users';\r\nimport User from './components/users/User';\r\nimport Lists from './components/list/Lists';\r\nimport MessageProvider from './context/MessageContext';\r\nimport Notification from './components/Notification';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MessageProvider>\r\n        <Notification />\r\n        <AuthContextProvider>\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route path=\"/*\" render={() => <Start />} />\r\n\r\n              <Route path=\"/\" exact component={Start} />\r\n              <Route path=\"/login\" exact component={Login} />\r\n              <Route path=\"/register\" exact component={Register} />\r\n\r\n              <ProtectedRoute path=\"/home\" component={Home} />\r\n\r\n              <ProtectedRoute path=\"/users\" exact component={Users} />\r\n              <ProtectedRoute path=\"/users/:id\" exact component={User} />\r\n\r\n              <ProtectedRoute path=\"/lists\" exact component={Lists} />\r\n\r\n              <ProtectedRoute\r\n                path=\"/lists/create\"\r\n                exact\r\n                component={CreateEmployee}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/lists/edit/:id\"\r\n                exact\r\n                component={EditList}\r\n              />\r\n              <ProtectedRoute path=\"/lists/:id\" exact component={List} />\r\n\r\n              <ProtectedRoute\r\n                path=\"/templates/create\"\r\n                exact\r\n                component={CreateTemplate}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/templates\"\r\n                exact\r\n                component={TemplateList}\r\n              />\r\n\r\n              <ProtectedRoute\r\n                path=\"/departments\"\r\n                exact\r\n                component={Departments}\r\n              />\r\n              <ProtectedRoute\r\n                path=\"/departments/:id\"\r\n                exact\r\n                component={Department}\r\n              />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </AuthContextProvider>\r\n      </MessageProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}