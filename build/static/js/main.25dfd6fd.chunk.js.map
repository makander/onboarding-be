{"version":3,"sources":["reducers/AuthReducer.js","context/AuthContex.jsx","components/Start.jsx","services/UserService.js","components/Login.jsx","components/Register.jsx","components/Home.jsx","components/ContentWrap.jsx","components/Sidebar.jsx","routes/ProtectedRoute.jsx","services/ListService.js","services/DepartmentService.js","services/TaskService.js","components/CreateTask.jsx","components/TaskDropDown.jsx","components/List.jsx","components/Departments.jsx","components/Department.jsx","components/CreateTemplate.jsx","services/EmployeeService.js","components/CreateEmployee.jsx","components/Lists.jsx","components/TemplateList.jsx","components/EmployeeLists.jsx","components/EditList.jsx","App.jsx","serviceWorker.js","index.js"],"names":["authReducer","state","action","type","userIsAuthenticated","user","payload","AuthContext","createContext","AuthContextProvider","children","useReducer","authStatus","dispatch","Provider","value","Start","Grid","container","centered","columns","style","marginTop","Row","Column","width","textAlign","Segment","stacked","Header","size","to","Button","axios","defaults","headers","loginUser","data","a","post","logoutUser","id","registerUser","edit","put","destroy","delete","findAll","get","then","res","findOne","Login","props","history","useState","email","setEmail","password","setPassword","useContext","Form","onSubmit","e","preventDefault","UserService","push","catch","err","console","log","Field","name","placeholder","required","onChange","target","fluid","Register","firstName","setFirstName","lastName","setLastName","htmlFor","Home","useEffect","List","divided","Item","ContentWrap","stackable","Sidebar","Menu","vertical","color","minHeight","paddingLeft","inverted","as","Link","ProtectedRoute","Component","component","render","redirectTo","all","update","create","allLists","allTasks","removeUser","getTasks","getAtask","userId","listId","deleteTask","updateTask","taskId","createTask","CreateTask","setTask","listsId","title","setTitle","description","setDescription","Group","newTask","ListId","status","TaskService","Input","label","TextArea","selectStyle","TaskDropDown","options","TaskServiceUpdateTask","select","setSelect","inline","Select","onClick","Lists","list","setList","setOptions","departments","setDepartments","task","useParams","ListService","DepartmentService","opts","flatMap","Users","map","text","filter","v","i","findIndex","t","margin","templateList","Tasks","length","item","key","padding","verticalAlign","computer","User","floated","compact","UserId","Checkbox","checked","taskStatus","taskData","handleStatus","positive","handleComplete","Message","secondary","negative","Department","setName","users","setUsers","handleClick","department","undefined","concat","multiple","clearable","loader","setLoader","departmentsId","filterOptions","entry1","some","entry2","updatedDepartment","Dimmer","active","Loader","Image","src","content","Content","CreateTemplate","setDepartment","Dropdown","selection","CreateEmployee","selectTemplate","setSelectTemplate","address","setAddress","phoneNumber","setPhoneNumber","office","setOffice","setTemplateList","templateOptions","template","EmployeeService","control","header","lists","setLists","viewAll","setViewAll","viewCompleted","setViewCompleted","viewIncomplete","setViewIncomplete","float","listContent","completedLists","incompleted","relaxed","TemplateList","EmployeeList","EditList","listName","setListName","o1","Departments","o2","Divider","celled","uuidv4","departmentId","deleteDepartment","addedDepartment","withCredentials","App","AuthContex","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25dfd6fd.chunk.js","sourcesContent":["const authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: true,\r\n        user: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        userIsAuthenticated: false,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport authReducer from '../reducers/AuthReducer';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [authStatus, dispatch] = useReducer(authReducer, {\r\n    userIsAuthenticated: false,\r\n    user: {},\r\n  });\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authStatus, dispatch }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React from 'react';\r\nimport { Segment, Header, Button, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Start = () => (\r\n  <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n    <Grid.Row centered>\r\n      <Grid.Column width={10} textAlign=\"center\">\r\n        <Segment stacked>\r\n          <Header size=\"large\">Welcome to Border</Header>\r\n          <p>Welcome to Border the task manager for teams</p>\r\n          <Link to=\"login\">\r\n            <Button>Login</Button>\r\n          </Link>\r\n\r\n          <Link to=\"register\">\r\n            <Button>Register</Button>\r\n          </Link>\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n  </Grid>\r\n);\r\n\r\nexport default Start;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.headers = {\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nconst loginUser = async (data) => axios.post(`/api/user/login`, data);\r\n\r\nconst logoutUser = async (id) => axios.post(id);\r\n\r\nconst registerUser = async (data) => axios.post(`/api/user/register`, data);\r\n\r\nconst edit = async (id) => axios.put(id);\r\n\r\nconst destroy = async (id) => axios.delete(id);\r\n\r\nconst findAll = async () => axios.get(`/api/user/all`).then((res) => res.data);\r\n\r\nconst findOne = async () => axios.get(`/api/user/`).then((res) => res.data);\r\n\r\nexport default {\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  edit,\r\n  destroy,\r\n  findAll,\r\n  findOne,\r\n};\r\n","import React, { useState, useContext } from 'react';\r\n// import { navigate } from '@reach/router';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../context/AuthContex';\r\nimport UserService from '../services/UserService';\r\n\r\nconst Login = (props) => {\r\n  const { history } = props;\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    UserService.loginUser({ email, password })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: 'LOGIN',\r\n          payload: res.data.user,\r\n        });\r\n\r\n        history.push('/home');\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <Grid container centered columns={1} style={{ marginTop: '7em' }}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Login to Border</Header>\r\n            <Form onSubmit={handleLogin}>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n              <p>Don&apos;t have an account? Sign up here.</p>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>{' '}\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Form, Segment, Header, Grid } from 'semantic-ui-react';\r\n\r\nconst Register = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegistration = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post('/api/user/register', {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n      })\r\n      .then(() => {\r\n        history.push('/');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container centered columns={1}>\r\n      <Grid.Row centered>\r\n        <Grid.Column width=\"10\">\r\n          <Segment stacked>\r\n            <Header textAlign=\"center\">Signup to Border</Header>\r\n            <Form onSubmit={handleRegistration}>\r\n              <Form.Field>\r\n                <label htmlFor=\"First Name\">First name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Last Name\">Last Name</label>\r\n                <input\r\n                  placeholder=\"Enter firstname\"\r\n                  required\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Email\">Email</label>\r\n                <input\r\n                  placeholder=\"Enter Email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label htmlFor=\"Password\">Password</label>\r\n                <input\r\n                  placeholder=\"Enter Password\"\r\n                  required\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Button fluid size=\"large\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Segment, Grid } from 'semantic-ui-react';\r\nimport UserService from '../services/UserService';\r\n\r\nconst Home = () => {\r\n  useEffect(() => {\r\n    UserService.findOne().then((res) => console.log(res));\r\n  }, []);\r\n\r\n  return (\r\n    <List divided>\r\n      <List.Item>\r\n        <Link to=\"/lists\">Lists</Link>\r\n      </List.Item>\r\n      <List.Item>\r\n        <Link to=\"/departments\">Departments</Link>\r\n      </List.Item>\r\n      <List.Item>\r\n        <Link to=\"/tasks\">Tasks</Link>\r\n      </List.Item>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nconst ContentWrap = ({ children }) => (\r\n  <Grid stackable columns={16}>\r\n    {children}\r\n  </Grid>\r\n);\r\n\r\nexport default ContentWrap;\r\n","import React from 'react';\r\nimport { Menu, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <Menu\r\n      vertical\r\n      color=\"grey\"\r\n      style={{ marginTop: '0.5em', minHeight: '100vh', paddingLeft: '-1rem' }}\r\n      inverted\r\n    >\r\n      <Menu.Item as={Link} name=\"Lists\" to=\"/lists\" />\r\n\r\n      <Menu.Item as={Link} name=\"Templates\" to=\"/templates\" />\r\n      <Menu.Item as={Link} name=\"Department\" to=\"/departments\" />\r\n\r\n      <Menu.Item>\r\n        <Menu.Menu>\r\n          <Menu.Item name=\"\">logout</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport ContentWrap from '../components/ContentWrap';\r\nimport { AuthContext } from '../context/AuthContex';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  const { authStatus } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        authStatus.userIsAuthenticated ? (\r\n          <ContentWrap>\r\n            <Sidebar />\r\n\r\n            <Component {...props} />\r\n          </ContentWrap>\r\n        ) : (\r\n          <Redirect to={props.redirectTo ? props.redirectTo : '/'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/list`).then((res) => res.data);\r\n\r\nconst get = async (id) => axios.get(`/api/list/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/list/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/list/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) =>\r\n  axios.post(`/api/list`, data).then((res) => res.data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst all = async () =>\r\n  axios.get(`/api/department/all`).then((res) => res.data);\r\n\r\nconst allLists = async () =>\r\n  axios.get(`/api/department/lists`).then((res) => res.data);\r\n\r\nconst allTasks = async () =>\r\n  axios.get(`/api/department/tasks`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/department/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/department/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/department/${id}`, data).then((res) => res.data);\r\n\r\nconst removeUser = async (id, data) =>\r\n  axios\r\n    .delete(`/api/department/${id}/user`, {\r\n      data,\r\n    })\r\n    .then((res) => res.data);\r\n\r\n/* const findAllDepartmentTasks = async () =>\r\n  axios\r\n    .get(`/api/department/tasks`)\r\n    .then((res) => res.data);\r\n\r\nconst findAllDepartmentLists = async () =>\r\n  axios\r\n    .get(`/api/department/lists`)\r\n    .then((res) => console.log(res));\r\n */\r\nconst create = async (data) => axios.post(`/api/department`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n  removeUser,\r\n  /*   findAllDepartmentTasks,\r\n  findAllDepartmentLists, */\r\n  allLists,\r\n  allTasks,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst getTasks = async () => axios.get(`/api/list`);\r\n\r\nconst getAtask = async (userId, listId) => axios.get(`/api/list/${listId}`);\r\n\r\nconst deleteTask = async (id) => axios.delete();\r\n\r\nconst updateTask = async (taskId, data) =>\r\n  axios.put(`/api/task/${taskId}`, data);\r\n\r\nconst createTask = async (data) => axios.post(`/api/task/`, data);\r\n\r\nexport default {\r\n  getTasks,\r\n  getAtask,\r\n  deleteTask,\r\n  updateTask,\r\n  createTask,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Segment } from 'semantic-ui-react';\r\n\r\nimport TaskService from '../services/TaskService';\r\n\r\nconst CreateTask = ({ setTask, listsId }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // const [user, setUser] = useState('');\r\n\r\n  const handleNewTask = () => {\r\n    const newTask = {\r\n      name: title,\r\n      description,\r\n      ListId: listsId,\r\n      status: false,\r\n    };\r\n\r\n    TaskService.createTask(newTask).then((res) => {\r\n      setTask(res.data);\r\n      setTitle('');\r\n      setDescription('');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Segment>\r\n        <Form.Group>\r\n          <Form onSubmit={handleNewTask}>\r\n            <Form.Input\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n\r\n            <Form.TextArea\r\n              placeholder=\"Description\"\r\n              label=\"Description\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              name=\"textarea\"\r\n            />\r\n\r\n            <Form.Button type=\"submit\">Save</Form.Button>\r\n          </Form>\r\n        </Form.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nconst selectStyle = {\r\n  width: 200,\r\n  marginTop: '0.5em',\r\n};\r\n\r\nconst TaskDropDown = ({ options, TaskServiceUpdateTask, id, setTask }) => {\r\n  const [select, setSelect] = useState('');\r\n\r\n  const handleClick = (taskId) => {\r\n    const taskData = {\r\n      userId: select,\r\n    };\r\n    TaskServiceUpdateTask(taskId, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n    setSelect('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group inline style={selectStyle}>\r\n        <Form.Select\r\n          placeholder=\"Assign User\"\r\n          options={options}\r\n          onChange={handleSelect}\r\n          value={select}\r\n        />\r\n\r\n        <Button onClick={() => handleClick(id)}>Save</Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskDropDown;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Form,\r\n  Container,\r\n  Grid,\r\n  Segment,\r\n  Header,\r\n  Button,\r\n  Message,\r\n} from 'semantic-ui-react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../services/ListService';\r\nimport DepartmentService from '../services/DepartmentService';\r\nimport CreateTask from './CreateTask';\r\nimport TaskService from '../services/TaskService';\r\nimport TaskDropDown from './TaskDropDown';\r\n\r\nconst Lists = ({ history }) => {\r\n  const [list, setList] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [select, setSelect] = useState();\r\n\r\n  const [task, setTask] = useState([]);\r\n\r\n  const listsId = useParams();\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      console.log(res);\r\n      setList(res);\r\n    });\r\n    DepartmentService.allTasks(listsId.id).then((res) => {\r\n      setDepartments(res);\r\n    });\r\n    DepartmentService.allLists(listsId.id).then((res) => {\r\n      const format = res.flatMap((user) =>\r\n        user.Users.map(({ id, firstName, lastName }) => ({\r\n          value: id,\r\n          text: `${firstName} ${lastName}`,\r\n        }))\r\n      );\r\n\r\n      const opts = format.filter(\r\n        (v, i, a) => a.findIndex((t) => t.value === v.value) === i\r\n      );\r\n      setOptions(opts);\r\n    });\r\n  }, [task]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    e.preventDefault();\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleStatus = (taskStatus, taskId) => {\r\n    const taskData = {\r\n      status: !taskStatus,\r\n    };\r\n\r\n    TaskService.updateTask(taskId, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const removeUser = (id) => {\r\n    const taskData = {\r\n      UserId: null,\r\n    };\r\n\r\n    TaskService.updateTask(id, taskData).then((res) => {\r\n      setTask([res]);\r\n    });\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const data = {\r\n      name: list.name,\r\n      description: list.description,\r\n      status: true,\r\n      templateList: list.templateList,\r\n    };\r\n\r\n    ListService.update(list.id, data).then((res) => {\r\n      history.push('/lists');\r\n    });\r\n  };\r\n\r\n  const deleteList = () => {\r\n    ListService.destroy(listsId.id).then(() => history.push('/lists'));\r\n  };\r\n\r\n  const CompleteSegment = () => {\r\n    return list.Tasks != null &&\r\n      list.Tasks.length !== 0 &&\r\n      list.status !== true ? (\r\n      <>\r\n        {list.Tasks.filter((item) => item.status).length ===\r\n        list.Tasks.length ? (\r\n          <Button positive fluid onClick={() => handleComplete()}>\r\n            Complete list\r\n          </Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </>\r\n    ) : (\r\n      <Message positive>This list has been completed</Message>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          {/* ? `Task for template:  ${list.name}`\r\n            : `Tasks for:  ${list.name}` */}\r\n          {list && list.templateList\r\n            ? `Task for template:  ${list.name}`\r\n            : `Tasks for:  ${list.name}`}\r\n        </Header>\r\n      </div>\r\n      {list != null ? (\r\n        <>\r\n          <Segment>\r\n            <Grid stackable columns={13} textAlign=\"left\">\r\n              {list.Tasks != null && list.Tasks.length !== 0 ? (\r\n                list.Tasks.map((item) => (\r\n                  <Grid.Row key={item.id} style={{ padding: '0' }}>\r\n                    <Grid.Column verticalAlign=\"middle\" computer=\"3\">\r\n                      {item.name}\r\n                    </Grid.Column>\r\n                    <Grid.Column verticalAlign=\"middle\" computer=\"5\">\r\n                      {item.User != null && item.User != null ? (\r\n                        <>\r\n                          <p>\r\n                            Assigned: {item.User.firstName} {item.User.lastName}\r\n                            <Button\r\n                              floated=\"right\"\r\n                              compact\r\n                              onClick={() => removeUser(item.id)}\r\n                            >\r\n                              x\r\n                            </Button>\r\n                          </p>\r\n                        </>\r\n                      ) : (\r\n                        'No assigned user'\r\n                      )}\r\n                    </Grid.Column>\r\n                    <Grid.Column verticalAlign=\"middle\" computer=\"5\">\r\n                      <TaskDropDown\r\n                        options={options}\r\n                        TaskServiceUpdateTask={TaskService.updateTask}\r\n                        id={item.id}\r\n                        setTask={setTask}\r\n                      />\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                      <Form>\r\n                        <Form.Checkbox\r\n                          inline\r\n                          label=\"completed\"\r\n                          checked={item.status}\r\n                          onChange={() => handleStatus(item.status, item.id)}\r\n                        />\r\n                      </Form>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                ))\r\n              ) : (\r\n                <>\r\n                  <p>No tasks available for this list.</p>\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </Segment>\r\n          <CompleteSegment />\r\n        </>\r\n      ) : null}\r\n      <Header>Add task</Header>\r\n      <CreateTask\r\n        setTask={setTask}\r\n        listsId={listsId.id}\r\n        departments={departments}\r\n      />\r\n      <Button.Group floated=\"right\">\r\n        <Button secondary>\r\n          <Link style={{ color: 'White' }} to={`/lists/edit/${listsId.id}`}>\r\n            Edit\r\n          </Link>\r\n        </Button>\r\n\r\n        <Button negative onClick={() => deleteList()}>\r\n          Delete\r\n        </Button>\r\n      </Button.Group>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Form,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  Container,\r\n} from 'semantic-ui-react';\r\nimport DepartmentService from '../services/DepartmentService';\r\n\r\nimport UserService from '../services/UserService';\r\n\r\nconst Department = () => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // UserService.findAll().then((res) => setUsers(res));\r\n    UserService.findAll().then((res) => setUsers(res));\r\n    DepartmentService.all().then((res) => {\r\n      setDepartments(res);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    const department = {\r\n      name,\r\n      description,\r\n      users: select,\r\n    };\r\n\r\n    DepartmentService.create(department).then((res) => {\r\n      setDepartments(departments.concat([res.data]));\r\n    });\r\n    setSelect([]);\r\n    setName('');\r\n    setDescription();\r\n  };\r\n\r\n  const options = users.map(({ id, firstName, lastName }) => ({\r\n    value: id,\r\n    text: `${firstName} ${lastName}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleClick = (id) => {\r\n    DepartmentService.destroy(id);\r\n    const filter = departments.filter((department) => department.id !== id);\r\n    setDepartments(filter);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Departments\r\n        </Header>\r\n      </div>\r\n      <Segment>\r\n        {departments.length !== null && departments.length !== 0 ? (\r\n          <Grid stackable columns={13} textAlign=\"left\">\r\n            {departments.map((item) => (\r\n              <Grid.Row key={item.id} centered>\r\n                <Grid.Column verticalAlign=\"middle\" computer=\"4\">\r\n                  <Link to={`/departments/${item.id}`}>{item.name}</Link>\r\n                </Grid.Column>\r\n                <Grid.Column verticalAlign=\"middle\" computer=\"4\">\r\n                  {item.Users !== undefined ? item.Users.length : null}\r\n                </Grid.Column>\r\n                <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                  <Button onClick={() => handleClick(item.id)}>Delete</Button>\r\n                </Grid.Column>\r\n                <Grid.Column verticalAlign=\"middle\" computer=\"2\">\r\n                  <Button onClick={() => handleClick(item.id)}>Edit</Button>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            ))}\r\n          </Grid>\r\n        ) : (\r\n          <p>No departments available, please create one below</p>\r\n        )}\r\n      </Segment>\r\n      {users.length > 0 ? (\r\n        <Grid.Column width=\"13\">\r\n          <Header as=\"h3\">Create new department</Header>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={onSubmit}>\r\n                <Form.Input\r\n                  placeholder=\"Enter department name\"\r\n                  label=\"Department name\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n\r\n                {/*        <TextArea\r\n                placeholder=\"Description\"\r\n                label=\"Description\"\r\n                value={description}\r\n                setInputValue={setDescription}\r\n                name=\"textarea\"\r\n              />\r\n */}\r\n\r\n                <Form.Select\r\n                  placeholder=\"Add user to department\"\r\n                  options={options}\r\n                  onChange={handleSelect}\r\n                  value={select}\r\n                  multiple\r\n                  clearable\r\n                />\r\n                <Form.Button type=\"submit\">Save</Form.Button>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      ) : null}{' '}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Segment,\r\n  Form,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n  Container,\r\n  List,\r\n} from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useParams } from 'react-router-dom';\r\n// import { navigate } from '@reach/router';\r\nimport DepartmentService from '../services/DepartmentService';\r\nimport UserService from '../services/UserService';\r\n\r\nconst Department = ({ history }) => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [select, setSelect] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  const departmentsId = useParams();\r\n\r\n  useEffect(() => {\r\n    DepartmentService.get(departmentsId.id).then((res) => {\r\n      setDepartments(res);\r\n    });\r\n    UserService.findAll().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = users.filter(\r\n      (entry1) =>\r\n        departments.Users &&\r\n        !departments.Users.some((entry2) => entry1.id === entry2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, firstName, lastName }) => ({\r\n      value: id,\r\n      text: `${firstName} ${lastName}`,\r\n    }));\r\n    setOptions(filterOptions);\r\n    setLoader(false);\r\n  }, [users, departments]);\r\n\r\n  const onSubmit = () => {\r\n    if (name === '' && select.length === 0) {\r\n      const updatedDepartment = {\r\n        name: departments.name,\r\n        users: departments.Users,\r\n      };\r\n      DepartmentService.update(departmentsId.id, updatedDepartment).then(\r\n        (res) => {\r\n          setDepartments(res);\r\n        }\r\n      );\r\n    } else {\r\n      const data = {\r\n        name,\r\n        users: select,\r\n      };\r\n\r\n      DepartmentService.update(departmentsId.id, data).then((res) => {\r\n        setDepartments(res);\r\n      });\r\n    }\r\n    setSelect([]);\r\n    setName('');\r\n  };\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    console.log(departments.id);\r\n    console.log(departmentsId.id);\r\n    DepartmentService.destroy(departmentsId.id);\r\n    history.push('/departments');\r\n  };\r\n\r\n  const handleClick = (e, id) => {\r\n    e.preventDefault();\r\n    DepartmentService.removeUser(departmentsId.id, { UserId: id }).then(\r\n      (res) => {\r\n        setDepartments(res);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header as=\"h2\" textAlign=\"left\">\r\n          Edit: {departments.name}\r\n        </Header>\r\n      </div>\r\n      {!loader ? (\r\n        <Grid stackable columns={16}>\r\n          <Grid.Column width=\"16\">\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Change name on department: {departments.name}</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Input\r\n                      placeholder=\"New name\"\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <Form.Button content=\"Save\" />\r\n                  </Form.Group>\r\n                </Form>\r\n                <Form onSubmit={handleDelete}>\r\n                  <Form.Button>Delete</Form.Button>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n            <Grid.Row>\r\n              <Segment style={{ marginTop: '2em' }}>\r\n                <Header>Users in department: </Header>\r\n                {departments.Users !== undefined &&\r\n                departments.Users.length !== 0 ? (\r\n                  departments.Users.map((item) => (\r\n                    <List divided key={item.id}>\r\n                      <List.Item>\r\n                        <List.Content floated=\"left\" verticalAlign=\"bottom\">\r\n                          {item.firstName} {item.lastName}\r\n                        </List.Content>\r\n                        <List.Content verticalAlign=\"top\">\r\n                          <Button\r\n                            compact\r\n                            onClick={(e) => handleClick(e, item.id)}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                ) : (\r\n                  <p>No users members in this department</p>\r\n                )}\r\n              </Segment>\r\n            </Grid.Row>\r\n\r\n            <Segment style={{ marginTop: '2em' }}>\r\n              <Header>Add users</Header>\r\n              <Grid.Row>\r\n                <Form onSubmit={onSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Select\r\n                      placeholder=\"Add user to department\"\r\n                      options={options}\r\n                      onChange={handleSelect}\r\n                      value={select}\r\n                      multiple\r\n                      clearable\r\n                    />\r\n\r\n                    <Form.Button type=\"submit\">Save</Form.Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      ) : (\r\n        <Segment>\r\n          <Dimmer active inverted>\r\n            <Loader size=\"large\">Loading</Loader>\r\n          </Dimmer>\r\n\r\n          <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\r\n        </Segment>\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Department;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Dropdown,\r\n} from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport ListService from '../services/ListService';\r\nimport DepartmentService from '../services/DepartmentService';\r\n\r\nconst CreateTemplate = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n\r\n  const [department, setDepartment] = useState([]);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.all().then((res) => setDepartment(res));\r\n  }, []);\r\n\r\n  const options = department.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: title,\r\n      description,\r\n      departments: select,\r\n      status: false,\r\n      templateList: true,\r\n    };\r\n\r\n    ListService.create(data).then((res) => {\r\n      if (res.templateList) {\r\n        history.push(`/lists/${res.id}`);\r\n      }\r\n      setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n    });\r\n    /*     setTitle('');\r\n      setDescription('');\r\n      setSelect([]);\r\n   */\r\n    /*     if (templateList) {\r\n        navigate('/home');\r\n      } */\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"10\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Create new template</Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={handleNewList}>\r\n                <Form.Input\r\n                  placeholder=\"Title\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                {options ? (\r\n                  <Dropdown\r\n                    placeholder=\"Select departments\"\r\n                    fluid\r\n                    label=\"Department\"\r\n                    multiple\r\n                    // search\r\n                    selection\r\n                    value={select}\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    // defaultValue={[]}\r\n                    clearable\r\n                  />\r\n                ) : null}\r\n                <div style={{ marginTop: '1em' }}>\r\n                  <Button type=\"submit\">Save</Button>\r\n                </div>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default CreateTemplate;\r\n","import axios from 'axios';\r\n\r\nconst all = async () => axios.get(`/api/employee/all`).then((res) => res.data);\r\n\r\nconst get = async (id) =>\r\n  axios.get(`/api/employee/${id}`).then((res) => res.data);\r\n\r\nconst destroy = async (id) => axios.delete(`/api/employee/${id}`);\r\n\r\nconst update = async (id, data) =>\r\n  axios.put(`/api/employee/${id}`, data).then((res) => res.data);\r\n\r\nconst create = async (data) => axios.post(`/api/employee`, data);\r\n\r\nexport default {\r\n  all,\r\n  get,\r\n  destroy,\r\n  update,\r\n  create,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Segment, Input, Button, Grid, Header } from 'semantic-ui-react';\r\n// import { navigate } from '@reach/router';\r\n\r\nimport EmployeeService from '../services/EmployeeService';\r\nimport ListService from '../services/ListService';\r\n\r\nconst CreateEmployee = ({ history }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [office, setOffice] = useState('');\r\n  const [templateList, setTemplateList] = useState([]);\r\n\r\n  const templateOptions = templateList.map(({ id, name }) => ({\r\n    value: id,\r\n    text: `${name}`,\r\n  }));\r\n\r\n  const handleSelectTemplate = (e, { value }) => {\r\n    setSelectTemplate(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ListService.all().then((res) => {\r\n      const template = res.filter((item) => item.templateList);\r\n      setTemplateList(template);\r\n    });\r\n  }, []);\r\n\r\n  const handleNewList = (e) => {\r\n    e.preventDefault();\r\n    if (selectTemplate !== undefined) {\r\n      const data = {\r\n        listId: selectTemplate,\r\n        description,\r\n        departments: select,\r\n        status: false,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phoneNumber,\r\n        address,\r\n        office,\r\n        title,\r\n      };\r\n\r\n      EmployeeService.create(data).then(() => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setFirstName('');\r\n        setLastName('');\r\n        setOffice('');\r\n        setAddress('');\r\n        setEmail('');\r\n        setPhoneNumber('');\r\n        history.push('/lists');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Create new list</Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Form.Group>\r\n              <Form onSubmit={handleNewList}>\r\n                <Form.Input\r\n                  placeholder=\"First name\"\r\n                  label=\"First name\"\r\n                  type=\"text\"\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Last name\"\r\n                  label=\"Last name\"\r\n                  type=\"text\"\r\n                  value={lastName}\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Title\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Email\"\r\n                  label=\"Email\"\r\n                  type=\"text\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Adress\"\r\n                  label=\"Adress\"\r\n                  type=\"text\"\r\n                  value={address}\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Phone Number\"\r\n                  label=\"Phone number\"\r\n                  control={Input}\r\n                  type=\"text\"\r\n                  value={phoneNumber}\r\n                  onChange={(e) => setPhoneNumber(e.target.value)}\r\n                />\r\n\r\n                <Form.Input\r\n                  placeholder=\"Office\"\r\n                  label=\"Office\"\r\n                  type=\"text\"\r\n                  value={office}\r\n                  onChange={(e) => setOffice(e.target.value)}\r\n                />\r\n\r\n                {templateOptions ? (\r\n                  <Form.Select\r\n                    placeholder=\"Use template\"\r\n                    options={templateOptions}\r\n                    onChange={handleSelectTemplate}\r\n                    value={select}\r\n                    clearable\r\n                  />\r\n                ) : null}\r\n\r\n                <Button type=\"submit\">Save</Button>\r\n              </Form>\r\n            </Form.Group>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Header, List, Button, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport DepartmentService from '../services/DepartmentService';\r\nimport ListService from '../services/ListService';\r\n\r\nconst Lists = ({ history, template, header }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const [viewCompleted, setViewCompleted] = useState(false);\r\n  const [viewIncomplete, setViewIncomplete] = useState(true);\r\n\r\n  useEffect(() => {\r\n    DepartmentService.allLists().then((res) => {\r\n      setLists(res);\r\n      console.log(res);\r\n    });\r\n\r\n    ListService.all((res) => console.log(res));\r\n  }, []);\r\n\r\n  const handleIncomplete = () => {\r\n    setViewIncomplete(true);\r\n    setViewCompleted(false);\r\n    setViewAll(false);\r\n  };\r\n  const handleCompleted = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(true);\r\n    setViewAll(false);\r\n  };\r\n  const handleAll = () => {\r\n    setViewIncomplete(false);\r\n    setViewCompleted(false);\r\n    setViewAll(true);\r\n  };\r\n\r\n  // return <>Lists</>;\r\n  const DisplayList = () => {\r\n    let listContent;\r\n\r\n    // const taskFilter = item.Tasks.filter((task) => task.status !== true).length;\r\n\r\n    // eslint-disable-next-line no-unused-expressions\r\n    template\r\n      ? (listContent = lists[0].Lists.filter((item) => item.templateList))\r\n      : (listContent = lists[0].Lists.filter((item) => !item.templateList));\r\n\r\n    const completedLists = listContent.filter((item) => item.status);\r\n    const incompleted = listContent.filter((item) => !item.status);\r\n\r\n    return lists[0].Lists.length !== 0 ? (\r\n      <List divided relaxed>\r\n        {viewIncomplete\r\n          ? incompleted.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewCompleted\r\n          ? completedLists.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n        {viewAll\r\n          ? listContent.map((item) => (\r\n              <List.Item key={item.id}>\r\n                {console.log(item)}\r\n                <List.Content floated=\"left\">\r\n                  <Link to={`/lists/${item.id}`}>{item.name}</Link>\r\n                </List.Content>\r\n                <List.Content floated=\"left\">\r\n                  <p>\r\n                    {item.Tasks.length != null && !item.templateList ? (\r\n                      <>\r\n                        Completed tasks:{' '}\r\n                        {item.Tasks.filter((task) => task.status).length}{' '}\r\n                        {' / '}\r\n                        {item.Tasks.length}\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </p>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          : ''}\r\n      </List>\r\n    ) : (\r\n      <p>{template ? 'No templates available' : 'No lists available'}</p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header float=\"left\" textAlign=\"left\">\r\n          {header}\r\n        </Header>\r\n      </div>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          {// eslint-disable-next-line no-nested-ternary\r\n          lists != null && lists.length !== 0 ? (\r\n            <>\r\n              <Button.Group>\r\n                <Button onClick={() => handleIncomplete()}>Incomplete</Button>\r\n                <Button onClick={() => handleCompleted()}>Completed</Button>\r\n                <Button onClick={() => handleAll()}>All</Button>\r\n              </Button.Group>\r\n              <Segment>\r\n                {' '}\r\n                <DisplayList />\r\n              </Segment>\r\n\r\n              {template ? (\r\n                <Link to=\"/templates/create\">\r\n                  <Button>New template</Button>\r\n                </Link>\r\n              ) : (\r\n                <Link to=\"/lists/create\">\r\n                  <Button>New employee list</Button>\r\n                </Link>\r\n              )}\r\n            </>\r\n          ) : (\r\n            'No lists available, please join a department first'\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React from 'react';\r\n\r\nimport Lists from './Lists';\r\n\r\nconst TemplateList = () => {\r\n  return <Lists template header=\"Templates\" />;\r\n};\r\n\r\nexport default TemplateList;\r\n","import React from 'react';\r\n\r\nimport Lists from './Lists';\r\n\r\nconst EmployeeList = () => {\r\n  return <Lists header=\"Employee lists\" />;\r\n};\r\n\r\nexport default EmployeeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListService from '../services/ListService';\r\nimport DepartmentService from '../services/DepartmentService';\r\n\r\nconst EditList = ({ history }) => {\r\n  const [list, setList] = useState([]);\r\n  const listsId = useParams();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [select, setSelect] = useState();\r\n  const [selectTemplate, setSelectTemplate] = useState();\r\n  const [listName, setListName] = useState();\r\n  const [departments, setDepartments] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [templateList, setTemplateList] = useState('');\r\n\r\n  useEffect(() => {\r\n    ListService.get(listsId.id).then((res) => {\r\n      setList(res);\r\n    });\r\n    DepartmentService.all().then((res) => {\r\n      setDepartments(res);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const opts = departments.filter((o1) =>\r\n      list.Departments.some((o2) => o1.id !== o2.id)\r\n    );\r\n    const filterOptions = opts.map(({ id, name }) => ({\r\n      value: id,\r\n      text: name,\r\n    }));\r\n\r\n    setOptions(filterOptions);\r\n  }, [departments]);\r\n\r\n  const handleSelect = (e, { value }) => {\r\n    setSelect(value);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    if (select !== undefined) {\r\n      const data = {\r\n        name: listName !== list.name ? listName : list.name,\r\n        description:\r\n          description !== list.description ? description : list.description,\r\n        addedDepartment: select,\r\n        status: false,\r\n        templateList: templateList !== list.templateList ? templateList : title,\r\n      };\r\n\r\n      console.log(data);\r\n\r\n      ListService.update(listsId.id, data).then((res) => {\r\n        setTitle('');\r\n        setDescription('');\r\n        setSelect([]);\r\n        setSelectTemplate([]);\r\n        setList(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = (id) => {\r\n    console.log('click', id);\r\n    const filter = list.Departments.filter(\r\n      (department) => department.id !== id\r\n    );\r\n\r\n    const data = {\r\n      departmentId: id,\r\n    };\r\n\r\n    ListService.update(listsId.id, data).then((res) => {\r\n      console.log(res);\r\n      setList(res);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column width=\"13\">\r\n      <div style={{ margin: '2em 0' }}>\r\n        <Header textAlign=\"left\">Edit list: {list.name}</Header>\r\n      </div>\r\n      {list.name !== undefined && departments !== undefined ? (\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Header as=\"h4\">Summary for {list.name}</Header>\r\n              {list.description ? <p>Decription: {list.description}</p> : ''}\r\n              <Divider />\r\n\r\n              <h5>Template:</h5>\r\n              {list.templateList ? <p>Yes</p> : <p>No</p>}\r\n\r\n              <Header as=\"h5\">Departments:</Header>\r\n              {list.Departments !== undefined\r\n                ? list.Departments.map((item) => (\r\n                    <List celled>\r\n                      <List.Item key={uuidv4()}>\r\n                        <List.Content floated=\"left\">{item.name}</List.Content>\r\n                        <List.Content floated=\"right\">\r\n                          <Button\r\n                            compact\r\n                            onClick={() => deleteDepartment(item.id)}\r\n                          >\r\n                            X\r\n                          </Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  ))\r\n                : ''}\r\n              <Button floated=\"right\">Delete</Button>\r\n              <br />\r\n              <br />\r\n            </Segment>\r\n\r\n            <Segment>\r\n              <Form.Group>\r\n                <Form onSubmit={handleUpdate}>\r\n                  <Form.Input\r\n                    placeholder=\"enter new name\"\r\n                    label=\"New name\"\r\n                    type=\"text\"\r\n                    value={listName}\r\n                    onChange={(e) => setListName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.TextArea\r\n                    placeholder=\"Enter description\"\r\n                    label=\"New description\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Select\r\n                    placeholder=\"Add department\"\r\n                    options={options}\r\n                    onChange={handleSelect}\r\n                    value={select}\r\n                    clearable\r\n                  />\r\n\r\n                  <Form.Checkbox\r\n                    inline\r\n                    label=\"Template\"\r\n                    checked={list.templateList}\r\n                  />\r\n\r\n                  <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n              </Form.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default EditList;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AuthContextProvider from './context/AuthContex';\r\nimport Start from './components/Start';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Home from './components/Home';\r\nimport ProtectedRoute from './routes/ProtectedRoute';\r\nimport List from './components/List';\r\nimport Departments from './components/Departments';\r\nimport Department from './components/Department';\r\nimport CreateTemplate from './components/CreateTemplate';\r\nimport CreateEmployee from './components/CreateEmployee';\r\nimport TemplateList from './components/TemplateList';\r\nimport EmployeeList from './components/EmployeeLists';\r\nimport EditList from './components/EditList';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <AuthContextProvider>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Start} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/register\" exact component={Register} />\r\n\r\n            <ProtectedRoute path=\"/home\" component={Home} />\r\n\r\n            <ProtectedRoute path=\"/lists\" exact component={EmployeeList} />\r\n            <ProtectedRoute\r\n              path=\"/lists/create\"\r\n              exact\r\n              component={CreateEmployee}\r\n            />\r\n            <ProtectedRoute path=\"/lists/edit/:id\" exact component={EditList} />\r\n            <ProtectedRoute path=\"/lists/:id\" exact component={List} />\r\n\r\n            <ProtectedRoute\r\n              path=\"/templates/create\"\r\n              exact\r\n              component={CreateTemplate}\r\n            />\r\n            <ProtectedRoute path=\"/templates\" exact component={TemplateList} />\r\n\r\n            <ProtectedRoute path=\"/departments\" exact component={Departments} />\r\n            <ProtectedRoute\r\n              path=\"/departments/:id\"\r\n              exact\r\n              component={Department}\r\n            />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </AuthContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}